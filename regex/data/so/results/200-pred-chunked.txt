=======================================================
Test on utterance 1:
  Line 0: write a regular expression that ONLY matches strings
    Top prediction: repeat(fb:en.any,1,)
    All 2 derivations and their counts: 
      fb:en.any : 1
      repeat(fb:en.any,1,) : 1
  Line 1: NO NUMBERS
    Top prediction: fb:en.num
    All 1 derivations and their counts: 
      fb:en.num : 1
  Line 2: NO SPECIAL CHARACTERS
    Top prediction: fb:en.sp
    All 3 derivations and their counts: 
      fb:en.sp : 1
      fb:en.let : 1
      fb:en.any : 1
  Line 3: just letters from A - Z.
    Top prediction: fb:en.let
    All 1 derivations and their counts: 
      fb:en.let : 1
=======================================================
Test on utterance 2:
  Line 0: write regular expression in C# to validate that the input does not contain double <M0>
    Top prediction: not(contain(fb:en.const))
    All 4 derivations and their counts: 
      not(fb:en.const) : 1
      not(contain(fb:en.const)) : 1
      fb:en.const : 1
      contain(fb:en.const) : 1
=======================================================
Test on utterance 3:
  Line 0: write regular expression that allows only digits
    Top prediction: repeat(fb:en.num,1,)
    All 2 derivations and their counts: 
      fb:en.num : 1
      repeat(fb:en.num,1,) : 1
  Line 1: characters like <M0> <M1> <M2> <M3> <M4> and <M5>.
    Top prediction: and(fb:en.const,fb:en.const)
    All 8 derivations and their counts: 
      and(fb:en.const,fb:en.let) : 1
      and(fb:en.const,fb:en.const) : 10
      and(fb:en.any,fb:en.const) : 1
      and(fb:en.const,fb:en.any) : 1
      fb:en.let : 1
      fb:en.const : 6
      fb:en.any : 1
      and(fb:en.let,fb:en.const) : 1
=======================================================
Test on utterance 4:
  Line 0: validate a textbox with decimal number. 
    Top prediction: contain(fb:en.dp)
    All 4 derivations and their counts: 
      fb:en.num : 1
      contain(fb:en.dp) : 1
      fb:en.dp : 1
      contain(fb:en.num) : 1
  Line 1: First two digit and decimal point and followed by a single digit. 
    Top prediction: repeat(and(and(fb:en.num,fb:en.dp),fb:en.num),2)
derivSize == beamSize
    All 152 derivations and their counts: 
      repeat(and(and(repeat(fb:en.num,2),fb:en.dp),fb:en.num),1) : 1
      repeat(and(fb:en.num,fb:en.num),2) : 4
      repeat(and(fb:en.num,and(fb:en.num,fb:en.dp)),1) : 2
      followedby(fb:en.dp,fb:en.num) : 1
      and(fb:en.num,and(fb:en.num,fb:en.dp)) : 2
      and(fb:en.num,fb:en.dp) : 2
      and(and(fb:en.num,fb:en.dp),repeat(fb:en.num,1)) : 1
      repeat(followedby(fb:en.num,fb:en.dp),1) : 1
      and(repeat(fb:en.num,1,2),and(fb:en.num,fb:en.dp)) : 1
      and(repeat(fb:en.num,2),and(fb:en.num,fb:en.dp)) : 1
      repeat(and(fb:en.num,fb:en.dp),1) : 1
      and(and(fb:en.dp,fb:en.num),repeat(fb:en.num,1,2)) : 1
      repeat(and(repeat(fb:en.num,2),and(fb:en.num,fb:en.dp)),1) : 1
      and(fb:en.dp,repeat(repeat(fb:en.num,2),1)) : 1
      and(repeat(and(fb:en.num,fb:en.dp),2),fb:en.num) : 1
      and(and(fb:en.dp,fb:en.num),fb:en.num) : 2
      fb:en.num : 2
      repeat(and(fb:en.num,and(fb:en.dp,fb:en.num)),1,2) : 2
      repeat(and(fb:en.num,fb:en.dp),1,2) : 1
      fb:en.dp : 1
      repeat(and(fb:en.num,repeat(and(fb:en.dp,fb:en.num),2)),1) : 1
      repeat(fb:en.num,1,2) : 1
      repeat(followedby(fb:en.num,fb:en.num),1,2) : 1
      repeat(and(fb:en.num,and(fb:en.num,fb:en.dp)),2) : 2
      repeat(and(fb:en.num,repeat(and(fb:en.num,fb:en.dp),2)),1) : 1
      repeat(and(fb:en.num,and(fb:en.dp,repeat(fb:en.num,2))),1) : 1
      repeat(followedby(fb:en.num,fb:en.dp),2) : 1
      repeat(repeat(and(and(fb:en.dp,fb:en.num),fb:en.num),2),1) : 2
      repeat(and(fb:en.num,fb:en.dp),2) : 2
      and(repeat(repeat(fb:en.num,2),1),and(fb:en.dp,fb:en.num)) : 1
      followedby(repeat(and(fb:en.num,fb:en.dp),2),fb:en.num) : 1
      repeat(and(repeat(and(fb:en.dp,fb:en.num),2),fb:en.num),1) : 1
      repeat(and(fb:en.num,and(fb:en.dp,fb:en.num)),2) : 2
      repeat(followedby(and(repeat(fb:en.num,2),fb:en.dp),fb:en.num),1) : 1
      followedby(repeat(fb:en.num,2),fb:en.dp) : 1
      repeat(followedby(and(fb:en.num,fb:en.dp),fb:en.num),2) : 1
      repeat(and(fb:en.num,repeat(fb:en.dp,2)),1) : 1
      and(repeat(fb:en.dp,2),fb:en.num) : 1
      followedby(and(repeat(fb:en.num,2),fb:en.dp),fb:en.num) : 1
      repeat(repeat(followedby(fb:en.dp,fb:en.num),2),1) : 1
      and(repeat(fb:en.num,2),and(fb:en.dp,fb:en.num)) : 1
      followedby(fb:en.num,fb:en.num) : 1
      and(repeat(repeat(fb:en.num,2),1),and(fb:en.num,fb:en.dp)) : 1
      and(fb:en.num,and(repeat(fb:en.num,2),fb:en.dp)) : 1
      and(and(fb:en.num,fb:en.dp),repeat(fb:en.num,2)) : 1
      repeat(and(fb:en.num,followedby(fb:en.dp,fb:en.num)),1,2) : 1
      repeat(and(repeat(fb:en.dp,2),fb:en.num),1) : 1
      repeat(followedby(and(fb:en.dp,repeat(fb:en.num,2)),fb:en.num),1) : 1
      and(repeat(repeat(fb:en.num,2),1),followedby(fb:en.dp,fb:en.num)) : 1
      repeat(and(fb:en.num,followedby(fb:en.dp,fb:en.num)),1) : 1
      repeat(and(followedby(fb:en.dp,fb:en.num),fb:en.num),1) : 1
      repeat(repeat(followedby(fb:en.num,fb:en.dp),2),1) : 1
      repeat(and(repeat(and(fb:en.num,fb:en.dp),2),fb:en.num),1) : 1
      repeat(and(fb:en.num,fb:en.num),1) : 4
      followedby(repeat(fb:en.num,2),fb:en.num) : 1
      repeat(and(fb:en.num,and(fb:en.dp,fb:en.num)),1) : 2
      repeat(and(and(fb:en.dp,repeat(fb:en.num,2)),fb:en.num),1) : 1
      repeat(followedby(and(fb:en.num,fb:en.dp),fb:en.num),1) : 1
      and(and(fb:en.dp,fb:en.num),repeat(repeat(fb:en.num,2),1)) : 1
      repeat(followedby(repeat(and(fb:en.dp,fb:en.num),2),fb:en.num),1) : 1
      and(fb:en.num,repeat(and(fb:en.dp,fb:en.num),2)) : 1
      repeat(repeat(followedby(and(fb:en.dp,fb:en.num),fb:en.num),2),1) : 1
      and(fb:en.num,repeat(fb:en.dp,2)) : 1
      repeat(repeat(fb:en.num,2),1) : 2
      repeat(and(repeat(fb:en.num,2),fb:en.num),1) : 2
      and(fb:en.dp,repeat(fb:en.num,2)) : 1
      repeat(and(followedby(fb:en.dp,fb:en.num),repeat(fb:en.num,2)),1) : 1
      repeat(followedby(repeat(and(fb:en.num,fb:en.dp),2),fb:en.num),1) : 1
      repeat(and(fb:en.num,and(fb:en.num,fb:en.dp)),1,2) : 2
      and(followedby(fb:en.dp,fb:en.num),repeat(repeat(fb:en.num,2),1)) : 1
      repeat(and(fb:en.num,followedby(fb:en.dp,fb:en.num)),2) : 1
      repeat(and(and(fb:en.dp,fb:en.num),fb:en.num),1,2) : 2
      and(fb:en.num,and(fb:en.dp,fb:en.num)) : 2
      and(repeat(fb:en.num,1),and(fb:en.dp,fb:en.num)) : 1
      repeat(and(and(fb:en.num,fb:en.dp),fb:en.num),1,2) : 2
      repeat(followedby(and(fb:en.num,fb:en.dp),fb:en.num),1,2) : 1
      repeat(and(followedby(fb:en.dp,fb:en.num),fb:en.num),2) : 1
      repeat(followedby(fb:en.num,fb:en.num),1) : 1
      and(followedby(fb:en.dp,fb:en.num),repeat(fb:en.num,1,2)) : 1
      repeat(followedby(and(fb:en.dp,fb:en.num),fb:en.num),1,2) : 1
      repeat(and(and(fb:en.dp,fb:en.num),fb:en.num),1) : 2
      repeat(followedby(and(fb:en.dp,fb:en.num),fb:en.num),1) : 1
      repeat(and(fb:en.dp,fb:en.num),2) : 2
      and(followedby(fb:en.dp,fb:en.num),fb:en.num) : 1
      and(fb:en.num,and(fb:en.dp,repeat(fb:en.num,2))) : 1
      and(repeat(and(fb:en.dp,fb:en.num),2),fb:en.num) : 1
      followedby(and(fb:en.dp,repeat(fb:en.num,2)),fb:en.num) : 1
      repeat(repeat(and(fb:en.num,fb:en.num),2),1) : 4
      and(fb:en.dp,repeat(fb:en.num,1)) : 1
      repeat(repeat(followedby(and(fb:en.num,fb:en.dp),fb:en.num),2),1) : 1
      repeat(and(and(fb:en.dp,fb:en.num),repeat(fb:en.num,2)),1) : 1
      repeat(and(and(fb:en.num,fb:en.dp),repeat(fb:en.num,2)),1) : 1
      and(fb:en.num,repeat(fb:en.num,2)) : 2
      and(fb:en.num,followedby(fb:en.dp,fb:en.num)) : 1
      repeat(and(fb:en.num,fb:en.num),1,2) : 4
      followedby(and(fb:en.dp,fb:en.num),fb:en.num) : 1
      repeat(followedby(fb:en.num,fb:en.num),2) : 1
      and(followedby(fb:en.dp,fb:en.num),repeat(fb:en.num,1)) : 1
      repeat(followedby(repeat(fb:en.num,2),fb:en.num),1) : 1
      repeat(and(and(fb:en.dp,fb:en.num),fb:en.num),2) : 2
      followedby(repeat(and(fb:en.dp,fb:en.num),2),fb:en.num) : 1
      repeat(repeat(and(fb:en.num,and(fb:en.num,fb:en.dp)),2),1) : 2
      repeat(and(fb:en.dp,fb:en.num),1) : 1
      and(and(fb:en.num,fb:en.dp),repeat(fb:en.num,1,2)) : 1
      repeat(and(repeat(fb:en.num,2),fb:en.dp),1) : 1
      repeat(followedby(and(fb:en.dp,fb:en.num),fb:en.num),2) : 1
      and(repeat(fb:en.num,1,2),followedby(fb:en.dp,fb:en.num)) : 1
      and(and(repeat(fb:en.num,2),fb:en.dp),fb:en.num) : 1
      and(and(fb:en.num,fb:en.dp),fb:en.num) : 2
      followedby(fb:en.num,fb:en.dp) : 1
      and(and(fb:en.num,fb:en.dp),repeat(repeat(fb:en.num,2),1)) : 1
      repeat(and(repeat(fb:en.num,2),followedby(fb:en.dp,fb:en.num)),1) : 1
      and(fb:en.dp,fb:en.num) : 2
      and(repeat(fb:en.num,1,2),and(fb:en.dp,fb:en.num)) : 1
      repeat(followedby(repeat(fb:en.num,2),fb:en.dp),1) : 1
      repeat(repeat(and(fb:en.num,and(fb:en.dp,fb:en.num)),2),1) : 2
      repeat(followedby(repeat(fb:en.dp,2),fb:en.num),1) : 1
      repeat(repeat(and(fb:en.num,followedby(fb:en.dp,fb:en.num)),2),1) : 1
      and(and(fb:en.dp,fb:en.num),repeat(fb:en.num,1)) : 1
      repeat(repeat(fb:en.dp,2),1) : 1
      repeat(and(fb:en.num,and(repeat(fb:en.num,2),fb:en.dp)),1) : 1
      repeat(and(fb:en.dp,repeat(fb:en.num,2)),1) : 1
      and(fb:en.num,fb:en.num) : 4
      repeat(fb:en.num,1) : 1
      and(repeat(fb:en.num,2),fb:en.dp) : 1
      followedby(repeat(fb:en.dp,2),fb:en.num) : 1
      and(fb:en.num,repeat(and(fb:en.num,fb:en.dp),2)) : 1
      repeat(and(and(fb:en.num,fb:en.dp),fb:en.num),2) : 2
      repeat(and(repeat(fb:en.num,2),and(fb:en.dp,fb:en.num)),1) : 1
      repeat(and(followedby(fb:en.dp,fb:en.num),fb:en.num),1,2) : 1
      repeat(and(fb:en.dp,fb:en.num),1,2) : 1
      and(and(fb:en.dp,repeat(fb:en.num,2)),fb:en.num) : 1
      and(fb:en.dp,repeat(fb:en.num,1,2)) : 1
      repeat(repeat(and(and(fb:en.num,fb:en.dp),fb:en.num),2),1) : 2
      repeat(repeat(and(fb:en.num,fb:en.dp),2),1) : 2
      and(followedby(fb:en.dp,fb:en.num),repeat(fb:en.num,2)) : 1
      repeat(followedby(fb:en.dp,fb:en.num),2) : 1
      and(repeat(fb:en.num,2),fb:en.num) : 2
      repeat(and(and(fb:en.num,fb:en.dp),fb:en.num),1) : 2
      repeat(fb:en.num,2) : 2
      and(repeat(repeat(fb:en.num,2),1),fb:en.dp) : 1
      repeat(and(fb:en.num,repeat(fb:en.num,2)),1) : 2
      and(repeat(fb:en.num,1),and(fb:en.num,fb:en.dp)) : 1
      and(repeat(fb:en.num,2),followedby(fb:en.dp,fb:en.num)) : 1
      repeat(repeat(and(followedby(fb:en.dp,fb:en.num),fb:en.num),2),1) : 1
      repeat(repeat(followedby(fb:en.num,fb:en.num),2),1) : 1
      and(repeat(fb:en.num,1,2),fb:en.dp) : 1
      followedby(and(fb:en.num,fb:en.dp),fb:en.num) : 1
      repeat(followedby(fb:en.num,fb:en.dp),1,2) : 1
      repeat(repeat(and(fb:en.dp,fb:en.num),2),1) : 2
      and(and(fb:en.dp,fb:en.num),repeat(fb:en.num,2)) : 1
      repeat(fb:en.dp,2) : 1
  Line 2: i need the exact digit like this two digit.single digit.
    Top prediction: fb:en.num
    All 2 derivations and their counts: 
      fb:en.num : 2
      repeat(fb:en.num,2) : 1
  Line 3: The final single digit is 5 only.
    Top prediction: endwith(fb:en.num)
    All 2 derivations and their counts: 
      fb:en.num : 1
      endwith(fb:en.num) : 1
=======================================================
Test on utterance 5:
  Line 0: What is the regular expression for validating a month with the leading zero?
    Top prediction: 
=======================================================
Test on utterance 6:
  Line 0: The input will be in the form a <M0> separated tuple of three values. 
    Top prediction: sep(fb:en.const)
    All 2 derivations and their counts: 
      sep(fb:en.const) : 1
      fb:en.const : 1
  Line 1: The first value will be an integer (potentially a long in terms of size/length)
    Top prediction: 
  Line 2: with the other two values being either numeric or a string
    Top prediction: repeat(or(fb:en.any,fb:en.num),2)
    All 24 derivations and their counts: 
      repeat(or(fb:en.any,fb:en.num),2) : 1
      repeat(fb:en.any,2) : 1
      fb:en.num : 1
      contain(repeat(fb:en.num,2)) : 1
      contain(repeat(fb:en.any,2)) : 1
      or(fb:en.any,fb:en.num) : 1
      or(repeat(fb:en.num,2),fb:en.any) : 1
      contain(fb:en.any) : 1
      or(fb:en.num,fb:en.any) : 1
      repeat(fb:en.num,2) : 1
      or(fb:en.any,contain(fb:en.num)) : 1
      contain(repeat(or(fb:en.any,fb:en.num),2)) : 1
      repeat(or(fb:en.num,fb:en.any),2) : 1
      contain(or(fb:en.num,fb:en.any)) : 1
      or(fb:en.any,repeat(fb:en.num,2)) : 1
      contain(or(fb:en.any,repeat(fb:en.num,2))) : 1
      contain(or(fb:en.any,fb:en.num)) : 1
      or(fb:en.any,contain(repeat(fb:en.num,2))) : 1
      or(contain(fb:en.num),fb:en.any) : 1
      contain(or(repeat(fb:en.num,2),fb:en.any)) : 1
      fb:en.any : 1
      or(contain(repeat(fb:en.num,2)),fb:en.any) : 1
      contain(repeat(or(fb:en.num,fb:en.any),2)) : 1
      contain(fb:en.num) : 1
=======================================================
Test on utterance 7:
  Line 0: Need to validate the following string using regular expression: Key = Value ; Key = Value ; Key = Value and so on. 
    Top prediction: fb:en.any
    All 1 derivations and their counts: 
      fb:en.any : 1
  Line 1: Key and value can contain anything except <M0> and <M1>
    Top prediction: contain(not(and(fb:en.const,fb:en.const)))
    All 16 derivations and their counts: 
      and(fb:en.const,contain(fb:en.const)) : 1
      and(contain(fb:en.const),fb:en.const) : 1
      not(fb:en.const) : 2
      and(fb:en.const,not(fb:en.const)) : 1
      contain(and(fb:en.const,fb:en.const)) : 2
      and(not(fb:en.const),fb:en.const) : 1
      and(fb:en.const,fb:en.const) : 2
      contain(and(not(fb:en.const),fb:en.const)) : 1
      contain(not(fb:en.const)) : 2
      and(contain(not(fb:en.const)),fb:en.const) : 1
      contain(not(and(fb:en.const,fb:en.const))) : 2
      not(and(fb:en.const,fb:en.const)) : 2
      and(fb:en.const,contain(not(fb:en.const))) : 1
      contain(and(fb:en.const,not(fb:en.const))) : 1
      fb:en.const : 2
      contain(fb:en.const) : 2
  Line 2: Key and Value both cannot be blank or empty with <M2>
    Top prediction: not(contain(fb:en.const))
    All 4 derivations and their counts: 
      not(fb:en.const) : 1
      not(contain(fb:en.const)) : 1
      fb:en.const : 1
      contain(fb:en.const) : 1
  Line 3: Input string does not ends with <M3>
    Top prediction: not(fb:en.any)
    All 12 derivations and their counts: 
      endwith(not(fb:en.any)) : 1
      not(endwith(fb:en.const)) : 1
      not(fb:en.const) : 1
      endwith(fb:en.any) : 1
      not(contain(fb:en.const)) : 1
      not(fb:en.any) : 1
      endwith(fb:en.const) : 1
      fb:en.any : 1
      fb:en.const : 1
      not(endwith(contain(fb:en.const))) : 1
      endwith(contain(fb:en.const)) : 1
      contain(fb:en.const) : 1
=======================================================
Test on utterance 8:
  Line 0: It should accept numbers only with decimal part 0 or 5 only.
    Top prediction: fb:en.num
    All 9 derivations and their counts: 
      repeat(fb:en.dp,1,) : 1
      contain(or(0,5)) : 1
      fb:en.num : 1
      repeat(or(0,5),1,) : 1
      or(0,5) : 1
      contain(fb:en.dp) : 1
      fb:en.dp : 1
      repeat(contain(fb:en.dp),1,) : 1
      repeat(contain(or(0,5)),1,) : 1
=======================================================
Test on utterance 9:
  Line 0: I want this value to accept up to 18 digits before the decimal, and 1 digit after. 
    Top prediction: repeat(followedby(fb:en.num,and(repeat(fb:en.num,1),fb:en.dp)),1,18)
derivSize == beamSize
    All 183 derivations and their counts: 
      followedby(fb:en.dp,fb:en.num) : 2
      followedby(repeat(fb:en.num,18),fb:en.num) : 1
      followedby(repeat(fb:en.num,1,18),fb:en.num) : 1
      repeat(followedby(fb:en.num,and(fb:en.num,fb:en.dp)),1,18) : 1
      and(fb:en.num,repeat(followedby(fb:en.num,fb:en.dp),18)) : 1
      repeat(and(fb:en.dp,repeat(fb:en.num,1)),1,18) : 1
      repeat(and(fb:en.num,fb:en.dp),18) : 1
      and(repeat(fb:en.num,18),repeat(fb:en.num,1)) : 1
      and(followedby(fb:en.num,fb:en.dp),fb:en.num) : 1
      and(repeat(fb:en.num,1),repeat(followedby(fb:en.num,fb:en.dp),1,18)) : 1
      followedby(repeat(fb:en.num,1,18),fb:en.dp) : 1
      followedby(repeat(fb:en.num,1),repeat(fb:en.num,1,18)) : 1
      and(repeat(fb:en.num,1,18),fb:en.num) : 1
      repeat(and(followedby(fb:en.num,fb:en.dp),fb:en.num),18) : 1
      followedby(and(fb:en.dp,fb:en.num),repeat(fb:en.num,18)) : 1
      repeat(followedby(repeat(fb:en.num,1),fb:en.num),18) : 1
      and(repeat(fb:en.num,1),repeat(fb:en.num,18)) : 1
      and(repeat(fb:en.dp,18),repeat(fb:en.num,1)) : 1
      and(fb:en.num,fb:en.dp) : 1
      repeat(and(fb:en.num,repeat(fb:en.num,1)),1,18) : 1
      repeat(fb:en.num,1,18) : 2
      and(repeat(fb:en.num,1),repeat(followedby(fb:en.num,fb:en.dp),18)) : 1
      followedby(repeat(fb:en.num,1),fb:en.dp) : 1
      and(followedby(repeat(fb:en.num,18),fb:en.dp),fb:en.num) : 1
      repeat(and(fb:en.dp,fb:en.num),18) : 1
      repeat(followedby(fb:en.num,followedby(fb:en.num,fb:en.dp)),18) : 2
      fb:en.num : 1
      and(repeat(fb:en.num,1),repeat(fb:en.dp,18)) : 1
      fb:en.dp : 1
      repeat(followedby(followedby(fb:en.dp,repeat(fb:en.num,1)),fb:en.num),1,18) : 1
      repeat(followedby(repeat(fb:en.num,1),followedby(fb:en.num,fb:en.dp)),1,18) : 1
      and(followedby(repeat(fb:en.num,1,18),fb:en.dp),repeat(fb:en.num,1)) : 1
      followedby(repeat(fb:en.num,1),followedby(fb:en.num,fb:en.dp)) : 1
      repeat(fb:en.num,18) : 2
      and(fb:en.num,followedby(fb:en.num,fb:en.dp)) : 1
      repeat(followedby(fb:en.num,and(repeat(fb:en.num,1),fb:en.dp)),1,18) : 1
      repeat(followedby(fb:en.num,and(fb:en.dp,fb:en.num)),1,18) : 1
      repeat(and(repeat(fb:en.num,1),fb:en.dp),1,18) : 1
      repeat(and(followedby(fb:en.num,fb:en.dp),fb:en.num),1,18) : 1
      followedby(repeat(fb:en.num,1,18),and(fb:en.dp,fb:en.num)) : 1
      followedby(repeat(fb:en.num,18),and(fb:en.dp,fb:en.num)) : 1
      followedby(repeat(fb:en.num,1),repeat(followedby(fb:en.num,fb:en.dp),1,18)) : 1
      followedby(fb:en.dp,repeat(fb:en.num,1)) : 1
      repeat(and(fb:en.num,fb:en.num),18) : 2
      and(repeat(followedby(fb:en.num,fb:en.dp),1,18),fb:en.num) : 1
      followedby(repeat(fb:en.num,1),repeat(fb:en.dp,18)) : 1
      followedby(fb:en.dp,repeat(fb:en.num,1,18)) : 1
      repeat(followedby(repeat(fb:en.num,1),followedby(fb:en.num,fb:en.dp)),18) : 1
      followedby(repeat(fb:en.num,1,18),and(repeat(fb:en.num,1),fb:en.dp)) : 1
      followedby(fb:en.num,and(fb:en.dp,repeat(fb:en.num,1))) : 1
      repeat(and(repeat(fb:en.num,1),fb:en.num),18) : 1
      and(repeat(followedby(fb:en.num,fb:en.dp),18),repeat(fb:en.num,1)) : 1
      repeat(followedby(fb:en.dp,fb:en.num),1,18) : 2
      followedby(and(fb:en.dp,repeat(fb:en.num,1)),repeat(fb:en.num,1,18)) : 1
      and(fb:en.num,followedby(repeat(fb:en.num,1,18),fb:en.dp)) : 1
      repeat(and(fb:en.num,followedby(fb:en.num,fb:en.dp)),1,18) : 1
      and(fb:en.num,repeat(fb:en.dp,1,18)) : 1
      repeat(fb:en.num,18,1) : 1
      repeat(and(fb:en.dp,repeat(fb:en.num,1)),18) : 1
      followedby(followedby(fb:en.dp,repeat(fb:en.num,1)),fb:en.num) : 1
      followedby(and(fb:en.num,fb:en.dp),repeat(fb:en.num,1,18)) : 1
      repeat(followedby(and(fb:en.num,fb:en.dp),fb:en.num),18) : 1
      repeat(followedby(repeat(fb:en.num,1),fb:en.num),1,18) : 1
      followedby(fb:en.num,fb:en.num) : 2
      repeat(followedby(and(fb:en.dp,repeat(fb:en.num,1)),fb:en.num),18) : 1
      and(repeat(fb:en.num,1),followedby(repeat(fb:en.num,18),fb:en.dp)) : 1
      followedby(followedby(fb:en.dp,fb:en.num),fb:en.num) : 1
      followedby(and(fb:en.dp,repeat(fb:en.num,1)),fb:en.num) : 1
      followedby(fb:en.num,repeat(fb:en.dp,1,18)) : 1
      and(repeat(fb:en.num,1),followedby(fb:en.num,fb:en.dp)) : 1
      followedby(fb:en.num,and(repeat(fb:en.num,1),fb:en.dp)) : 1
      repeat(followedby(followedby(fb:en.dp,fb:en.num),fb:en.num),1,18) : 1
      repeat(followedby(fb:en.num,repeat(fb:en.num,1)),18) : 1
      followedby(and(fb:en.dp,repeat(fb:en.num,1)),repeat(fb:en.num,18)) : 1
      repeat(followedby(fb:en.dp,fb:en.num),18) : 2
      repeat(followedby(and(fb:en.dp,repeat(fb:en.num,1)),fb:en.num),1,18) : 1
      and(fb:en.num,repeat(fb:en.num,1)) : 1
      and(repeat(followedby(fb:en.num,fb:en.dp),1,18),repeat(fb:en.num,1)) : 1
      followedby(repeat(fb:en.num,18),and(fb:en.num,fb:en.dp)) : 1
      and(fb:en.num,followedby(repeat(fb:en.num,18),fb:en.dp)) : 1
      repeat(repeat(fb:en.num,1),18) : 1
      followedby(fb:en.num,repeat(fb:en.num,18)) : 1
      followedby(repeat(fb:en.num,1),fb:en.num) : 1
      and(repeat(fb:en.num,1),followedby(repeat(fb:en.num,1,18),fb:en.dp)) : 1
      repeat(and(followedby(fb:en.num,fb:en.dp),repeat(fb:en.num,1)),18) : 1
      followedby(and(repeat(fb:en.num,1),fb:en.dp),repeat(fb:en.num,1,18)) : 1
      followedby(fb:en.num,repeat(fb:en.dp,18)) : 1
      repeat(and(repeat(fb:en.num,1),followedby(fb:en.num,fb:en.dp)),18) : 1
      followedby(followedby(fb:en.dp,fb:en.num),repeat(fb:en.num,18)) : 1
      repeat(and(repeat(fb:en.num,1),fb:en.dp),18) : 1
      and(followedby(fb:en.num,fb:en.dp),repeat(fb:en.num,1)) : 1
      repeat(followedby(followedby(fb:en.dp,fb:en.num),fb:en.num),18) : 1
      followedby(fb:en.num,followedby(fb:en.num,fb:en.dp)) : 2
      followedby(repeat(fb:en.num,1,18),repeat(fb:en.num,1)) : 1
      repeat(followedby(and(fb:en.dp,fb:en.num),fb:en.num),18) : 1
      followedby(repeat(fb:en.num,1),followedby(repeat(fb:en.num,1,18),fb:en.dp)) : 1
      repeat(followedby(fb:en.num,followedby(fb:en.num,fb:en.dp)),1,18) : 2
      repeat(followedby(fb:en.num,fb:en.num),18) : 2
      and(repeat(fb:en.dp,18),fb:en.num) : 1
      repeat(followedby(fb:en.num,followedby(repeat(fb:en.num,1),fb:en.dp)),18) : 1
      followedby(followedby(fb:en.dp,repeat(fb:en.num,1)),repeat(fb:en.num,1,18)) : 1
      repeat(followedby(fb:en.num,and(fb:en.dp,repeat(fb:en.num,1))),1,18) : 1
      repeat(and(repeat(fb:en.num,1),fb:en.num),1,18) : 1
      repeat(and(fb:en.num,repeat(fb:en.num,1)),18) : 1
      repeat(followedby(fb:en.num,fb:en.dp),18) : 2
      followedby(fb:en.dp,repeat(fb:en.num,18)) : 1
      followedby(repeat(fb:en.num,1,18),and(fb:en.dp,repeat(fb:en.num,1))) : 1
      followedby(followedby(fb:en.dp,repeat(fb:en.num,1)),repeat(fb:en.num,18)) : 1
      and(fb:en.dp,repeat(fb:en.num,1)) : 1
      and(repeat(followedby(fb:en.num,fb:en.dp),18),fb:en.num) : 1
      followedby(repeat(fb:en.num,1),repeat(fb:en.dp,1,18)) : 1
      followedby(fb:en.num,and(fb:en.num,fb:en.dp)) : 1
      followedby(repeat(fb:en.num,1,18),followedby(fb:en.num,fb:en.dp)) : 1
      followedby(repeat(fb:en.num,1),followedby(repeat(fb:en.num,18),fb:en.dp)) : 1
      repeat(and(followedby(fb:en.num,fb:en.dp),repeat(fb:en.num,1)),1,18) : 1
      repeat(followedby(fb:en.dp,repeat(fb:en.num,1)),18) : 1
      followedby(repeat(fb:en.num,1),repeat(fb:en.num,18)) : 1
      and(repeat(fb:en.dp,1,18),fb:en.num) : 1
      repeat(repeat(fb:en.num,1),1,18) : 1
      followedby(and(fb:en.dp,fb:en.num),fb:en.num) : 1
      followedby(fb:en.num,followedby(repeat(fb:en.num,1),fb:en.dp)) : 1
      repeat(followedby(fb:en.num,followedby(repeat(fb:en.num,1),fb:en.dp)),1,18) : 1
      followedby(repeat(fb:en.num,1,18),and(fb:en.num,fb:en.dp)) : 1
      and(fb:en.num,repeat(fb:en.num,18)) : 1
      repeat(followedby(fb:en.num,fb:en.num),1,18) : 2
      followedby(repeat(fb:en.num,18),repeat(fb:en.num,1)) : 1
      repeat(followedby(and(repeat(fb:en.num,1),fb:en.dp),fb:en.num),1,18) : 1
      and(fb:en.num,repeat(followedby(fb:en.num,fb:en.dp),1,18)) : 1
      repeat(followedby(repeat(fb:en.num,1),fb:en.dp),18) : 1
      repeat(followedby(and(fb:en.dp,fb:en.num),fb:en.num),1,18) : 1
      followedby(fb:en.num,followedby(repeat(fb:en.num,18),fb:en.dp)) : 1
      followedby(repeat(fb:en.num,18),fb:en.dp) : 1
      followedby(fb:en.num,fb:en.dp) : 2
      and(followedby(repeat(fb:en.num,18),fb:en.dp),repeat(fb:en.num,1)) : 1
      repeat(fb:en.dp,18) : 1
      and(fb:en.dp,fb:en.num) : 1
      and(repeat(fb:en.num,1),fb:en.dp) : 1
      and(repeat(fb:en.dp,1,18),repeat(fb:en.num,1)) : 1
      followedby(fb:en.num,repeat(followedby(fb:en.num,fb:en.dp),18)) : 1
      repeat(followedby(fb:en.num,and(repeat(fb:en.num,1),fb:en.dp)),18) : 1
      repeat(followedby(repeat(fb:en.num,1),fb:en.dp),1,18) : 1
      followedby(repeat(fb:en.num,18),and(fb:en.dp,repeat(fb:en.num,1))) : 1
      followedby(and(fb:en.dp,fb:en.num),repeat(fb:en.num,1,18)) : 1
      followedby(fb:en.num,repeat(followedby(fb:en.num,fb:en.dp),1,18)) : 1
      repeat(and(fb:en.num,followedby(fb:en.num,fb:en.dp)),18) : 1
      followedby(fb:en.num,repeat(fb:en.num,1)) : 1
      and(fb:en.num,fb:en.num) : 2
      repeat(and(repeat(fb:en.num,1),followedby(fb:en.num,fb:en.dp)),1,18) : 1
      repeat(and(fb:en.dp,fb:en.num),1,18) : 1
      followedby(fb:en.num,repeat(fb:en.num,1,18)) : 1
      repeat(fb:en.num,1,1) : 1
      repeat(followedby(fb:en.num,and(fb:en.num,fb:en.dp)),18) : 1
      and(repeat(fb:en.num,18),fb:en.num) : 1
      followedby(repeat(fb:en.num,1),repeat(followedby(fb:en.num,fb:en.dp),18)) : 1
      followedby(and(repeat(fb:en.num,1),fb:en.dp),repeat(fb:en.num,18)) : 1
      followedby(and(fb:en.num,fb:en.dp),repeat(fb:en.num,18)) : 1
      repeat(followedby(and(fb:en.num,fb:en.dp),fb:en.num),1,18) : 1
      repeat(followedby(fb:en.num,and(fb:en.dp,fb:en.num)),18) : 1
      followedby(and(repeat(fb:en.num,1),fb:en.dp),fb:en.num) : 1
      followedby(fb:en.num,and(fb:en.dp,fb:en.num)) : 1
      repeat(followedby(fb:en.num,fb:en.dp),1,18) : 2
      and(fb:en.num,repeat(fb:en.num,1,18)) : 1
      repeat(followedby(fb:en.num,repeat(fb:en.num,1)),1,18) : 1
      followedby(repeat(fb:en.num,1,18),followedby(repeat(fb:en.num,1),fb:en.dp)) : 1
      repeat(and(fb:en.num,fb:en.num),1,18) : 2
      repeat(and(fb:en.num,fb:en.dp),1,18) : 1
      and(followedby(repeat(fb:en.num,1,18),fb:en.dp),fb:en.num) : 1
      and(fb:en.num,repeat(fb:en.dp,18)) : 1
      and(repeat(fb:en.num,1),repeat(fb:en.dp,1,18)) : 1
      and(repeat(fb:en.num,1),fb:en.num) : 1
      and(repeat(fb:en.num,1,18),repeat(fb:en.num,1)) : 1
      repeat(followedby(and(repeat(fb:en.num,1),fb:en.dp),fb:en.num),18) : 1
      followedby(repeat(fb:en.num,18),followedby(fb:en.num,fb:en.dp)) : 1
      followedby(fb:en.num,followedby(repeat(fb:en.num,1,18),fb:en.dp)) : 1
      and(repeat(fb:en.num,1),repeat(fb:en.num,1,18)) : 1
      repeat(fb:en.dp,1,18) : 1
      followedby(repeat(fb:en.num,18),and(repeat(fb:en.num,1),fb:en.dp)) : 1
      repeat(followedby(followedby(fb:en.dp,repeat(fb:en.num,1)),fb:en.num),18) : 1
      repeat(followedby(fb:en.num,and(fb:en.dp,repeat(fb:en.num,1))),18) : 1
      followedby(repeat(fb:en.num,18),followedby(repeat(fb:en.num,1),fb:en.dp)) : 1
      followedby(and(fb:en.num,fb:en.dp),fb:en.num) : 1
      repeat(followedby(fb:en.dp,repeat(fb:en.num,1)),1,18) : 1
      followedby(followedby(fb:en.dp,fb:en.num),repeat(fb:en.num,1,18)) : 1
  Line 1: With the decimal point and the digit after it being optional
    Top prediction: and(optional(fb:en.num),fb:en.dp)
    All 37 derivations and their counts: 
      contain(and(fb:en.num,fb:en.dp)) : 1
      optional(and(contain(fb:en.dp),fb:en.num)) : 1
      contain(optional(fb:en.num)) : 1
      optional(followedby(fb:en.num,fb:en.dp)) : 1
      optional(contain(fb:en.num)) : 1
      optional(contain(and(fb:en.dp,fb:en.num))) : 1
      and(contain(fb:en.dp),fb:en.num) : 1
      and(optional(fb:en.num),fb:en.dp) : 1
      optional(fb:en.dp) : 1
      contain(and(fb:en.dp,optional(fb:en.num))) : 1
      contain(optional(and(fb:en.num,fb:en.dp))) : 1
      optional(and(fb:en.num,contain(fb:en.dp))) : 1
      and(optional(fb:en.num),contain(fb:en.dp)) : 1
      followedby(fb:en.num,contain(fb:en.dp)) : 1
      optional(fb:en.num) : 1
      and(fb:en.num,fb:en.dp) : 1
      contain(fb:en.dp) : 1
      optional(and(fb:en.dp,fb:en.num)) : 1
      optional(contain(and(fb:en.num,fb:en.dp))) : 1
      and(contain(fb:en.dp),optional(fb:en.num)) : 1
      optional(followedby(fb:en.num,contain(fb:en.dp))) : 1
      and(fb:en.num,contain(fb:en.dp)) : 1
      contain(fb:en.num) : 1
      fb:en.num : 1
      optional(contain(followedby(fb:en.num,fb:en.dp))) : 1
      fb:en.dp : 1
      contain(and(fb:en.dp,fb:en.num)) : 1
      contain(followedby(fb:en.num,fb:en.dp)) : 1
      contain(and(optional(fb:en.num),fb:en.dp)) : 1
      followedby(fb:en.num,fb:en.dp) : 1
      contain(optional(followedby(fb:en.num,fb:en.dp))) : 1
      contain(optional(and(fb:en.dp,fb:en.num))) : 1
      and(fb:en.dp,fb:en.num) : 1
      and(fb:en.dp,optional(fb:en.num)) : 1
      contain(optional(fb:en.dp)) : 1
      optional(and(fb:en.num,fb:en.dp)) : 1
      optional(contain(fb:en.dp)) : 1
=======================================================
Test on utterance 10:
  Line 0: The value should not contain only <M0> and if there is a <M1> the length should be more than 3 characters including <M2>. 
    Top prediction: not(contain(repeat(and(repeat(fb:en.const,3),fb:en.const),1,)))
derivSize == beamSize
    All 177 derivations and their counts: 
      not(contain(repeat(and(repeat(contain(fb:en.const),3,),fb:en.const),1,))) : 1
      not(contain(and(repeat(fb:en.let,1),repeat(fb:en.const,1,)))) : 1
      not(contain(and(fb:en.const,fb:en.any))) : 1
      not(contain(and(repeat(fb:en.const,1),fb:en.const))) : 1
      not(contain(and(fb:en.const,repeat(contain(fb:en.const),3)))) : 1
      not(contain(repeat(and(repeat(fb:en.const,1,),fb:en.const),3))) : 1
      not(contain(repeat(and(fb:en.const,repeat(contain(fb:en.const),3)),1,))) : 1
      not(contain(repeat(and(repeat(fb:en.let,1),fb:en.const),1,))) : 1
      not(contain(repeat(fb:en.const,3))) : 2
      not(contain(and(repeat(repeat(fb:en.const,3),1),fb:en.const))) : 1
      not(contain(repeat(repeat(contain(fb:en.const),3,),1,))) : 1
      not(contain(repeat(repeat(repeat(contain(fb:en.const),3,),1),1,))) : 1
      not(contain(repeat(fb:en.let,1,))) : 1
      not(contain(repeat(and(fb:en.const,contain(fb:en.const)),1,))) : 1
      not(contain(and(fb:en.const,repeat(fb:en.let,3)))) : 1
      not(contain(repeat(and(repeat(repeat(contain(fb:en.const),3),1),fb:en.const),1,))) : 1
      not(contain(repeat(fb:en.let,3))) : 1
      not(contain(repeat(fb:en.any,3))) : 1
      not(contain(and(repeat(fb:en.const,1,),repeat(repeat(contain(fb:en.const),3,),1)))) : 1
      not(contain(and(repeat(contain(fb:en.const),3,),fb:en.const))) : 1
      not(contain(repeat(and(repeat(fb:en.any,3),fb:en.const),1,))) : 1
      not(contain(repeat(and(fb:en.const,fb:en.const),3))) : 2
      not(contain(repeat(and(fb:en.const,repeat(repeat(fb:en.any,3),1)),1,))) : 1
      not(contain(repeat(and(repeat(fb:en.const,3,),fb:en.const),1,))) : 1
      not(contain(repeat(repeat(repeat(fb:en.any,3),1),1,))) : 1
      not(contain(and(repeat(fb:en.const,3,),repeat(fb:en.const,1,)))) : 1
      not(contain(repeat(and(fb:en.const,fb:en.let),1,))) : 1
      not(contain(and(fb:en.const,repeat(contain(fb:en.const),3,)))) : 1
      not(contain(and(repeat(repeat(fb:en.let,3),1),repeat(fb:en.const,1,)))) : 1
      not(contain(repeat(and(repeat(fb:en.any,1),fb:en.const),1,))) : 1
      not(contain(and(repeat(contain(fb:en.const),3,),repeat(fb:en.const,1,)))) : 1
      not(contain(and(fb:en.const,fb:en.let))) : 1
      not(contain(repeat(and(contain(fb:en.const),fb:en.const),1,))) : 1
      not(contain(repeat(repeat(fb:en.let,3),1,))) : 1
      not(contain(and(repeat(fb:en.const,1,),repeat(fb:en.let,1)))) : 1
      not(contain(repeat(and(fb:en.const,repeat(repeat(fb:en.let,3),1)),1,))) : 1
      not(contain(fb:en.const)) : 1
      not(contain(repeat(repeat(fb:en.let,1),1,))) : 1
      not(contain(repeat(and(fb:en.const,repeat(repeat(fb:en.const,3),1)),1,))) : 1
      not(contain(repeat(and(fb:en.const,repeat(repeat(fb:en.let,3,),1)),1,))) : 1
      not(contain(and(repeat(fb:en.const,3),repeat(fb:en.const,1,)))) : 2
      not(contain(and(repeat(fb:en.const,1,),repeat(repeat(fb:en.const,3,),1)))) : 1
      not(contain(repeat(repeat(repeat(fb:en.const,3,),1),1,))) : 1
      not(contain(repeat(and(repeat(repeat(fb:en.const,3),1),fb:en.const),1,))) : 1
      not(contain(repeat(and(repeat(repeat(fb:en.let,3),1),fb:en.const),1,))) : 1
      not(contain(and(repeat(repeat(fb:en.any,3,),1),repeat(fb:en.const,1,)))) : 1
      not(contain(and(repeat(fb:en.let,1),fb:en.const))) : 1
      not(contain(repeat(and(fb:en.const,repeat(fb:en.let,1)),1,))) : 1
      not(contain(and(repeat(fb:en.const,1,),repeat(contain(fb:en.const),1)))) : 1
      not(contain(repeat(contain(fb:en.const),3))) : 1
      not(contain(and(fb:en.const,repeat(fb:en.any,1)))) : 1
      not(contain(and(repeat(contain(fb:en.const),1),fb:en.const))) : 1
      not(contain(and(fb:en.const,repeat(fb:en.let,3,)))) : 1
      not(contain(repeat(and(fb:en.const,repeat(fb:en.const,1,)),3))) : 1
      not(contain(repeat(and(fb:en.const,fb:en.const),1,))) : 4
      not(contain(repeat(and(fb:en.const,repeat(fb:en.any,3)),1,))) : 1
      not(contain(repeat(repeat(fb:en.any,1),1,))) : 1
      not(contain(and(repeat(fb:en.const,1,),fb:en.const))) : 2
      not(contain(repeat(fb:en.any,1,))) : 1
      not(contain(repeat(and(fb:en.let,fb:en.const),1,))) : 1
      not(contain(and(repeat(fb:en.const,1,),repeat(fb:en.let,3)))) : 1
      not(contain(repeat(and(fb:en.const,repeat(repeat(fb:en.any,3,),1)),1,))) : 1
      not(contain(and(repeat(fb:en.const,1,),repeat(repeat(fb:en.const,3),1)))) : 1
      not(contain(repeat(repeat(repeat(contain(fb:en.const),3),1),1,))) : 1
      not(contain(and(fb:en.any,repeat(fb:en.const,1,)))) : 1
      not(contain(and(repeat(repeat(fb:en.const,3,),1),fb:en.const))) : 1
      not(contain(repeat(and(fb:en.const,repeat(fb:en.const,1)),1,))) : 1
      not(contain(and(repeat(contain(fb:en.const),1),repeat(fb:en.const,1,)))) : 1
      not(contain(repeat(repeat(contain(fb:en.const),1),1,))) : 1
      not(contain(and(repeat(fb:en.any,1),fb:en.const))) : 1
      not(contain(and(repeat(repeat(fb:en.any,3),1),fb:en.const))) : 1
      not(contain(and(fb:en.const,repeat(repeat(fb:en.any,3),1)))) : 1
      not(contain(and(contain(fb:en.const),repeat(fb:en.const,1,)))) : 1
      not(contain(repeat(and(fb:en.const,repeat(repeat(contain(fb:en.const),3),1)),1,))) : 1
      not(contain(repeat(repeat(fb:en.any,3,),1,))) : 1
      not(contain(and(fb:en.const,repeat(repeat(contain(fb:en.const),3),1)))) : 1
      not(contain(and(repeat(fb:en.const,1,),repeat(repeat(fb:en.let,3,),1)))) : 1
      not(contain(and(fb:en.const,repeat(fb:en.const,3,)))) : 1
      not(contain(repeat(fb:en.const,1,))) : 3
      not(contain(and(repeat(repeat(fb:en.let,3,),1),repeat(fb:en.const,1,)))) : 1
      not(contain(and(fb:en.const,contain(fb:en.const)))) : 1
      not(contain(and(fb:en.let,repeat(fb:en.const,1,)))) : 1
      not(contain(and(fb:en.const,repeat(repeat(fb:en.any,3,),1)))) : 1
      not(contain(and(repeat(fb:en.const,1,),fb:en.let))) : 1
      not(contain(repeat(repeat(repeat(fb:en.const,3),1),1,))) : 1
      not(contain(and(repeat(repeat(fb:en.const,3),1),repeat(fb:en.const,1,)))) : 1
      not(contain(repeat(repeat(fb:en.const,1,),3))) : 2
      not(contain(and(fb:en.const,repeat(fb:en.const,1)))) : 1
      not(contain(and(repeat(fb:en.const,1,),repeat(fb:en.const,3,)))) : 1
      not(contain(repeat(repeat(and(fb:en.const,fb:en.const),3),1,))) : 2
      not(contain(repeat(repeat(repeat(fb:en.any,3,),1),1,))) : 1
      not(contain(repeat(repeat(repeat(fb:en.let,3,),1),1,))) : 1
      not(contain(repeat(and(fb:en.const,fb:en.any),1,))) : 1
      not(contain(and(fb:en.const,repeat(repeat(contain(fb:en.const),3,),1)))) : 1
      not(contain(repeat(and(repeat(repeat(fb:en.any,3),1),fb:en.const),1,))) : 1
      not(contain(repeat(and(repeat(fb:en.any,3,),fb:en.const),1,))) : 1
      not(contain(and(repeat(fb:en.const,1,),repeat(fb:en.const,1)))) : 1
      not(contain(and(repeat(fb:en.any,3,),fb:en.const))) : 1
      not(contain(and(repeat(fb:en.const,1,),repeat(repeat(contain(fb:en.const),3),1)))) : 1
      not(contain(and(fb:en.const,repeat(fb:en.const,3)))) : 2
      not(contain(repeat(repeat(repeat(fb:en.let,3),1),1,))) : 1
      not(contain(repeat(and(fb:en.const,repeat(fb:en.const,3)),1,))) : 2
      not(contain(repeat(and(repeat(repeat(fb:en.any,3,),1),fb:en.const),1,))) : 1
      not(contain(and(fb:en.const,fb:en.const))) : 4
      not(contain(repeat(and(repeat(repeat(fb:en.const,3,),1),fb:en.const),1,))) : 1
      not(contain(repeat(and(fb:en.const,repeat(contain(fb:en.const),1)),1,))) : 1
      not(contain(and(repeat(fb:en.const,1,),repeat(repeat(fb:en.any,3),1)))) : 1
      not(contain(and(repeat(fb:en.const,1,),repeat(contain(fb:en.const),3)))) : 1
      not(contain(and(fb:en.const,repeat(repeat(fb:en.const,3),1)))) : 1
      not(contain(repeat(and(fb:en.const,repeat(fb:en.any,3,)),1,))) : 1
      not(contain(and(repeat(fb:en.const,1,),repeat(fb:en.any,3,)))) : 1
      not(contain(and(repeat(fb:en.const,1,),repeat(contain(fb:en.const),3,)))) : 1
      not(contain(and(repeat(repeat(fb:en.let,3),1),fb:en.const))) : 1
      not(contain(repeat(repeat(fb:en.let,3,),1,))) : 1
      not(contain(and(repeat(fb:en.const,1,),repeat(repeat(fb:en.any,3,),1)))) : 1
      not(contain(and(repeat(fb:en.const,1,),repeat(fb:en.any,1)))) : 1
      not(contain(and(fb:en.const,repeat(repeat(fb:en.let,3,),1)))) : 1
      not(contain(and(repeat(fb:en.const,1,),contain(fb:en.const)))) : 1
      not(contain(and(fb:en.const,repeat(fb:en.any,3)))) : 1
      not(contain(and(fb:en.const,repeat(repeat(fb:en.let,3),1)))) : 1
      not(contain(repeat(and(repeat(contain(fb:en.const),1),fb:en.const),1,))) : 1
      not(contain(repeat(repeat(fb:en.const,1),1,))) : 1
      not(contain(and(repeat(fb:en.const,1,),repeat(fb:en.const,3)))) : 2
      not(contain(repeat(repeat(fb:en.const,3),1,))) : 3
      not(contain(and(repeat(repeat(fb:en.let,3,),1),fb:en.const))) : 1
      not(contain(and(repeat(fb:en.any,3),repeat(fb:en.const,1,)))) : 1
      not(contain(and(repeat(fb:en.let,3),fb:en.const))) : 1
      not(contain(and(repeat(fb:en.any,3),fb:en.const))) : 1
      not(contain(and(repeat(repeat(fb:en.any,3,),1),fb:en.const))) : 1
      not(contain(and(repeat(fb:en.let,3,),fb:en.const))) : 1
      not(contain(repeat(and(repeat(contain(fb:en.const),3),fb:en.const),1,))) : 1
      not(contain(and(repeat(contain(fb:en.const),3),repeat(fb:en.const,1,)))) : 1
      not(contain(and(fb:en.let,fb:en.const))) : 1
      not(contain(repeat(and(fb:en.const,repeat(fb:en.let,3)),1,))) : 1
      not(contain(and(fb:en.any,fb:en.const))) : 1
      not(contain(and(fb:en.const,repeat(fb:en.any,3,)))) : 1
      not(contain(and(repeat(repeat(fb:en.const,3,),1),repeat(fb:en.const,1,)))) : 1
      not(contain(and(repeat(repeat(contain(fb:en.const),3,),1),fb:en.const))) : 1
      not(contain(repeat(and(repeat(fb:en.let,3,),fb:en.const),1,))) : 1
      not(contain(repeat(and(fb:en.const,repeat(fb:en.any,1)),1,))) : 1
      not(contain(and(repeat(fb:en.const,1,),fb:en.any))) : 1
      not(contain(repeat(and(fb:en.const,repeat(repeat(contain(fb:en.const),3,),1)),1,))) : 1
      not(contain(repeat(repeat(and(fb:en.const,fb:en.const),1,),3))) : 2
      not(contain(and(repeat(fb:en.const,3),fb:en.const))) : 2
      not(contain(and(repeat(fb:en.any,1),repeat(fb:en.const,1,)))) : 1
      not(contain(repeat(repeat(fb:en.const,3,),1,))) : 1
      not(contain(repeat(and(repeat(fb:en.let,3),fb:en.const),1,))) : 1
      not(contain(repeat(and(repeat(fb:en.const,1),fb:en.const),1,))) : 1
      not(contain(and(fb:en.const,repeat(fb:en.const,1,)))) : 2
      not(contain(repeat(contain(fb:en.const),1,))) : 1
      not(contain(and(fb:en.const,repeat(contain(fb:en.const),1)))) : 1
      not(contain(and(repeat(repeat(contain(fb:en.const),3),1),fb:en.const))) : 1
      not(contain(repeat(and(fb:en.any,fb:en.const),1,))) : 1
      not(contain(and(repeat(fb:en.const,1),repeat(fb:en.const,1,)))) : 1
      not(contain(repeat(and(fb:en.const,repeat(fb:en.let,3,)),1,))) : 1
      not(contain(repeat(repeat(contain(fb:en.const),3),1,))) : 1
      not(contain(and(repeat(contain(fb:en.const),3),fb:en.const))) : 1
      not(contain(and(fb:en.const,repeat(fb:en.let,1)))) : 1
      not(contain(repeat(repeat(fb:en.any,3),1,))) : 1
      not(contain(and(fb:en.const,repeat(repeat(fb:en.const,3,),1)))) : 1
      not(contain(and(repeat(repeat(fb:en.any,3),1),repeat(fb:en.const,1,)))) : 1
      not(contain(repeat(and(fb:en.const,repeat(fb:en.const,3,)),1,))) : 1
      not(contain(repeat(and(repeat(repeat(fb:en.let,3,),1),fb:en.const),1,))) : 1
      not(contain(repeat(and(repeat(fb:en.const,3),fb:en.const),1,))) : 2
      not(contain(and(repeat(fb:en.const,1,),repeat(fb:en.any,3)))) : 1
      not(contain(and(repeat(repeat(contain(fb:en.const),3),1),repeat(fb:en.const,1,)))) : 1
      not(contain(repeat(and(fb:en.const,repeat(contain(fb:en.const),3,)),1,))) : 1
      not(contain(and(repeat(repeat(contain(fb:en.const),3,),1),repeat(fb:en.const,1,)))) : 1
      not(contain(and(repeat(fb:en.const,3,),fb:en.const))) : 1
      not(contain(and(repeat(fb:en.let,3,),repeat(fb:en.const,1,)))) : 1
      not(contain(and(contain(fb:en.const),fb:en.const))) : 1
      not(contain(repeat(and(fb:en.const,repeat(repeat(fb:en.const,3,),1)),1,))) : 1
      not(contain(and(repeat(fb:en.const,1,),repeat(repeat(fb:en.let,3),1)))) : 1
      not(contain(and(repeat(fb:en.any,3,),repeat(fb:en.const,1,)))) : 1
      not(contain(and(repeat(fb:en.let,3),repeat(fb:en.const,1,)))) : 1
      not(contain(and(repeat(fb:en.const,1,),repeat(fb:en.let,3,)))) : 1
      not(contain(repeat(and(repeat(repeat(contain(fb:en.const),3,),1),fb:en.const),1,))) : 1
  Line 1: <M3> can be anywhere in the string (dot is included).
    Top prediction: fb:en.any
    All 3 derivations and their counts: 
      fb:en.dp : 1
      fb:en.any : 1
      fb:en.const : 1
=======================================================
Test on utterance 11:
  Line 0: I want to develop one regular expression which validates only strings which have " <M0> , <M1> or <M2> "
    Top prediction: repeat(repeat(or(fb:en.const,fb:en.any),1,),1)
    All 60 derivations and their counts: 
      or(repeat(repeat(fb:en.any,1,),1),fb:en.const) : 1
      or(repeat(contain(fb:en.const),1,),fb:en.const) : 2
      or(fb:en.const,repeat(fb:en.any,1,)) : 1
      repeat(repeat(or(fb:en.any,fb:en.const),1,),1) : 1
      repeat(repeat(fb:en.const,1,),1) : 3
      repeat(or(fb:en.const,fb:en.const),1) : 4
      repeat(or(fb:en.const,fb:en.const),1,) : 4
      repeat(repeat(or(contain(fb:en.const),fb:en.const),1,),1) : 2
      repeat(or(fb:en.const,repeat(contain(fb:en.const),1,)),1) : 2
      or(repeat(fb:en.any,1),fb:en.const) : 1
      or(fb:en.const,repeat(fb:en.const,1)) : 2
      repeat(contain(or(fb:en.const,fb:en.const)),1) : 4
      repeat(contain(fb:en.const),1,) : 3
      repeat(or(fb:en.any,fb:en.const),1) : 1
      contain(or(fb:en.const,fb:en.const)) : 4
      or(contain(fb:en.const),fb:en.const) : 2
      repeat(fb:en.any,1,) : 1
      or(fb:en.const,repeat(contain(fb:en.const),1,)) : 2
      repeat(or(repeat(fb:en.any,1,),fb:en.const),1) : 1
      repeat(repeat(fb:en.any,1,),1) : 1
      repeat(or(repeat(contain(fb:en.const),1,),fb:en.const),1) : 2
      repeat(fb:en.any,1) : 1
      or(repeat(repeat(fb:en.const,1,),1),fb:en.const) : 2
      repeat(repeat(contain(fb:en.const),1,),1) : 3
      repeat(or(fb:en.const,repeat(fb:en.const,1,)),1) : 2
      or(fb:en.const,repeat(fb:en.const,1,)) : 2
      or(fb:en.const,repeat(repeat(fb:en.any,1,),1)) : 1
      or(repeat(fb:en.const,1,),fb:en.const) : 2
      or(fb:en.const,contain(fb:en.const)) : 2
      or(fb:en.const,repeat(repeat(fb:en.const,1,),1)) : 2
      repeat(or(fb:en.any,fb:en.const),1,) : 1
      fb:en.any : 1
      repeat(repeat(or(fb:en.const,fb:en.const),1,),1) : 4
      repeat(or(fb:en.const,contain(fb:en.const)),1) : 2
      or(fb:en.const,repeat(fb:en.any,1)) : 1
      repeat(or(fb:en.const,fb:en.any),1,) : 1
      repeat(or(fb:en.const,fb:en.any),1) : 1
      or(repeat(fb:en.const,1),fb:en.const) : 2
      repeat(fb:en.const,1) : 3
      or(fb:en.const,repeat(contain(fb:en.const),1)) : 2
      repeat(or(contain(fb:en.const),fb:en.const),1,) : 2
      or(fb:en.const,fb:en.const) : 4
      repeat(repeat(contain(or(fb:en.const,fb:en.const)),1,),1) : 4
      or(repeat(contain(fb:en.const),1),fb:en.const) : 2
      repeat(fb:en.const,1,) : 3
      repeat(or(contain(fb:en.const),fb:en.const),1) : 2
      or(fb:en.const,fb:en.any) : 1
      or(repeat(repeat(contain(fb:en.const),1,),1),fb:en.const) : 2
      or(fb:en.any,fb:en.const) : 1
      repeat(contain(or(fb:en.const,fb:en.const)),1,) : 4
      repeat(or(repeat(fb:en.const,1,),fb:en.const),1) : 2
      or(repeat(fb:en.any,1,),fb:en.const) : 1
      repeat(repeat(or(fb:en.const,contain(fb:en.const)),1,),1) : 2
      contain(fb:en.const) : 3
      repeat(repeat(or(fb:en.const,fb:en.any),1,),1) : 1
      or(fb:en.const,repeat(repeat(contain(fb:en.const),1,),1)) : 2
      repeat(contain(fb:en.const),1) : 3
      repeat(or(fb:en.const,repeat(fb:en.any,1,)),1) : 1
      repeat(or(fb:en.const,contain(fb:en.const)),1,) : 2
      fb:en.const : 3
=======================================================
Test on utterance 12:
  Line 0: optional number of digits followed by an ' <M0> ' and an optional (' <M1> ' followed by one or more digits)
    Top prediction: followedby(fb:en.num,fb:en.num)
derivSize == beamSize
    All 188 derivations and their counts: 
      followedby(fb:en.num,or(fb:en.num,optional(fb:en.const))) : 2
      followedby(fb:en.num,followedby(optional(fb:en.const),fb:en.num)) : 2
      and(fb:en.num,followedby(optional(fb:en.const),repeat(fb:en.num,1,))) : 1
      followedby(fb:en.num,and(followedby(fb:en.const,fb:en.num),fb:en.const)) : 1
      and(followedby(optional(fb:en.const),repeat(fb:en.num,1,)),fb:en.num) : 1
      followedby(fb:en.num,and(followedby(optional(fb:en.const),repeat(fb:en.num,1)),fb:en.const)) : 1
      and(followedby(fb:en.num,fb:en.num),optional(followedby(fb:en.const,repeat(fb:en.num,1)))) : 1
      followedby(fb:en.num,followedby(and(fb:en.const,optional(fb:en.const)),repeat(fb:en.num,1,))) : 1
      followedby(fb:en.num,and(fb:en.const,or(fb:en.const,fb:en.num))) : 1
      and(optional(followedby(fb:en.const,fb:en.num)),fb:en.num) : 1
      and(followedby(optional(fb:en.const),repeat(fb:en.num,1)),fb:en.num) : 1
      followedby(fb:en.num,followedby(and(optional(fb:en.const),fb:en.const),repeat(fb:en.num,1))) : 1
      followedby(fb:en.num,and(fb:en.const,or(fb:en.num,fb:en.const))) : 1
      and(fb:en.num,optional(followedby(fb:en.const,repeat(fb:en.num,1,)))) : 1
      followedby(fb:en.num,and(followedby(fb:en.const,repeat(fb:en.num,1,)),fb:en.const)) : 1
      and(followedby(fb:en.num,fb:en.num),followedby(optional(fb:en.const),repeat(fb:en.num,1))) : 1
      followedby(fb:en.num,and(fb:en.num,fb:en.const)) : 1
      followedby(fb:en.num,and(followedby(optional(fb:en.const),repeat(fb:en.num,1,)),fb:en.const)) : 1
      followedby(fb:en.num,and(or(fb:en.num,fb:en.const),fb:en.const)) : 1
      and(followedby(fb:en.num,fb:en.num),optional(fb:en.num)) : 1
      followedby(fb:en.num,and(optional(fb:en.num),fb:en.const)) : 1
      and(optional(repeat(fb:en.num,1,)),fb:en.num) : 1
      followedby(fb:en.num,or(fb:en.num,followedby(fb:en.const,optional(fb:en.const)))) : 1
      and(followedby(fb:en.num,fb:en.num),optional(or(fb:en.const,fb:en.num))) : 1
      and(followedby(fb:en.num,fb:en.num),followedby(optional(fb:en.const),fb:en.num)) : 1
      and(followedby(fb:en.const,repeat(fb:en.num,1)),followedby(fb:en.num,fb:en.const)) : 1
      and(optional(fb:en.const),followedby(fb:en.num,fb:en.const)) : 1
      followedby(fb:en.num,and(optional(fb:en.const),fb:en.const)) : 1
      and(followedby(fb:en.num,fb:en.num),or(fb:en.num,optional(fb:en.const))) : 1
      followedby(fb:en.num,or(followedby(fb:en.const,optional(fb:en.const)),fb:en.num)) : 1
      and(optional(repeat(fb:en.num,1,)),followedby(fb:en.num,fb:en.num)) : 1
      followedby(fb:en.num,or(fb:en.num,and(optional(fb:en.const),fb:en.const))) : 1
      and(or(optional(fb:en.const),fb:en.num),followedby(fb:en.num,fb:en.num)) : 1
      followedby(fb:en.num,followedby(and(fb:en.const,optional(fb:en.const)),fb:en.num)) : 1
      optional(followedby(fb:en.num,fb:en.const)) : 1
      and(or(optional(fb:en.const),fb:en.num),followedby(fb:en.num,fb:en.const)) : 1
      and(followedby(fb:en.num,fb:en.const),optional(repeat(fb:en.num,1))) : 1
      and(followedby(fb:en.num,fb:en.const),or(optional(fb:en.const),fb:en.num)) : 1
      followedby(fb:en.num,followedby(fb:en.const,fb:en.num)) : 1
      and(optional(followedby(fb:en.const,repeat(fb:en.num,1,))),fb:en.num) : 1
      followedby(fb:en.num,and(fb:en.const,optional(followedby(fb:en.const,fb:en.num)))) : 1
      and(fb:en.num,optional(fb:en.num)) : 1
      followedby(fb:en.num,followedby(optional(fb:en.const),repeat(fb:en.num,1,))) : 2
      and(optional(or(fb:en.num,fb:en.const)),followedby(fb:en.num,fb:en.num)) : 1
      followedby(fb:en.num,fb:en.const) : 1
      and(followedby(fb:en.const,repeat(fb:en.num,1,)),followedby(fb:en.num,fb:en.const)) : 1
      followedby(fb:en.num,followedby(optional(fb:en.const),fb:en.const)) : 1
      and(followedby(fb:en.num,fb:en.const),optional(or(fb:en.num,fb:en.const))) : 1
      followedby(fb:en.num,and(fb:en.const,followedby(fb:en.const,repeat(fb:en.num,1)))) : 1
      followedby(fb:en.num,fb:en.num) : 1
      and(followedby(fb:en.num,fb:en.num),optional(or(fb:en.num,fb:en.const))) : 1
      and(optional(followedby(fb:en.const,fb:en.num)),followedby(fb:en.num,fb:en.const)) : 1
      and(followedby(fb:en.const,repeat(fb:en.num,1)),followedby(fb:en.num,fb:en.num)) : 1
      followedby(fb:en.num,and(fb:en.const,optional(repeat(fb:en.num,1,)))) : 1
      followedby(fb:en.num,and(fb:en.const,followedby(optional(fb:en.const),fb:en.num))) : 1
      and(optional(or(fb:en.const,fb:en.num)),fb:en.num) : 1
      followedby(fb:en.num,and(fb:en.const,optional(repeat(fb:en.num,1)))) : 1
      followedby(fb:en.num,and(fb:en.const,or(fb:en.num,optional(fb:en.const)))) : 1
      followedby(fb:en.num,optional(or(fb:en.num,fb:en.const))) : 1
      followedby(fb:en.num,followedby(fb:en.const,repeat(fb:en.num,1,))) : 1
      and(followedby(optional(fb:en.const),repeat(fb:en.num,1)),followedby(fb:en.num,fb:en.num)) : 1
      and(followedby(optional(fb:en.const),fb:en.num),followedby(fb:en.num,fb:en.num)) : 1
      and(followedby(fb:en.num,fb:en.num),optional(fb:en.const)) : 1
      optional(followedby(fb:en.num,fb:en.num)) : 1
      followedby(fb:en.num,and(fb:en.const,optional(fb:en.num))) : 1
      followedby(fb:en.num,and(fb:en.const,optional(or(fb:en.const,fb:en.num)))) : 1
      and(followedby(fb:en.num,fb:en.const),optional(or(fb:en.const,fb:en.num))) : 1
      and(optional(followedby(fb:en.const,repeat(fb:en.num,1))),fb:en.num) : 1
      and(followedby(fb:en.num,fb:en.const),optional(repeat(fb:en.num,1,))) : 1
      followedby(fb:en.num,and(fb:en.const,followedby(optional(fb:en.const),repeat(fb:en.num,1)))) : 1
      and(optional(repeat(fb:en.num,1,)),followedby(fb:en.num,fb:en.const)) : 1
      followedby(fb:en.num,and(fb:en.const,repeat(fb:en.num,1,))) : 1
      followedby(fb:en.num,or(fb:en.num,followedby(fb:en.const,fb:en.const))) : 1
      followedby(fb:en.num,or(fb:en.num,followedby(optional(fb:en.const),fb:en.const))) : 1
      followedby(fb:en.num,and(fb:en.const,or(optional(fb:en.const),fb:en.num))) : 1
      and(followedby(optional(fb:en.const),repeat(fb:en.num,1)),followedby(fb:en.num,fb:en.const)) : 1
      and(followedby(fb:en.const,fb:en.num),followedby(fb:en.num,fb:en.num)) : 1
      and(optional(fb:en.const),fb:en.num) : 1
      and(optional(followedby(fb:en.const,repeat(fb:en.num,1,))),followedby(fb:en.num,fb:en.const)) : 1
      followedby(fb:en.num,optional(or(fb:en.const,fb:en.num))) : 1
      followedby(fb:en.num,or(and(fb:en.const,optional(fb:en.const)),fb:en.num)) : 1
      and(followedby(optional(fb:en.const),fb:en.num),fb:en.num) : 1
      and(fb:en.const,followedby(fb:en.num,fb:en.num)) : 1
      followedby(fb:en.num,or(and(fb:en.const,fb:en.const),fb:en.num)) : 2
      and(followedby(fb:en.num,fb:en.num),optional(followedby(fb:en.const,repeat(fb:en.num,1,)))) : 1
      followedby(fb:en.num,optional(repeat(fb:en.num,1,))) : 1
      and(optional(followedby(fb:en.const,repeat(fb:en.num,1))),followedby(fb:en.num,fb:en.num)) : 1
      followedby(fb:en.num,and(optional(followedby(fb:en.const,repeat(fb:en.num,1))),fb:en.const)) : 1
      followedby(fb:en.num,and(optional(followedby(fb:en.const,fb:en.num)),fb:en.const)) : 1
      followedby(fb:en.num,and(fb:en.const,followedby(optional(fb:en.const),repeat(fb:en.num,1,)))) : 1
      and(followedby(fb:en.num,fb:en.num),or(optional(fb:en.const),fb:en.num)) : 1
      and(fb:en.num,optional(followedby(fb:en.const,fb:en.num))) : 1
      and(followedby(fb:en.const,fb:en.num),followedby(fb:en.num,fb:en.const)) : 1
      and(followedby(fb:en.num,fb:en.const),followedby(optional(fb:en.const),repeat(fb:en.num,1,))) : 1
      and(fb:en.num,optional(repeat(fb:en.num,1,))) : 1
      followedby(fb:en.num,and(repeat(fb:en.num,1),fb:en.const)) : 1
      followedby(fb:en.num,optional(followedby(fb:en.const,repeat(fb:en.num,1)))) : 1
      and(followedby(fb:en.num,fb:en.const),optional(fb:en.const)) : 1
      followedby(fb:en.num,or(fb:en.num,and(fb:en.const,fb:en.const))) : 2
      and(followedby(fb:en.num,fb:en.const),or(fb:en.num,optional(fb:en.const))) : 1
      followedby(fb:en.num,followedby(and(fb:en.const,fb:en.const),repeat(fb:en.num,1))) : 2
      and(followedby(fb:en.num,fb:en.const),optional(fb:en.num)) : 1
      and(optional(followedby(fb:en.const,repeat(fb:en.num,1))),followedby(fb:en.num,fb:en.const)) : 1
      and(fb:en.num,optional(followedby(fb:en.const,repeat(fb:en.num,1)))) : 1
      followedby(fb:en.num,and(fb:en.const,followedby(fb:en.const,fb:en.num))) : 1
      followedby(fb:en.num,followedby(and(fb:en.const,fb:en.const),repeat(fb:en.num,1,))) : 2
      followedby(fb:en.num,or(followedby(optional(fb:en.const),fb:en.const),fb:en.num)) : 1
      and(followedby(fb:en.num,fb:en.const),optional(followedby(fb:en.const,repeat(fb:en.num,1)))) : 1
      followedby(fb:en.num,and(fb:en.const,optional(fb:en.const))) : 1
      optional(fb:en.num) : 1
      and(followedby(fb:en.num,fb:en.const),followedby(optional(fb:en.const),repeat(fb:en.num,1))) : 1
      and(fb:en.num,or(fb:en.num,optional(fb:en.const))) : 1
      and(fb:en.num,optional(repeat(fb:en.num,1))) : 1
      followedby(fb:en.num,and(repeat(fb:en.num,1,),fb:en.const)) : 1
      and(followedby(fb:en.num,fb:en.const),optional(followedby(fb:en.const,fb:en.num))) : 1
      and(optional(or(fb:en.num,fb:en.const)),followedby(fb:en.num,fb:en.const)) : 1
      followedby(fb:en.num,optional(fb:en.num)) : 1
      followedby(fb:en.num,followedby(and(optional(fb:en.const),fb:en.const),fb:en.num)) : 1
      and(optional(or(fb:en.const,fb:en.num)),followedby(fb:en.num,fb:en.num)) : 1
      and(fb:en.num,optional(or(fb:en.const,fb:en.num))) : 1
      and(or(fb:en.num,fb:en.const),followedby(fb:en.num,fb:en.const)) : 1
      followedby(fb:en.num,optional(repeat(fb:en.num,1))) : 1
      followedby(fb:en.num,or(followedby(fb:en.const,fb:en.const),fb:en.num)) : 1
      and(optional(fb:en.const),followedby(fb:en.num,fb:en.num)) : 1
      and(optional(followedby(fb:en.const,fb:en.num)),followedby(fb:en.num,fb:en.num)) : 1
      followedby(fb:en.num,followedby(fb:en.const,repeat(fb:en.num,1))) : 1
      followedby(fb:en.num,followedby(fb:en.const,fb:en.const)) : 1
      and(followedby(fb:en.num,fb:en.const),optional(followedby(fb:en.const,repeat(fb:en.num,1,)))) : 1
      followedby(fb:en.num,or(fb:en.const,fb:en.num)) : 1
      followedby(fb:en.num,followedby(and(fb:en.const,optional(fb:en.const)),repeat(fb:en.num,1))) : 1
      and(optional(or(fb:en.const,fb:en.num)),followedby(fb:en.num,fb:en.const)) : 1
      and(followedby(fb:en.num,fb:en.num),followedby(optional(fb:en.const),repeat(fb:en.num,1,))) : 1
      followedby(fb:en.num,and(or(optional(fb:en.const),fb:en.num),fb:en.const)) : 1
      and(followedby(optional(fb:en.const),repeat(fb:en.num,1,)),followedby(fb:en.num,fb:en.const)) : 1
      followedby(fb:en.num,and(fb:en.const,followedby(fb:en.const,repeat(fb:en.num,1,)))) : 1
      and(followedby(fb:en.num,fb:en.num),optional(followedby(fb:en.const,fb:en.num))) : 1
      followedby(fb:en.num,and(or(fb:en.const,fb:en.num),fb:en.const)) : 1
      followedby(fb:en.num,and(optional(repeat(fb:en.num,1)),fb:en.const)) : 1
      followedby(fb:en.num,and(fb:en.const,optional(or(fb:en.num,fb:en.const)))) : 1
      followedby(fb:en.num,and(followedby(fb:en.const,repeat(fb:en.num,1)),fb:en.const)) : 1
      and(optional(or(fb:en.num,fb:en.const)),fb:en.num) : 1
      followedby(fb:en.num,and(fb:en.const,optional(followedby(fb:en.const,repeat(fb:en.num,1,))))) : 1
      and(or(fb:en.num,optional(fb:en.const)),fb:en.num) : 1
      and(optional(fb:en.num),fb:en.num) : 1
      followedby(fb:en.num,and(or(fb:en.num,optional(fb:en.const)),fb:en.const)) : 1
      followedby(fb:en.num,or(optional(fb:en.const),fb:en.num)) : 2
      and(or(optional(fb:en.const),fb:en.num),fb:en.num) : 1
      followedby(fb:en.num,followedby(and(optional(fb:en.const),fb:en.const),repeat(fb:en.num,1,))) : 1
      and(followedby(optional(fb:en.const),repeat(fb:en.num,1,)),followedby(fb:en.num,fb:en.num)) : 1
      and(optional(followedby(fb:en.const,repeat(fb:en.num,1,))),followedby(fb:en.num,fb:en.num)) : 1
      and(or(fb:en.num,fb:en.const),followedby(fb:en.num,fb:en.num)) : 1
      and(fb:en.num,or(optional(fb:en.const),fb:en.num)) : 1
      and(or(fb:en.num,optional(fb:en.const)),followedby(fb:en.num,fb:en.num)) : 1
      followedby(fb:en.num,and(fb:en.const,optional(followedby(fb:en.const,repeat(fb:en.num,1))))) : 1
      and(or(fb:en.const,fb:en.num),followedby(fb:en.num,fb:en.num)) : 1
      and(optional(fb:en.num),followedby(fb:en.num,fb:en.num)) : 1
      and(followedby(optional(fb:en.const),fb:en.num),followedby(fb:en.num,fb:en.const)) : 1
      and(followedby(fb:en.num,fb:en.num),optional(repeat(fb:en.num,1))) : 1
      and(followedby(fb:en.num,fb:en.num),optional(repeat(fb:en.num,1,))) : 1
      followedby(fb:en.num,and(fb:en.const,fb:en.num)) : 1
      and(optional(repeat(fb:en.num,1)),fb:en.num) : 1
      and(fb:en.num,optional(fb:en.const)) : 1
      followedby(fb:en.num,and(optional(followedby(fb:en.const,repeat(fb:en.num,1,))),fb:en.const)) : 1
      followedby(fb:en.num,and(optional(or(fb:en.const,fb:en.num)),fb:en.const)) : 1
      and(optional(repeat(fb:en.num,1)),followedby(fb:en.num,fb:en.const)) : 1
      followedby(fb:en.num,or(and(optional(fb:en.const),fb:en.const),fb:en.num)) : 1
      followedby(fb:en.num,followedby(and(fb:en.const,fb:en.const),fb:en.num)) : 2
      followedby(fb:en.num,and(optional(or(fb:en.num,fb:en.const)),fb:en.const)) : 1
      followedby(fb:en.num,followedby(optional(fb:en.const),repeat(fb:en.num,1))) : 2
      followedby(fb:en.num,and(fb:en.const,fb:en.const)) : 2
      followedby(fb:en.num,optional(fb:en.const)) : 2
      followedby(fb:en.num,and(followedby(optional(fb:en.const),fb:en.num),fb:en.const)) : 1
      and(optional(repeat(fb:en.num,1)),followedby(fb:en.num,fb:en.num)) : 1
      followedby(fb:en.num,and(optional(repeat(fb:en.num,1,)),fb:en.const)) : 1
      followedby(fb:en.num,optional(followedby(fb:en.const,repeat(fb:en.num,1,)))) : 1
      followedby(fb:en.num,or(fb:en.num,fb:en.const)) : 1
      and(fb:en.num,followedby(optional(fb:en.const),repeat(fb:en.num,1))) : 1
      followedby(fb:en.num,and(fb:en.const,repeat(fb:en.num,1))) : 1
      and(fb:en.num,followedby(optional(fb:en.const),fb:en.num)) : 1
      followedby(fb:en.num,followedby(fb:en.const,optional(fb:en.const))) : 1
      and(optional(fb:en.num),followedby(fb:en.num,fb:en.const)) : 1
      and(or(fb:en.const,fb:en.num),followedby(fb:en.num,fb:en.const)) : 1
      and(followedby(fb:en.num,fb:en.const),followedby(optional(fb:en.const),fb:en.num)) : 1
      followedby(fb:en.num,optional(followedby(fb:en.const,fb:en.num))) : 1
      and(or(fb:en.num,optional(fb:en.const)),followedby(fb:en.num,fb:en.const)) : 1
      and(followedby(fb:en.const,repeat(fb:en.num,1,)),followedby(fb:en.num,fb:en.num)) : 1
      followedby(fb:en.num,or(fb:en.num,and(fb:en.const,optional(fb:en.const)))) : 1
      and(fb:en.num,optional(or(fb:en.num,fb:en.const))) : 1
=======================================================
Test on utterance 13:
  Line 0: I wan`t to validate next formats:
    Top prediction: 
  Line 1: Decimal numbers with max 3 decimal places
    Top prediction: fb:en.num
    All 7 derivations and their counts: 
      fb:en.num : 1
      contain(fb:en.dp) : 1
      repeat(fb:en.dp,1,3) : 1
      fb:en.dp : 2
      contain(repeat(fb:en.dp,3)) : 1
      contain(repeat(fb:en.dp,1,3)) : 1
      repeat(fb:en.dp,3) : 1
  Line 2: Exclude 0
    Top prediction: 
=======================================================
Test on utterance 14:
  Line 0: write a Regular Expression validator to accept numbers only with decimal part 0 or 5 only and in range 0-5. 
    Top prediction: fb:en.num
    All 9 derivations and their counts: 
      repeat(fb:en.dp,1,) : 1
      contain(or(0,5)) : 1
      fb:en.num : 1
      repeat(or(0,5),1,) : 1
      or(0,5) : 1
      contain(fb:en.dp) : 1
      fb:en.dp : 1
      repeat(contain(fb:en.dp),1,) : 1
      repeat(contain(or(0,5)),1,) : 1
  Line 1: No matter how many 0 in front or behind the numbers it can be valid.
    Top prediction: repeat(startwith(fb:en.num),0)
    All 4 derivations and their counts: 
      fb:en.num : 1
      repeat(fb:en.num,0) : 1
      repeat(startwith(fb:en.num),0) : 1
      startwith(fb:en.num) : 1
=======================================================
Test on utterance 15:
  Line 0: i need a Regular that validate Decimal (18,3) 
    Top prediction: fb:en.dp
    All 1 derivations and their counts: 
      fb:en.dp : 1
  Line 1: this mean max number of digits before <M0> is 15 and accept 3 numbers after <M1> . 
    Top prediction: repeat(repeat(followedby(fb:en.const,fb:en.num),3),1,15)
derivSize == beamSize
    All 163 derivations and their counts: 
      followedby(fb:en.const,repeat(repeat(fb:en.num,3),1,15)) : 1
      followedby(fb:en.num,and(followedby(fb:en.const,fb:en.num),fb:en.const)) : 2
      and(repeat(fb:en.const,3),fb:en.num) : 1
      repeat(fb:en.const,1,15) : 1
      followedby(repeat(fb:en.num,3),followedby(fb:en.num,fb:en.num)) : 1
      and(repeat(followedby(fb:en.const,fb:en.num),3),fb:en.num) : 1
      and(followedby(fb:en.num,fb:en.num),repeat(followedby(fb:en.const,fb:en.num),3)) : 1
      repeat(fb:en.num,1,3) : 1
      and(fb:en.num,repeat(fb:en.const,3)) : 1
      followedby(repeat(fb:en.num,15),followedby(fb:en.num,fb:en.const)) : 1
      followedby(fb:en.num,and(fb:en.const,repeat(followedby(fb:en.const,fb:en.num),3))) : 2
      followedby(followedby(fb:en.num,fb:en.num),fb:en.num) : 1
      followedby(fb:en.num,repeat(repeat(followedby(fb:en.const,fb:en.num),3),15)) : 1
      followedby(fb:en.const,and(followedby(fb:en.num,fb:en.const),fb:en.num)) : 1
      followedby(fb:en.num,repeat(followedby(fb:en.const,repeat(fb:en.num,3)),15)) : 1
      followedby(followedby(fb:en.num,repeat(fb:en.num,15,3)),fb:en.num) : 1
      followedby(fb:en.num,and(fb:en.num,fb:en.const)) : 2
      followedby(fb:en.num,repeat(followedby(fb:en.const,fb:en.num),15,3)) : 1
      followedby(repeat(fb:en.num,15,3),followedby(fb:en.num,fb:en.const)) : 1
      followedby(fb:en.num,followedby(fb:en.const,and(fb:en.const,fb:en.num))) : 2
      and(repeat(followedby(fb:en.const,fb:en.num),3),followedby(fb:en.num,fb:en.const)) : 1
      followedby(fb:en.num,repeat(followedby(fb:en.const,fb:en.num),3)) : 1
      followedby(and(fb:en.num,fb:en.num),fb:en.num) : 2
      followedby(followedby(fb:en.num,repeat(repeat(fb:en.num,3),15)),fb:en.num) : 1
      followedby(followedby(fb:en.const,repeat(fb:en.num,3)),fb:en.num) : 1
      fb:en.num : 1
      followedby(fb:en.num,and(repeat(fb:en.num,3),fb:en.const)) : 2
      and(fb:en.num,followedby(fb:en.num,fb:en.num)) : 1
      followedby(fb:en.num,repeat(fb:en.const,15)) : 1
      and(followedby(fb:en.num,fb:en.const),fb:en.num) : 1
      followedby(fb:en.const,followedby(fb:en.num,and(fb:en.num,fb:en.const))) : 1
      followedby(followedby(fb:en.const,fb:en.num),fb:en.num) : 1
      followedby(repeat(fb:en.num,3),followedby(fb:en.num,fb:en.const)) : 1
      followedby(repeat(fb:en.num,15,3),fb:en.num) : 1
      repeat(followedby(fb:en.const,fb:en.num),1,15) : 1
      and(fb:en.num,fb:en.const) : 1
      followedby(followedby(fb:en.num,and(repeat(fb:en.num,3),fb:en.const)),fb:en.num) : 1
      followedby(fb:en.num,followedby(repeat(fb:en.num,15),fb:en.const)) : 2
      followedby(fb:en.num,followedby(fb:en.const,and(fb:en.num,fb:en.const))) : 2
      followedby(fb:en.num,followedby(fb:en.const,fb:en.num)) : 1
      and(repeat(followedby(fb:en.const,fb:en.num),3),followedby(fb:en.num,fb:en.num)) : 1
      and(repeat(fb:en.const,3),followedby(fb:en.num,fb:en.num)) : 1
      repeat(repeat(fb:en.num,3),1,15) : 1
      and(followedby(fb:en.num,fb:en.const),repeat(followedby(fb:en.const,fb:en.num),3)) : 1
      followedby(fb:en.num,repeat(fb:en.const,3)) : 1
      followedby(and(repeat(fb:en.num,3),fb:en.const),followedby(fb:en.num,fb:en.num)) : 1
      followedby(fb:en.num,followedby(fb:en.const,repeat(fb:en.num,15))) : 1
      followedby(followedby(fb:en.num,and(fb:en.const,fb:en.num)),fb:en.num) : 1
      repeat(followedby(fb:en.const,repeat(fb:en.num,3)),1,15) : 1
      followedby(fb:en.num,fb:en.const) : 3
      followedby(fb:en.num,repeat(fb:en.num,3)) : 1
      followedby(and(fb:en.num,followedby(fb:en.num,fb:en.const)),fb:en.num) : 1
      followedby(followedby(fb:en.num,fb:en.const),fb:en.num) : 1
      followedby(fb:en.num,fb:en.num) : 4
      followedby(fb:en.const,followedby(fb:en.num,and(repeat(fb:en.num,3),fb:en.const))) : 1
      followedby(and(fb:en.const,repeat(fb:en.num,3)),followedby(fb:en.num,fb:en.num)) : 1
      and(followedby(fb:en.num,fb:en.const),fb:en.const) : 1
      followedby(and(fb:en.const,repeat(fb:en.num,3)),fb:en.num) : 1
      and(followedby(fb:en.const,repeat(fb:en.num,3)),followedby(fb:en.num,fb:en.const)) : 1
      and(followedby(fb:en.num,fb:en.num),repeat(fb:en.const,3)) : 1
      followedby(repeat(repeat(fb:en.num,3),15),followedby(fb:en.num,fb:en.num)) : 1
      repeat(followedby(fb:en.const,fb:en.num),1,3) : 1
      followedby(fb:en.num,followedby(fb:en.const,repeat(fb:en.num,3))) : 1
      followedby(fb:en.num,followedby(fb:en.const,and(fb:en.const,repeat(fb:en.num,3)))) : 2
      followedby(fb:en.const,and(fb:en.num,fb:en.num)) : 2
      followedby(repeat(fb:en.num,15),followedby(fb:en.num,fb:en.num)) : 1
      followedby(fb:en.const,followedby(fb:en.num,repeat(fb:en.num,15))) : 1
      repeat(repeat(fb:en.const,3),1,15) : 1
      followedby(fb:en.num,followedby(fb:en.const,repeat(repeat(fb:en.num,3),15))) : 1
      repeat(fb:en.const,1,3) : 1
      followedby(repeat(fb:en.num,3),fb:en.num) : 1
      followedby(fb:en.num,repeat(fb:en.num,15,3)) : 1
      and(followedby(fb:en.const,fb:en.num),followedby(fb:en.num,fb:en.num)) : 1
      followedby(fb:en.const,followedby(fb:en.num,repeat(fb:en.num,15,3))) : 1
      repeat(repeat(followedby(fb:en.const,fb:en.num),3),1,15) : 1
      followedby(fb:en.num,and(fb:en.const,followedby(fb:en.const,repeat(fb:en.num,3)))) : 2
      followedby(fb:en.num,and(repeat(followedby(fb:en.const,fb:en.num),3),fb:en.const)) : 2
      and(fb:en.const,followedby(fb:en.num,fb:en.num)) : 1
      followedby(fb:en.const,followedby(fb:en.num,fb:en.num)) : 3
      followedby(fb:en.num,followedby(fb:en.num,fb:en.const)) : 3
      and(fb:en.num,followedby(fb:en.num,fb:en.const)) : 1
      followedby(fb:en.num,repeat(repeat(fb:en.const,3),15)) : 1
      and(followedby(fb:en.const,fb:en.num),followedby(fb:en.num,fb:en.const)) : 1
      followedby(followedby(fb:en.const,repeat(repeat(fb:en.num,3),15)),fb:en.num) : 1
      followedby(and(fb:en.const,fb:en.num),fb:en.num) : 1
      followedby(fb:en.const,and(repeat(fb:en.num,3),followedby(fb:en.num,fb:en.num))) : 1
      and(followedby(fb:en.num,fb:en.num),followedby(fb:en.const,fb:en.num)) : 1
      followedby(fb:en.const,and(followedby(fb:en.num,fb:en.num),fb:en.num)) : 1
      and(repeat(fb:en.num,3),followedby(fb:en.num,fb:en.const)) : 1
      and(fb:en.num,repeat(followedby(fb:en.const,fb:en.num),3)) : 1
      followedby(fb:en.num,followedby(repeat(fb:en.num,15,3),fb:en.const)) : 2
      followedby(followedby(fb:en.num,repeat(fb:en.num,3)),fb:en.num) : 1
      followedby(fb:en.num,followedby(repeat(repeat(fb:en.num,3),15),fb:en.const)) : 2
      and(followedby(fb:en.const,repeat(fb:en.num,3)),followedby(fb:en.num,fb:en.num)) : 1
      followedby(fb:en.const,and(followedby(fb:en.num,fb:en.const),repeat(fb:en.num,3))) : 1
      followedby(fb:en.num,and(fb:en.const,followedby(fb:en.const,fb:en.num))) : 2
      followedby(and(fb:en.const,fb:en.num),followedby(fb:en.num,fb:en.num)) : 1
      followedby(and(fb:en.num,fb:en.const),followedby(fb:en.num,fb:en.num)) : 1
      and(followedby(fb:en.num,fb:en.num),fb:en.const) : 1
      followedby(and(repeat(fb:en.num,3),followedby(fb:en.num,fb:en.const)),fb:en.num) : 1
      followedby(fb:en.const,repeat(fb:en.num,1,15)) : 1
      and(followedby(fb:en.const,repeat(fb:en.num,3)),fb:en.num) : 1
      followedby(fb:en.num,and(repeat(fb:en.const,3),fb:en.const)) : 2
      followedby(repeat(repeat(fb:en.num,3),15),followedby(fb:en.num,fb:en.const)) : 1
      and(followedby(fb:en.num,fb:en.num),fb:en.num) : 1
      followedby(fb:en.num,repeat(fb:en.const,15,3)) : 1
      and(repeat(fb:en.const,3),followedby(fb:en.num,fb:en.const)) : 1
      followedby(fb:en.num,repeat(fb:en.num,15)) : 1
      and(fb:en.num,followedby(fb:en.const,fb:en.num)) : 1
      followedby(and(repeat(fb:en.num,3),fb:en.const),fb:en.num) : 1
      followedby(fb:en.const,and(repeat(fb:en.num,3),followedby(fb:en.num,fb:en.const))) : 1
      followedby(and(followedby(fb:en.num,fb:en.const),fb:en.num),fb:en.num) : 1
      followedby(repeat(fb:en.num,15,3),followedby(fb:en.num,fb:en.num)) : 1
      followedby(fb:en.const,followedby(fb:en.num,repeat(fb:en.num,3))) : 1
      followedby(fb:en.num,followedby(fb:en.const,fb:en.const)) : 2
      followedby(fb:en.const,and(fb:en.num,followedby(fb:en.num,fb:en.num))) : 1
      followedby(followedby(fb:en.num,repeat(fb:en.num,15)),fb:en.num) : 1
      and(fb:en.const,fb:en.num) : 1
      followedby(fb:en.num,and(fb:en.const,repeat(fb:en.num,3))) : 2
      and(followedby(fb:en.const,fb:en.num),fb:en.num) : 1
      and(followedby(fb:en.num,fb:en.num),followedby(fb:en.const,repeat(fb:en.num,3))) : 1
      followedby(fb:en.num,followedby(fb:en.const,repeat(fb:en.num,15,3))) : 1
      followedby(fb:en.const,and(fb:en.num,followedby(fb:en.num,fb:en.const))) : 1
      and(followedby(fb:en.num,fb:en.const),repeat(fb:en.const,3)) : 1
      followedby(fb:en.const,fb:en.num) : 2
      followedby(followedby(fb:en.num,and(fb:en.num,fb:en.const)),fb:en.num) : 1
      followedby(fb:en.const,followedby(fb:en.num,repeat(repeat(fb:en.num,3),15))) : 1
      followedby(fb:en.const,and(followedby(fb:en.num,fb:en.num),repeat(fb:en.num,3))) : 1
      followedby(fb:en.const,and(repeat(fb:en.num,3),fb:en.num)) : 1
      and(fb:en.num,fb:en.num) : 2
      followedby(fb:en.const,followedby(fb:en.num,fb:en.const)) : 1
      followedby(followedby(fb:en.const,repeat(fb:en.num,15,3)),fb:en.num) : 1
      followedby(and(fb:en.num,repeat(fb:en.num,3)),fb:en.num) : 1
      followedby(and(followedby(fb:en.num,fb:en.const),repeat(fb:en.num,3)),fb:en.num) : 1
      followedby(fb:en.const,followedby(fb:en.num,and(fb:en.const,fb:en.num))) : 1
      followedby(followedby(fb:en.num,and(fb:en.const,repeat(fb:en.num,3))),fb:en.num) : 1
      followedby(fb:en.num,repeat(repeat(fb:en.num,3),15)) : 1
      followedby(fb:en.num,followedby(repeat(fb:en.num,3),fb:en.const)) : 2
      followedby(fb:en.const,and(fb:en.num,repeat(fb:en.num,3))) : 1
      and(followedby(fb:en.num,fb:en.const),followedby(fb:en.const,repeat(fb:en.num,3))) : 1
      followedby(and(fb:en.num,fb:en.const),fb:en.num) : 1
      followedby(repeat(repeat(fb:en.num,3),15),fb:en.num) : 1
      followedby(fb:en.num,and(fb:en.const,fb:en.num)) : 2
      and(followedby(fb:en.num,fb:en.const),repeat(fb:en.num,3)) : 1
      and(fb:en.num,repeat(fb:en.num,3)) : 1
      and(followedby(fb:en.num,fb:en.const),followedby(fb:en.const,fb:en.num)) : 1
      followedby(and(repeat(fb:en.num,3),fb:en.num),fb:en.num) : 1
      and(fb:en.const,followedby(fb:en.num,fb:en.const)) : 1
      followedby(fb:en.num,and(fb:en.const,repeat(fb:en.const,3))) : 2
      followedby(fb:en.num,and(followedby(fb:en.const,repeat(fb:en.num,3)),fb:en.const)) : 2
      followedby(fb:en.num,and(fb:en.const,fb:en.const)) : 4
      repeat(fb:en.num,1,15) : 1
      and(repeat(fb:en.num,3),fb:en.num) : 1
      followedby(fb:en.num,repeat(followedby(fb:en.const,fb:en.num),15)) : 1
      and(repeat(fb:en.num,3),followedby(fb:en.num,fb:en.num)) : 1
      followedby(repeat(fb:en.num,15),fb:en.num) : 1
      followedby(fb:en.num,followedby(fb:en.num,fb:en.num)) : 1
      and(followedby(fb:en.num,fb:en.num),repeat(fb:en.num,3)) : 1
      followedby(fb:en.const,repeat(fb:en.num,1,3)) : 1
      followedby(fb:en.const,followedby(fb:en.num,and(fb:en.const,repeat(fb:en.num,3)))) : 1
      followedby(fb:en.num,followedby(fb:en.const,and(repeat(fb:en.num,3),fb:en.const))) : 2
      followedby(followedby(fb:en.const,repeat(fb:en.num,15)),fb:en.num) : 1
      and(fb:en.num,followedby(fb:en.const,repeat(fb:en.num,3))) : 1
  Line 2: 18 precision 3 scale .
    Top prediction: 
=======================================================
Test on utterance 16:
  Line 0: I need to create a regular expression for a string in the format <whole-number> @ <whole-numbers> % 
    Top prediction: fb:en.any
    All 1 derivations and their counts: 
      fb:en.any : 1
  Line 1: only single numeric digit should be allowed before <M0>
    Top prediction: followedby(fb:en.num,fb:en.num)
    All 10 derivations and their counts: 
      fb:en.num : 3
      repeat(fb:en.const,1,) : 1
      repeat(fb:en.num,1,) : 3
      followedby(repeat(fb:en.num,1,),fb:en.num) : 1
      repeat(followedby(fb:en.num,fb:en.num),1,) : 1
      followedby(fb:en.num,fb:en.num) : 1
      fb:en.const : 1
      followedby(repeat(fb:en.num,1,),fb:en.const) : 3
      repeat(followedby(fb:en.num,fb:en.const),1,) : 3
      followedby(fb:en.num,fb:en.const) : 3
  Line 2: only <M1> special character after the numeric digit
    Top prediction: followedby(fb:en.sp,fb:en.const)
    All 33 derivations and their counts: 
      repeat(fb:en.let,1,) : 1
      repeat(fb:en.sp,1,) : 1
      repeat(followedby(fb:en.let,fb:en.const),1,) : 1
      fb:en.let : 1
      followedby(fb:en.num,fb:en.num) : 1
      followedby(fb:en.sp,repeat(fb:en.const,1,)) : 1
      followedby(fb:en.let,repeat(fb:en.const,1,)) : 1
      followedby(fb:en.num,repeat(fb:en.any,1,)) : 3
      fb:en.sp : 1
      repeat(fb:en.const,1,) : 1
      followedby(fb:en.any,fb:en.const) : 1
      followedby(fb:en.any,repeat(fb:en.const,1,)) : 1
      repeat(followedby(fb:en.num,fb:en.any),1,) : 3
      repeat(fb:en.any,1,) : 1
      repeat(followedby(fb:en.any,fb:en.const),1,) : 1
      repeat(followedby(fb:en.num,fb:en.let),1,) : 3
      fb:en.num : 3
      followedby(fb:en.num,repeat(fb:en.sp,1,)) : 3
      repeat(followedby(fb:en.num,fb:en.sp),1,) : 3
      repeat(followedby(fb:en.sp,fb:en.const),1,) : 1
      repeat(followedby(fb:en.num,fb:en.const),1,) : 3
      followedby(fb:en.num,repeat(fb:en.let,1,)) : 3
      followedby(fb:en.num,fb:en.sp) : 3
      followedby(fb:en.num,fb:en.let) : 3
      repeat(fb:en.num,1,) : 3
      repeat(followedby(fb:en.num,fb:en.num),1,) : 1
      fb:en.const : 1
      fb:en.any : 1
      followedby(fb:en.sp,fb:en.const) : 1
      followedby(fb:en.let,fb:en.const) : 1
      followedby(fb:en.num,repeat(fb:en.const,1,)) : 3
      followedby(fb:en.num,fb:en.any) : 3
      followedby(fb:en.num,fb:en.const) : 3
  Line 3: there should be only 3 or less numeric digits after the <M2>
  Line 4: only <M3> special character should be allowed at the end of the string.
    Top prediction: endwith(fb:en.const)
    All 20 derivations and their counts: 
      endwith(fb:en.sp) : 1
      repeat(fb:en.let,1,) : 1
      repeat(fb:en.sp,1,) : 1
      fb:en.let : 1
      repeat(endwith(fb:en.sp),1,) : 1
      repeat(endwith(fb:en.let),1,) : 1
      endwith(repeat(fb:en.let,1,)) : 1
      fb:en.sp : 1
      endwith(repeat(fb:en.const,1,)) : 1
      repeat(fb:en.const,1,) : 1
      repeat(endwith(fb:en.any),1,) : 2
      endwith(repeat(fb:en.any,1,)) : 1
      endwith(fb:en.any) : 2
      endwith(fb:en.const) : 1
      fb:en.const : 1
      fb:en.any : 2
      endwith(fb:en.let) : 1
      repeat(endwith(fb:en.const),1,) : 1
      repeat(fb:en.any,1,) : 2
      endwith(repeat(fb:en.sp,1,)) : 1
=======================================================
Test on utterance 17:
  Line 0: I want to validate a 10 digit USA style phone number using a Regular Expression in Javascript. 
    Top prediction: repeat(fb:en.num,10)
    All 2 derivations and their counts: 
      repeat(fb:en.num,10) : 2
      fb:en.num : 2
  Line 1: It should allow (validate as correct) the following formats: xxx - xxx - xxxx
    Top prediction: 
=======================================================
Test on utterance 18:
  Line 0: accept numeric values that are seven or ten digits
    Top prediction: or(repeat(fb:en.num,10),fb:en.num)
    All 9 derivations and their counts: 
      or(fb:en.num,repeat(fb:en.num,10)) : 1
      fb:en.num : 2
      repeat(fb:en.num,10) : 1
      or(7,10) : 1
      or(repeat(fb:en.num,10),fb:en.num) : 1
      or(fb:en.num,fb:en.num) : 2
      repeat(fb:en.num,7) : 1
      repeat(fb:en.num,7,10) : 1
      repeat(repeat(fb:en.num,10),7) : 1
=======================================================
Test on utterance 19:
  Line 0: I am trying to write a regular expression which validates a text box to have only digits with length 5 or 9.
    Top prediction: contain(repeat(repeat(fb:en.num,5),1,))
    All 42 derivations and their counts: 
      contain(repeat(fb:en.num,1,)) : 1
      contain(repeat(fb:en.num,5,9)) : 1
      repeat(repeat(fb:en.num,5,9),1,) : 1
      repeat(fb:en.num,5,9) : 1
      contain(repeat(repeat(fb:en.num,5,9),1,)) : 1
      contain(repeat(repeat(fb:en.num,5),1,)) : 1
      contain(or(5,9)) : 2
      contain(repeat(contain(or(5,9)),1,)) : 1
      repeat(repeat(or(5,9),1),1,) : 1
      contain(repeat(repeat(fb:en.num,1,),5,9)) : 1
      repeat(fb:en.num,5) : 1
      repeat(fb:en.num,9) : 1
      contain(fb:en.num) : 1
      repeat(contain(repeat(fb:en.num,1,)),9) : 1
      repeat(or(5,9),1,) : 1
      contain(repeat(repeat(fb:en.num,9),1,)) : 1
      fb:en.num : 1
      contain(repeat(repeat(fb:en.num,1,),9)) : 1
      contain(repeat(fb:en.num,5)) : 1
      repeat(contain(repeat(fb:en.num,1,)),5,9) : 1
      repeat(or(5,9),1) : 1
      repeat(contain(fb:en.num),9) : 1
      repeat(contain(repeat(fb:en.num,1,)),5) : 1
      or(5,9) : 1
      contain(repeat(repeat(or(5,9),1),1,)) : 1
      contain(contain(repeat(or(5,9),1))) : 1
      repeat(contain(fb:en.num),5) : 1
      contain(repeat(or(5,9),1)) : 2
      repeat(repeat(fb:en.num,5),1,) : 1
      contain(repeat(repeat(fb:en.num,1,),5)) : 1
      repeat(contain(or(5,9)),1,) : 1
      contain(contain(or(5,9))) : 1
      repeat(contain(fb:en.num),5,9) : 1
      repeat(fb:en.num,1,) : 1
      contain(repeat(contain(repeat(or(5,9),1)),1,)) : 1
      contain(repeat(or(5,9),1,)) : 1
      repeat(contain(repeat(or(5,9),1)),1,) : 1
      repeat(repeat(fb:en.num,1,),5) : 1
      repeat(repeat(fb:en.num,9),1,) : 1
      contain(repeat(fb:en.num,9)) : 1
      repeat(repeat(fb:en.num,1,),5,9) : 1
      repeat(repeat(fb:en.num,1,),9) : 1
=======================================================
Test on utterance 20:
  Line 0: How can i write valid regular expression for Oracle's Number(2,2)
    Top prediction: fb:en.num
    All 1 derivations and their counts: 
      fb:en.num : 1
  Line 1: Also digits after decimal should be either, 1 or 2 but not more than 2, also it can be optional. 
    Top prediction: followedby(not(fb:en.dp),fb:en.num)
    All 36 derivations and their counts: 
      not(followedby(or(1,2),fb:en.dp)) : 1
      followedby(fb:en.dp,fb:en.num) : 1
      optional(followedby(not(fb:en.dp),fb:en.num)) : 1
      followedby(not(fb:en.dp),fb:en.num) : 1
      optional(fb:en.dp) : 1
      not(fb:en.dp) : 1
      not(followedby(or(1,2),fb:en.num)) : 1
      optional(fb:en.num) : 1
      or(1,2) : 2
      followedby(or(1,2),fb:en.dp) : 2
      followedby(optional(not(or(1,2))),fb:en.dp) : 1
      optional(not(fb:en.dp)) : 1
      followedby(not(or(1,2)),fb:en.dp) : 1
      optional(followedby(fb:en.dp,fb:en.num)) : 1
      followedby(optional(fb:en.dp),fb:en.num) : 1
      optional(followedby(or(1,2),fb:en.dp)) : 2
      optional(or(1,2)) : 2
      followedby(optional(or(1,2)),fb:en.dp) : 2
      fb:en.num : 1
      followedby(optional(not(or(1,2))),fb:en.num) : 1
      followedby(or(1,2),fb:en.num) : 2
      fb:en.dp : 1
      not(fb:en.num) : 1
      optional(not(fb:en.num)) : 1
      followedby(not(or(1,2)),fb:en.num) : 1
      optional(followedby(not(or(1,2)),fb:en.num)) : 1
      optional(not(followedby(fb:en.dp,fb:en.num))) : 1
      not(or(1,2)) : 1
      optional(not(or(1,2))) : 1
      followedby(optional(not(fb:en.dp)),fb:en.num) : 1
      optional(not(followedby(or(1,2),fb:en.dp))) : 1
      followedby(optional(or(1,2)),fb:en.num) : 2
      optional(followedby(not(or(1,2)),fb:en.dp)) : 1
      optional(not(followedby(or(1,2),fb:en.num))) : 1
      optional(followedby(or(1,2),fb:en.num)) : 2
      not(followedby(fb:en.dp,fb:en.num)) : 1
  Line 2: The numer should never start with [ 1 - 9 ] but can start with 0.
    Top prediction: 
=======================================================
Test on utterance 21:
  Line 0: I need a regular expression that validates a number, but doesn't require a digit after the decimal
    Top prediction: not(fb:en.num)
    All 10 derivations and their counts: 
      fb:en.num : 2
      followedby(not(fb:en.num),fb:en.num) : 1
      followedby(fb:en.dp,fb:en.num) : 2
      fb:en.dp : 1
      followedby(fb:en.num,not(fb:en.num)) : 1
      not(fb:en.num) : 2
      followedby(fb:en.num,fb:en.num) : 1
      not(followedby(fb:en.dp,fb:en.num)) : 1
      not(fb:en.dp) : 1
      followedby(fb:en.dp,not(fb:en.num)) : 2
=======================================================
Test on utterance 22:
  Line 0: I'm trying to write a regular expression to check whether or not a proposed name is valid in a gaming platform.
    Top prediction: 
  Line 1: Name must contain at least 3 and no more than 20 letters
    Top prediction: contain(repeat(repeat(fb:en.let,20,),3,))
    All 20 derivations and their counts: 
      contain(repeat(fb:en.let,20)) : 1
      repeat(repeat(fb:en.let,20),3,) : 2
      contain(repeat(repeat(fb:en.let,20,),3)) : 1
      repeat(fb:en.let,3,) : 2
      contain(repeat(repeat(fb:en.let,20,),3,)) : 1
      repeat(fb:en.let,3,20) : 1
      fb:en.let : 1
      contain(fb:en.let) : 1
      repeat(repeat(fb:en.let,20,),3) : 1
      repeat(fb:en.let,20) : 1
      repeat(repeat(fb:en.let,20),3) : 1
      repeat(fb:en.let,20,) : 2
      contain(repeat(fb:en.let,3)) : 1
      repeat(fb:en.let,3) : 1
      contain(repeat(repeat(fb:en.let,20),3)) : 1
      contain(repeat(fb:en.let,20,)) : 2
      contain(repeat(fb:en.let,3,)) : 2
      repeat(repeat(fb:en.let,20,),3,) : 1
      contain(repeat(repeat(fb:en.let,20),3,)) : 2
      contain(repeat(fb:en.let,3,20)) : 1
  Line 2: Name must start with a uppercase letter
    Top prediction: startwith(contain(fb:en.cap))
    All 8 derivations and their counts: 
      startwith(fb:en.let) : 1
      fb:en.cap : 1
      startwith(contain(fb:en.let)) : 1
      fb:en.let : 1
      contain(fb:en.let) : 1
      startwith(fb:en.cap) : 1
      contain(fb:en.cap) : 1
      startwith(contain(fb:en.cap)) : 1
  Line 3: Name must never have two uppercase letters in a row
    Top prediction: not(contain(repeat(fb:en.cap,2)))
    All 16 derivations and their counts: 
      not(contain(fb:en.let)) : 1
      not(fb:en.cap) : 1
      not(contain(fb:en.cap)) : 1
      not(repeat(fb:en.cap,2)) : 1
      contain(repeat(fb:en.cap,2)) : 1
      fb:en.let : 1
      contain(fb:en.let) : 1
      contain(fb:en.cap) : 1
      not(contain(repeat(fb:en.cap,2))) : 1
      not(contain(repeat(fb:en.let,2))) : 1
      repeat(fb:en.let,2) : 1
      fb:en.cap : 1
      not(repeat(fb:en.let,2)) : 1
      contain(repeat(fb:en.let,2)) : 1
      not(fb:en.let) : 1
      repeat(fb:en.cap,2) : 1
  Line 4: Spaces are allowed, but must be preceded by a letter and be followed by an uppercase letter
    Top prediction: followedby(fb:en.let,followedby(fb:en.cap,fb:en.let))
    All 14 derivations and their counts: 
      followedby(and(fb:en.let,fb:en.cap),fb:en.let) : 1
      and(fb:en.let,fb:en.let) : 2
      and(followedby(fb:en.cap,fb:en.let),fb:en.let) : 1
      followedby(fb:en.let,followedby(fb:en.cap,fb:en.let)) : 1
      followedby(and(fb:en.cap,fb:en.let),fb:en.let) : 1
      fb:en.let : 2
      followedby(fb:en.let,fb:en.cap) : 2
      followedby(fb:en.let,fb:en.let) : 2
      and(fb:en.let,fb:en.cap) : 1
      fb:en.cap : 1
      followedby(fb:en.cap,fb:en.let) : 2
      followedby(followedby(fb:en.let,fb:en.cap),fb:en.let) : 1
      and(fb:en.cap,fb:en.let) : 1
      and(fb:en.let,followedby(fb:en.cap,fb:en.let)) : 1
  Line 5: Hyphens are allowed, but must be preceded by a letter and be followed by a lowercase letter
    Top prediction: followedby(fb:en.let,followedby(fb:en.low,fb:en.let))
    All 14 derivations and their counts: 
      followedby(fb:en.let,followedby(fb:en.low,fb:en.let)) : 1
      and(fb:en.let,fb:en.let) : 2
      followedby(fb:en.low,fb:en.let) : 2
      and(fb:en.low,fb:en.let) : 1
      followedby(followedby(fb:en.let,fb:en.low),fb:en.let) : 1
      fb:en.let : 2
      and(followedby(fb:en.low,fb:en.let),fb:en.let) : 1
      and(fb:en.let,followedby(fb:en.low,fb:en.let)) : 1
      followedby(and(fb:en.low,fb:en.let),fb:en.let) : 1
      followedby(fb:en.let,fb:en.let) : 2
      fb:en.low : 1
      followedby(fb:en.let,fb:en.low) : 2
      followedby(and(fb:en.let,fb:en.low),fb:en.let) : 1
      and(fb:en.let,fb:en.low) : 1
  Line 6: All uppercase letters must be followed by a lowercase letter unless they are followed by a space or hyphen
    Top prediction: followedby(fb:en.cap,fb:en.let)
    All 16 derivations and their counts: 
      followedby(followedby(fb:en.cap,fb:en.low),fb:en.let) : 1
      followedby(fb:en.cap,followedby(fb:en.low,fb:en.let)) : 2
      followedby(fb:en.let,followedby(fb:en.low,fb:en.let)) : 2
      followedby(followedby(fb:en.cap,fb:en.let),fb:en.low) : 1
      followedby(fb:en.low,fb:en.let) : 2
      followedby(followedby(fb:en.let,fb:en.low),fb:en.let) : 1
      fb:en.let : 2
      followedby(fb:en.let,fb:en.let) : 2
      followedby(fb:en.cap,followedby(fb:en.let,fb:en.low)) : 1
      fb:en.low : 1
      fb:en.cap : 1
      followedby(fb:en.let,fb:en.low) : 2
      followedby(fb:en.cap,fb:en.let) : 4
      followedby(followedby(fb:en.cap,fb:en.let),fb:en.let) : 1
      followedby(fb:en.cap,followedby(fb:en.let,fb:en.let)) : 1
      followedby(fb:en.cap,fb:en.low) : 2
=======================================================
Test on utterance 23:
  Line 0: I need a regular expression that can validate an input string to make sure it is a number between 1-30 and up to 2 decimal places.
    Top prediction: and(repeat(fb:en.dp,1,2),fb:en.any)
    All 17 derivations and their counts: 
      and(repeat(fb:en.dp,1,2),fb:en.any) : 1
      and(repeat(fb:en.dp,1,2),fb:en.num) : 1
      fb:en.num : 1
      and(repeat(fb:en.dp,2),fb:en.any) : 1
      fb:en.dp : 1
      and(fb:en.num,repeat(fb:en.dp,1,2)) : 1
      and(repeat(fb:en.dp,2),fb:en.num) : 1
      and(fb:en.num,repeat(fb:en.dp,2)) : 1
      and(fb:en.any,repeat(fb:en.dp,1,2)) : 1
      and(fb:en.dp,fb:en.any) : 1
      and(fb:en.any,repeat(fb:en.dp,2)) : 1
      and(fb:en.dp,fb:en.num) : 1
      and(fb:en.num,fb:en.dp) : 1
      repeat(fb:en.dp,1,2) : 1
      fb:en.any : 1
      and(fb:en.any,fb:en.dp) : 1
      repeat(fb:en.dp,2) : 1
=======================================================
Test on utterance 24:
  Line 0: I need to validate each sub string length is 3 which is split by <M0>.
    Top prediction: repeat(fb:en.any,3)
    All 6 derivations and their counts: 
      repeat(fb:en.any,3) : 1
      repeat(fb:en.const,3) : 1
      repeat(fb:en.const,1) : 1
      repeat(repeat(fb:en.const,3),1) : 1
      fb:en.any : 1
      fb:en.const : 1
=======================================================
Test on utterance 25:
  Line 0: I need a regular expression that can validate that a string is an alphanumeric <M0> delimited string.
    Top prediction: sep(fb:en.any)
    All 6 derivations and their counts: 
      sep(fb:en.letnum) : 1
      sep(fb:en.const) : 1
      fb:en.letnum : 1
      fb:en.any : 2
      fb:en.const : 1
      sep(fb:en.any) : 17
=======================================================
Test on utterance 26:
  Line 0: I need their cell phone formats to be like this  04AB - XXXXXXX Where 
    Top prediction: 
  Line 1: A can be either 1 or 2 and 
    Top prediction: or(1,2)
    All 1 derivations and their counts: 
      or(1,2) : 1
  Line 2: B can be either 2, 4 or 6 
    Top prediction: repeat(or(4,6),2)
    All 3 derivations and their counts: 
      or(2,6) : 1
      repeat(or(4,6),2) : 1
      or(4,6) : 1
  Line 3: X can be from 0 - 9 
    Top prediction: 
  Line 4: There must be exactly 7 numbers (X) after 04AB 
    Top prediction: repeat(fb:en.num,7)
    All 2 derivations and their counts: 
      fb:en.num : 1
      repeat(fb:en.num,7) : 1
  Line 5: It must always start with <M0>
    Top prediction: startwith(contain(fb:en.const))
    All 4 derivations and their counts: 
      startwith(fb:en.const) : 1
      startwith(contain(fb:en.const)) : 1
      fb:en.const : 1
      contain(fb:en.const) : 1
=======================================================
Test on utterance 27:
  Line 0: How should I write my regular expressions code to match following criteria? 
    Top prediction: 
  Line 1: It consists of at least two <M0> separated names 
    Top prediction: repeat(sep(fb:en.const),2,)
    All 6 derivations and their counts: 
      repeat(fb:en.const,2,) : 1
      repeat(fb:en.const,2) : 1
      repeat(sep(fb:en.const),2) : 1
      sep(fb:en.const) : 1
      repeat(sep(fb:en.const),2,) : 1
      fb:en.const : 1
  Line 2: All <M1> separated names at least 2 characters long 
    Top prediction: sep(fb:en.const)
    All 10 derivations and their counts: 
      repeat(fb:en.any,2) : 1
      repeat(fb:en.let,2) : 1
      repeat(fb:en.let,2,) : 1
      sep(fb:en.const) : 1
      sep(fb:en.let) : 1
      fb:en.let : 1
      fb:en.const : 1
      fb:en.any : 1
      repeat(fb:en.any,2,) : 1
      sep(fb:en.any) : 1
  Line 3: At least one <M2> separated name is at least 4 characters long
    Top prediction: repeat(fb:en.const,1)
    All 23 derivations and their counts: 
      repeat(fb:en.let,1,) : 2
      repeat(repeat(fb:en.let,4),1) : 1
      repeat(fb:en.any,1,4) : 1
      repeat(fb:en.any,4) : 1
      repeat(repeat(fb:en.any,4,),1,) : 1
      repeat(fb:en.const,1) : 1
      repeat(fb:en.let,4,) : 2
      repeat(fb:en.any,1) : 1
      repeat(repeat(fb:en.let,4),1,) : 2
      repeat(repeat(fb:en.any,4),1) : 1
      repeat(fb:en.let,1,4) : 1
      fb:en.let : 1
      repeat(repeat(fb:en.let,4,),1,) : 1
      repeat(repeat(fb:en.any,4,),1) : 1
      repeat(repeat(fb:en.any,4),1,) : 2
      repeat(fb:en.let,1) : 1
      repeat(fb:en.const,1,) : 1
      repeat(fb:en.let,4) : 1
      repeat(repeat(fb:en.let,4,),1) : 1
      repeat(fb:en.any,4,) : 2
      fb:en.const : 1
      fb:en.any : 1
      repeat(fb:en.any,1,) : 2
=======================================================
Test on utterance 28:
  Line 0: I need to write a regular expression to verify if a file input follows a rule: A111B2_3_C.exe in which:
    Top prediction: 
  Line 1: A: compulsory, it must be a ' <M0> '
    Top prediction: fb:en.const
    All 1 derivations and their counts: 
      fb:en.const : 1
  Line 2: 111: compulsory, it is a natural number
    Top prediction: fb:en.num
    All 2 derivations and their counts: 
      fb:en.num : 1
      repeat(fb:en.num,111) : 1
  Line 3: B: compulsory, it must be a ' <M1> '
    Top prediction: fb:en.const
    All 1 derivations and their counts: 
      fb:en.const : 1
  Line 4: 2: compulsory, it is in range from 1 -> 6
    Top prediction: 
  Line 5: _: compulsory, it must be ' <M2> '
    Top prediction: fb:en.const
    All 1 derivations and their counts: 
      fb:en.const : 1
  Line 6: 3: compulsory, it must be a nature number
    Top prediction: fb:en.num
    All 2 derivations and their counts: 
      fb:en.num : 1
      repeat(fb:en.num,3) : 1
  Line 7: _: optional if C followed, it must be ' <M3> '
    Top prediction: optional(fb:en.const)
    All 2 derivations and their counts: 
      optional(fb:en.const) : 1
      fb:en.const : 1
  Line 8: C: optional, C is a natural number
    Top prediction: optional(fb:en.num)
    All 2 derivations and their counts: 
      optional(fb:en.num) : 1
      fb:en.num : 1
  Line 9: .exe: is the end extension of the file
    Top prediction: 
=======================================================
Test on utterance 29:
  Line 0: Can anyone please help me to find the suitable regular expression to validate a string that has <M0> separated numbers
    Top prediction: fb:en.any
    All 5 derivations and their counts: 
      fb:en.num : 1
      fb:en.any : 1
      fb:en.const : 1
      contain(fb:en.num) : 1
      contain(fb:en.const) : 1
=======================================================
Test on utterance 30:
  Line 0: I'm looking for the perfect regular expression for validation a german car license the number has too look like this:
    Top prediction: fb:en.num
    All 1 derivations and their counts: 
      fb:en.num : 1
  Line 1: 1 - 3 Letters
    Top prediction: repeat(fb:en.let,3)
    All 5 derivations and their counts: 
      repeat(fb:en.let,1) : 1
      repeat(fb:en.let,1,3) : 1
      repeat(fb:en.let,3) : 1
      fb:en.let : 1
      repeat(repeat(fb:en.let,3),1) : 1
  Line 2: a <M0> (i know the minus is now out of date, but the customer want it that way)
    Top prediction: fb:en.const
    All 1 derivations and their counts: 
      fb:en.const : 1
  Line 3: 1 - 2 Letters
    Top prediction: repeat(fb:en.let,2)
    All 5 derivations and their counts: 
      repeat(fb:en.let,2) : 1
      repeat(fb:en.let,1) : 1
      repeat(fb:en.let,1,2) : 1
      fb:en.let : 1
      repeat(repeat(fb:en.let,2),1) : 1
  Line 4: a <M1>
    Top prediction: fb:en.const
    All 1 derivations and their counts: 
      fb:en.const : 1
  Line 5: 1 - 4 numbers
    Top prediction: repeat(fb:en.num,4)
    All 5 derivations and their counts: 
      fb:en.num : 1
      repeat(fb:en.num,1) : 1
      repeat(repeat(fb:en.num,4),1) : 1
      repeat(fb:en.num,4) : 1
      repeat(fb:en.num,1,4) : 1
=======================================================
Test on utterance 31:
  Line 0: I want to validate if my input consists starting with 8 hexadecimal characters followed by a <M0>
    Top prediction: startwith(contain(repeat(followedby(fb:en.let,fb:en.const),8)))
    All 64 derivations and their counts: 
      startwith(repeat(followedby(fb:en.let,fb:en.const),8)) : 1
      followedby(startwith(fb:en.let),fb:en.const) : 1
      startwith(fb:en.const) : 1
      contain(repeat(fb:en.const,8)) : 1
      startwith(followedby(fb:en.let,fb:en.const)) : 1
      followedby(repeat(fb:en.any,8),fb:en.const) : 1
      followedby(startwith(repeat(fb:en.any,8)),fb:en.const) : 1
      followedby(startwith(fb:en.any),fb:en.const) : 1
      contain(repeat(followedby(fb:en.any,fb:en.const),8)) : 1
      repeat(fb:en.any,8) : 1
      startwith(contain(repeat(followedby(fb:en.let,fb:en.const),8))) : 1
      followedby(startwith(contain(fb:en.any)),fb:en.const) : 1
      startwith(repeat(fb:en.let,8)) : 1
      followedby(fb:en.any,fb:en.const) : 1
      contain(repeat(followedby(fb:en.let,fb:en.const),8)) : 1
      startwith(contain(followedby(repeat(fb:en.let,8),fb:en.const))) : 1
      contain(followedby(repeat(fb:en.let,8),fb:en.const)) : 1
      startwith(followedby(contain(repeat(fb:en.let,8)),fb:en.const)) : 1
      followedby(contain(repeat(fb:en.let,8)),fb:en.const) : 1
      startwith(contain(fb:en.any)) : 1
      startwith(contain(repeat(fb:en.any,8))) : 1
      startwith(followedby(contain(repeat(fb:en.any,8)),fb:en.const)) : 1
      startwith(fb:en.let) : 1
      followedby(contain(fb:en.let),fb:en.const) : 1
      startwith(followedby(repeat(fb:en.let,8),fb:en.const)) : 1
      repeat(fb:en.let,8) : 1
      startwith(contain(fb:en.let)) : 1
      followedby(startwith(contain(repeat(fb:en.let,8))),fb:en.const) : 1
      followedby(startwith(contain(repeat(fb:en.any,8))),fb:en.const) : 1
      fb:en.any : 1
      followedby(startwith(repeat(fb:en.let,8)),fb:en.const) : 1
      repeat(fb:en.const,8) : 1
      startwith(followedby(repeat(fb:en.any,8),fb:en.const)) : 1
      startwith(repeat(fb:en.const,8)) : 1
      startwith(fb:en.any) : 1
      contain(fb:en.any) : 1
      contain(followedby(fb:en.let,fb:en.const)) : 1
      contain(followedby(fb:en.any,fb:en.const)) : 1
      startwith(contain(followedby(repeat(fb:en.any,8),fb:en.const))) : 1
      fb:en.let : 1
      startwith(contain(followedby(fb:en.any,fb:en.const))) : 1
      contain(repeat(fb:en.any,8)) : 1
      repeat(followedby(fb:en.any,fb:en.const),8) : 1
      startwith(contain(followedby(fb:en.let,fb:en.const))) : 1
      contain(repeat(fb:en.let,8)) : 1
      startwith(contain(repeat(followedby(fb:en.any,fb:en.const),8))) : 1
      startwith(followedby(contain(fb:en.any),fb:en.const)) : 1
      startwith(repeat(fb:en.any,8)) : 1
      startwith(contain(repeat(fb:en.const,8))) : 1
      contain(fb:en.const) : 1
      followedby(contain(repeat(fb:en.any,8)),fb:en.const) : 1
      startwith(followedby(contain(fb:en.let),fb:en.const)) : 1
      contain(fb:en.let) : 1
      startwith(contain(repeat(fb:en.let,8))) : 1
      startwith(followedby(fb:en.any,fb:en.const)) : 1
      followedby(startwith(contain(fb:en.let)),fb:en.const) : 1
      followedby(repeat(fb:en.let,8),fb:en.const) : 1
      followedby(contain(fb:en.any),fb:en.const) : 1
      startwith(contain(fb:en.const)) : 1
      fb:en.const : 1
      startwith(repeat(followedby(fb:en.any,fb:en.const),8)) : 1
      contain(followedby(repeat(fb:en.any,8),fb:en.const)) : 1
      followedby(fb:en.let,fb:en.const) : 1
      repeat(followedby(fb:en.let,fb:en.const),8) : 1
  Line 1: followed by any number of charters with any value.
    Top prediction: fb:en.any
    All 8 derivations and their counts: 
      fb:en.num : 1
      followedby(fb:en.num,contain(fb:en.any)) : 1
      contain(fb:en.any) : 1
      followedby(fb:en.any,contain(fb:en.any)) : 1
      fb:en.any : 2
      followedby(fb:en.any,fb:en.any) : 1
      followedby(fb:en.num,fb:en.any) : 1
      followedby(fb:en.any,fb:en.num) : 1
=======================================================
Test on utterance 32:
  Line 0: I'm trying to devise a regular expression which will accept decimal number up to 4 digits.
    Top prediction: fb:en.dp
    All 4 derivations and their counts: 
      fb:en.num : 2
      fb:en.dp : 1
      repeat(fb:en.num,4) : 1
      repeat(fb:en.num,1,4) : 1
=======================================================
Test on utterance 33:
  Line 0: Need a regular expression to check a string with 4 digit and the <M0> in trail.
    Top prediction: and(endwith(fb:en.const),fb:en.any)
    All 90 derivations and their counts: 
      contain(endwith(fb:en.const)) : 1
      and(endwith(fb:en.const),fb:en.num) : 1
      repeat(and(endwith(fb:en.const),fb:en.num),4) : 1
      contain(endwith(and(fb:en.const,repeat(fb:en.num,4)))) : 1
      contain(repeat(fb:en.const,4)) : 1
      contain(endwith(repeat(and(fb:en.num,fb:en.const),4))) : 1
      and(contain(fb:en.num),endwith(fb:en.const)) : 1
      contain(endwith(and(repeat(fb:en.num,4),fb:en.const))) : 1
      repeat(endwith(and(fb:en.num,fb:en.const)),4) : 1
      repeat(and(fb:en.num,endwith(fb:en.const)),4) : 1
      endwith(and(contain(repeat(fb:en.num,4)),fb:en.const)) : 1
      endwith(contain(fb:en.const)) : 1
      contain(and(endwith(fb:en.const),repeat(fb:en.num,4))) : 1
      endwith(contain(and(fb:en.const,repeat(fb:en.num,4)))) : 1
      repeat(and(fb:en.const,fb:en.num),4) : 1
      contain(and(endwith(fb:en.const),fb:en.num)) : 1
      endwith(contain(repeat(and(fb:en.const,fb:en.num),4))) : 1
      endwith(contain(and(repeat(fb:en.num,4),fb:en.const))) : 1
      contain(and(fb:en.num,fb:en.const)) : 1
      and(endwith(fb:en.const),contain(fb:en.num)) : 1
      and(contain(repeat(fb:en.num,4)),endwith(fb:en.const)) : 1
      fb:en.num : 1
      contain(repeat(endwith(and(fb:en.num,fb:en.const)),4)) : 1
      repeat(fb:en.const,4) : 1
      contain(endwith(repeat(and(fb:en.const,fb:en.num),4))) : 1
      endwith(and(fb:en.const,fb:en.num)) : 1
      and(endwith(fb:en.const),fb:en.any) : 1
      and(fb:en.const,contain(repeat(fb:en.num,4))) : 1
      contain(and(repeat(fb:en.num,4),fb:en.const)) : 1
      contain(endwith(repeat(fb:en.num,4))) : 1
      endwith(contain(repeat(fb:en.const,4))) : 1
      endwith(contain(and(fb:en.const,fb:en.num))) : 1
      endwith(repeat(fb:en.const,4)) : 1
      and(fb:en.const,fb:en.num) : 1
      and(repeat(fb:en.num,4),endwith(fb:en.const)) : 1
      and(fb:en.num,fb:en.const) : 1
      repeat(and(fb:en.num,fb:en.const),4) : 1
      contain(and(fb:en.const,repeat(fb:en.num,4))) : 1
      and(fb:en.any,endwith(fb:en.const)) : 1
      endwith(fb:en.num) : 1
      contain(repeat(and(fb:en.num,fb:en.const),4)) : 1
      endwith(contain(fb:en.num)) : 1
      repeat(fb:en.num,4) : 1
      fb:en.any : 1
      contain(repeat(endwith(and(fb:en.const,fb:en.num)),4)) : 1
      contain(and(repeat(fb:en.num,4),endwith(fb:en.const))) : 1
      endwith(and(fb:en.const,contain(fb:en.num))) : 1
      endwith(repeat(and(fb:en.const,fb:en.num),4)) : 1
      endwith(repeat(fb:en.num,4)) : 1
      and(endwith(fb:en.const),contain(repeat(fb:en.num,4))) : 1
      and(fb:en.const,contain(fb:en.num)) : 1
      contain(repeat(endwith(fb:en.const),4)) : 1
      endwith(and(fb:en.const,repeat(fb:en.num,4))) : 1
      and(fb:en.any,fb:en.const) : 1
      contain(endwith(and(fb:en.const,fb:en.num))) : 1
      and(fb:en.const,fb:en.any) : 1
      contain(endwith(fb:en.num)) : 1
      and(repeat(fb:en.num,4),fb:en.const) : 1
      repeat(endwith(fb:en.const),4) : 1
      endwith(and(fb:en.const,fb:en.any)) : 1
      endwith(contain(and(fb:en.num,fb:en.const))) : 1
      endwith(and(repeat(fb:en.num,4),fb:en.const)) : 1
      endwith(and(fb:en.const,contain(repeat(fb:en.num,4)))) : 1
      repeat(endwith(and(fb:en.const,fb:en.num)),4) : 1
      endwith(fb:en.const) : 1
      and(endwith(fb:en.const),repeat(fb:en.num,4)) : 1
      contain(fb:en.num) : 1
      contain(fb:en.const) : 1
      endwith(and(fb:en.any,fb:en.const)) : 1
      contain(repeat(and(endwith(fb:en.const),fb:en.num),4)) : 1
      contain(repeat(endwith(fb:en.num),4)) : 1
      contain(endwith(and(fb:en.num,fb:en.const))) : 1
      contain(repeat(fb:en.num,4)) : 1
      contain(and(fb:en.const,fb:en.num)) : 1
      endwith(and(fb:en.num,fb:en.const)) : 1
      contain(repeat(and(fb:en.const,fb:en.num),4)) : 1
      endwith(and(contain(fb:en.num),fb:en.const)) : 1
      contain(endwith(repeat(fb:en.const,4))) : 1
      endwith(repeat(and(fb:en.num,fb:en.const),4)) : 1
      contain(and(fb:en.num,endwith(fb:en.const))) : 1
      endwith(contain(repeat(fb:en.num,4))) : 1
      and(fb:en.num,endwith(fb:en.const)) : 1
      endwith(fb:en.any) : 1
      and(contain(repeat(fb:en.num,4)),fb:en.const) : 1
      endwith(contain(repeat(and(fb:en.num,fb:en.const),4))) : 1
      fb:en.const : 1
      repeat(endwith(fb:en.num),4) : 1
      contain(repeat(and(fb:en.num,endwith(fb:en.const)),4)) : 1
      and(contain(fb:en.num),fb:en.const) : 1
      and(fb:en.const,repeat(fb:en.num,4)) : 1
=======================================================
Test on utterance 34:
  Line 0: I need a regular expression in .net which
    Top prediction: 
  Line 1: will only allow a maximum of two digits after " <M0> "
    Top prediction: repeat(repeat(followedby(fb:en.const,fb:en.num),1,2),1,)
    All 25 derivations and their counts: 
      repeat(repeat(fb:en.const,1,2),1,) : 1
      repeat(followedby(fb:en.const,repeat(fb:en.num,1,2)),1,) : 1
      repeat(fb:en.const,1,2) : 1
      followedby(fb:en.const,repeat(fb:en.num,2)) : 2
      followedby(fb:en.const,repeat(repeat(fb:en.num,2),1,)) : 1
      repeat(fb:en.const,1,) : 1
      repeat(repeat(followedby(fb:en.const,fb:en.num),1,2),1,) : 1
      repeat(followedby(fb:en.const,fb:en.num),2) : 2
      repeat(followedby(fb:en.const,repeat(fb:en.num,2)),1,) : 1
      repeat(repeat(fb:en.num,1,2),1,) : 1
      followedby(fb:en.const,repeat(repeat(fb:en.num,1,2),1,)) : 1
      repeat(repeat(followedby(fb:en.const,fb:en.num),2),1,) : 1
      repeat(followedby(fb:en.const,fb:en.num),1,2) : 1
      repeat(followedby(fb:en.const,fb:en.num),1,) : 1
      fb:en.num : 1
      repeat(fb:en.const,2) : 2
      repeat(repeat(fb:en.const,2),1,) : 1
      repeat(fb:en.num,2) : 2
      repeat(fb:en.num,1,2) : 1
      repeat(fb:en.num,1,) : 1
      repeat(repeat(fb:en.num,2),1,) : 1
      followedby(fb:en.const,repeat(fb:en.num,1,2)) : 1
      fb:en.const : 1
      followedby(fb:en.const,fb:en.num) : 1
      followedby(fb:en.const,repeat(fb:en.num,1,)) : 1
  Line 2: will only allow a maximum of two digits before " <M1> "
    Top prediction: repeat(repeat(followedby(fb:en.num,fb:en.const),1,2),1,)
    All 25 derivations and their counts: 
      repeat(repeat(fb:en.const,1,2),1,) : 1
      repeat(repeat(followedby(fb:en.num,fb:en.const),2),1,) : 1
      repeat(followedby(repeat(fb:en.num,2),fb:en.const),1,) : 1
      repeat(repeat(followedby(fb:en.num,fb:en.const),1,2),1,) : 1
      repeat(followedby(repeat(fb:en.num,1,2),fb:en.const),1,) : 1
      repeat(fb:en.const,1,2) : 1
      followedby(repeat(fb:en.num,2),fb:en.const) : 2
      repeat(fb:en.const,1,) : 1
      repeat(repeat(fb:en.num,1,2),1,) : 1
      followedby(repeat(repeat(fb:en.num,1,2),1,),fb:en.const) : 1
      fb:en.num : 1
      repeat(fb:en.const,2) : 2
      repeat(repeat(fb:en.const,2),1,) : 1
      repeat(followedby(fb:en.num,fb:en.const),1,2) : 1
      repeat(fb:en.num,2) : 2
      followedby(repeat(repeat(fb:en.num,2),1,),fb:en.const) : 1
      followedby(repeat(fb:en.num,1,2),fb:en.const) : 1
      followedby(repeat(fb:en.num,1,),fb:en.const) : 1
      repeat(fb:en.num,1,2) : 1
      repeat(followedby(fb:en.num,fb:en.const),1,) : 1
      repeat(followedby(fb:en.num,fb:en.const),2) : 2
      repeat(fb:en.num,1,) : 1
      repeat(repeat(fb:en.num,2),1,) : 1
      fb:en.const : 1
      followedby(fb:en.num,fb:en.const) : 1
  Line 3: has a maximum length of 5
    Top prediction: 
  Line 4: represents a number greater than 0
    Top prediction: fb:en.num
    All 1 derivations and their counts: 
      fb:en.num : 1
  Line 5: represents a number not greater than 100
    Top prediction: not(fb:en.num)
    All 2 derivations and their counts: 
      fb:en.num : 1
      not(fb:en.num) : 1
  Line 6: has a number not greater than 11 after " <M2> "
    Top prediction: not(fb:en.num)
    All 20 derivations and their counts: 
      contain(followedby(fb:en.const,fb:en.num)) : 1
      fb:en.num : 1
      not(fb:en.const) : 1
      contain(repeat(fb:en.const,11)) : 1
      not(fb:en.num) : 1
      contain(not(fb:en.num)) : 1
      followedby(fb:en.const,not(fb:en.num)) : 1
      contain(not(fb:en.const)) : 1
      repeat(fb:en.const,11) : 1
      not(contain(fb:en.num)) : 1
      contain(not(repeat(fb:en.const,11))) : 1
      followedby(fb:en.const,contain(fb:en.num)) : 1
      fb:en.const : 1
      followedby(fb:en.const,contain(not(fb:en.num))) : 1
      not(repeat(fb:en.const,11)) : 1
      contain(followedby(fb:en.const,not(fb:en.num))) : 1
      followedby(fb:en.const,fb:en.num) : 1
      contain(fb:en.num) : 1
      followedby(fb:en.const,not(contain(fb:en.num))) : 1
      contain(fb:en.const) : 1
=======================================================
Test on utterance 35:
  Line 0: Valid input are at least two characters with <M0> symbol. 
    Top prediction: repeat(fb:en.let,2,)
    All 12 derivations and their counts: 
      repeat(fb:en.const,2,) : 1
      repeat(fb:en.any,2) : 1
      repeat(fb:en.let,2) : 1
      repeat(fb:en.let,2,) : 1
      repeat(fb:en.const,2) : 1
      repeat(contain(fb:en.const),2,) : 1
      repeat(contain(fb:en.const),2) : 1
      fb:en.let : 1
      fb:en.any : 1
      fb:en.const : 1
      repeat(fb:en.any,2,) : 1
      contain(fb:en.const) : 1
  Line 1: In other words valid format is < ' <M1> ' or nothing> <at least two characters> < ' <M2> ' or nothing>
    Top prediction: or(fb:en.const,fb:en.any)
    All 5 derivations and their counts: 
      or(fb:en.const,fb:en.any) : 1
      or(fb:en.any,fb:en.const) : 1
      fb:en.any : 1
      fb:en.const : 2
      or(fb:en.const,fb:en.const) : 2
=======================================================
Test on utterance 36:
  Line 0: I'm trying to validate a value and that value cannot have a zero and then a number in front of it
    Top prediction: not(contain(repeat(fb:en.num,0)))
    All 8 derivations and their counts: 
      fb:en.num : 1
      repeat(fb:en.num,0) : 1
      not(repeat(fb:en.num,0)) : 1
      contain(repeat(fb:en.num,0)) : 1
      not(contain(fb:en.num)) : 1
      not(fb:en.num) : 1
      not(contain(repeat(fb:en.num,0))) : 1
      contain(fb:en.num) : 1
=======================================================
Test on utterance 37:
  Line 0: I am trying to create a regular expression which will validate a text. 
    Top prediction: 
  Line 1: Conditions are as follows:
    Top prediction: 
  Line 2: Must contain at least one alphanumeric character [A-Z a-z 0-9]
    Top prediction: contain(repeat(fb:en.letnum,1,))
    All 18 derivations and their counts: 
      repeat(fb:en.let,1,) : 1
      contain(repeat(fb:en.any,1)) : 1
      repeat(fb:en.letnum,1) : 1
      contain(repeat(fb:en.let,1,)) : 1
      contain(fb:en.any) : 1
      repeat(fb:en.any,1) : 1
      fb:en.let : 1
      contain(repeat(fb:en.letnum,1,)) : 1
      contain(fb:en.let) : 1
      contain(fb:en.letnum) : 1
      contain(repeat(fb:en.letnum,1)) : 1
      repeat(fb:en.let,1) : 1
      contain(repeat(fb:en.let,1)) : 1
      contain(repeat(fb:en.any,1,)) : 1
      fb:en.letnum : 1
      repeat(fb:en.letnum,1,) : 1
      fb:en.any : 1
      repeat(fb:en.any,1,) : 1
  Line 3: Can contain allowed special character like [ <M0> <M1> ]. This is optional.
    Top prediction: contain(optional(fb:en.sp))
    All 20 derivations and their counts: 
      contain(optional(fb:en.let)) : 1
      contain(fb:en.any) : 1
      optional(contain(fb:en.any)) : 1
      contain(fb:en.sp) : 1
      optional(contain(fb:en.const)) : 2
      fb:en.let : 1
      contain(fb:en.let) : 1
      contain(optional(fb:en.sp)) : 1
      optional(fb:en.any) : 1
      contain(optional(fb:en.const)) : 2
      fb:en.sp : 1
      optional(fb:en.const) : 2
      optional(contain(fb:en.sp)) : 1
      optional(fb:en.sp) : 1
      optional(contain(fb:en.let)) : 1
      fb:en.any : 1
      fb:en.const : 2
      contain(optional(fb:en.any)) : 1
      optional(fb:en.let) : 1
      contain(fb:en.const) : 2
  Line 4: No other characters are allowed other than the above mentioned chars[includes <M2> and <M3>].
    Top prediction: not(fb:en.let)
    All 28 derivations and their counts: 
      and(contain(fb:en.const),fb:en.const) : 1
      and(not(fb:en.const),fb:en.const) : 1
      contain(and(fb:en.const,fb:en.const)) : 2
      and(fb:en.const,fb:en.const) : 2
      and(fb:en.const,not(fb:en.let)) : 1
      and(fb:en.any,fb:en.const) : 1
      and(fb:en.const,fb:en.any) : 1
      and(not(fb:en.let),fb:en.const) : 1
      not(and(fb:en.const,contain(fb:en.const))) : 1
      not(fb:en.any) : 1
      fb:en.let : 1
      and(fb:en.const,not(contain(fb:en.const))) : 1
      and(fb:en.let,fb:en.const) : 1
      and(not(fb:en.any),fb:en.const) : 1
      not(fb:en.let) : 1
      not(contain(and(fb:en.const,fb:en.const))) : 2
      contain(fb:en.const) : 2
      and(fb:en.const,contain(fb:en.const)) : 1
      not(fb:en.const) : 2
      and(fb:en.const,not(fb:en.const)) : 1
      and(fb:en.const,not(fb:en.any)) : 1
      not(and(fb:en.const,fb:en.const)) : 2
      and(fb:en.const,fb:en.let) : 1
      not(contain(fb:en.const)) : 2
      not(and(contain(fb:en.const),fb:en.const)) : 1
      fb:en.any : 1
      fb:en.const : 2
      and(not(contain(fb:en.const)),fb:en.const) : 1
  Line 5: Text length should be less than 8.
    Top prediction: 
=======================================================
Test on utterance 38:
  Line 0: I need a regular expression that will test the input
    Top prediction: 
  Line 1: Should start with only one <M0> symbol or optional ( + should not come in between )
    Top prediction: startwith(contain(repeat(repeat(optional(fb:en.const),1),1,)))
derivSize == beamSize
    All 160 derivations and their counts: 
      contain(repeat(not(fb:en.const),1,)) : 1
      startwith(optional(contain(repeat(fb:en.const,1,)))) : 1
      startwith(not(optional(contain(repeat(fb:en.const,1))))) : 2
      startwith(not(optional(repeat(fb:en.const,1,)))) : 1
      startwith(not(optional(repeat(repeat(fb:en.const,1),1,)))) : 1
      startwith(fb:en.const) : 1
      not(startwith(optional(repeat(repeat(fb:en.const,1),1,)))) : 1
      startwith(contain(repeat(repeat(fb:en.const,1),1,))) : 1
      startwith(not(repeat(optional(fb:en.const),1,))) : 1
      startwith(contain(repeat(optional(repeat(fb:en.const,1)),1,))) : 1
      startwith(contain(repeat(repeat(not(fb:en.const),1),1,))) : 1
      startwith(contain(repeat(fb:en.const,1,))) : 1
      not(startwith(contain(optional(repeat(fb:en.const,1))))) : 2
      startwith(contain(optional(repeat(fb:en.const,1)))) : 2
      startwith(repeat(repeat(not(fb:en.const),1),1,)) : 1
      startwith(optional(repeat(fb:en.const,1))) : 2
      startwith(not(contain(optional(fb:en.const)))) : 1
      not(startwith(contain(repeat(optional(repeat(fb:en.const,1)),1,)))) : 1
      startwith(contain(not(optional(repeat(fb:en.const,1,))))) : 1
      not(optional(startwith(repeat(repeat(fb:en.const,1),1,)))) : 1
      optional(startwith(repeat(fb:en.const,1))) : 2
      not(startwith(optional(contain(fb:en.const)))) : 1
      not(startwith(contain(repeat(fb:en.const,1)))) : 2
      startwith(contain(not(repeat(optional(fb:en.const),1,)))) : 1
      contain(not(repeat(optional(repeat(fb:en.const,1)),1,))) : 1
      startwith(not(repeat(optional(fb:en.const),1))) : 2
      contain(not(repeat(optional(fb:en.const),1))) : 2
      optional(startwith(repeat(fb:en.const,1,))) : 1
      contain(repeat(fb:en.const,1,)) : 1
      startwith(not(repeat(fb:en.const,1))) : 2
      contain(not(repeat(fb:en.const,1))) : 2
      contain(repeat(not(optional(repeat(fb:en.const,1))),1,)) : 1
      not(startwith(repeat(optional(repeat(fb:en.const,1)),1,))) : 1
      not(optional(startwith(contain(repeat(fb:en.const,1))))) : 2
      not(startwith(contain(repeat(fb:en.const,1,)))) : 1
      startwith(contain(repeat(not(repeat(optional(fb:en.const),1)),1,))) : 1
      startwith(contain(not(optional(repeat(repeat(fb:en.const,1),1,))))) : 1
      startwith(contain(repeat(not(repeat(fb:en.const,1)),1,))) : 1
      startwith(not(repeat(optional(repeat(fb:en.const,1)),1,))) : 1
      startwith(not(repeat(fb:en.const,1,))) : 1
      contain(not(repeat(repeat(fb:en.const,1),1,))) : 1
      startwith(not(contain(repeat(optional(fb:en.const),1)))) : 2
      optional(startwith(repeat(repeat(fb:en.const,1),1,))) : 1
      startwith(not(contain(repeat(fb:en.const,1)))) : 2
      startwith(not(optional(contain(repeat(fb:en.const,1,))))) : 1
      contain(repeat(fb:en.const,1)) : 2
      contain(repeat(repeat(not(fb:en.const),1),1,)) : 1
      startwith(repeat(not(repeat(fb:en.const,1)),1,)) : 1
      contain(optional(repeat(fb:en.const,1,))) : 1
      contain(repeat(not(optional(fb:en.const)),1)) : 2
      startwith(optional(fb:en.const)) : 1
      not(optional(startwith(contain(fb:en.const)))) : 1
      contain(repeat(not(optional(fb:en.const)),1,)) : 1
      startwith(contain(optional(repeat(repeat(fb:en.const,1),1,)))) : 1
      contain(repeat(optional(fb:en.const),1,)) : 1
      startwith(repeat(not(optional(repeat(fb:en.const,1))),1,)) : 1
      contain(not(optional(repeat(fb:en.const,1)))) : 2
      startwith(optional(repeat(repeat(fb:en.const,1),1,))) : 1
      not(startwith(optional(contain(repeat(repeat(fb:en.const,1),1,))))) : 1
      startwith(contain(not(optional(repeat(fb:en.const,1))))) : 2
      not(startwith(contain(repeat(optional(fb:en.const),1,)))) : 1
      startwith(not(contain(optional(repeat(fb:en.const,1,))))) : 1
      not(startwith(repeat(fb:en.const,1))) : 2
      startwith(contain(not(repeat(fb:en.const,1,)))) : 1
      startwith(not(contain(repeat(optional(repeat(fb:en.const,1)),1,)))) : 1
      startwith(not(optional(repeat(fb:en.const,1)))) : 2
      not(startwith(contain(optional(fb:en.const)))) : 1
      optional(startwith(contain(repeat(fb:en.const,1)))) : 2
      not(startwith(optional(contain(repeat(fb:en.const,1))))) : 2
      optional(startwith(fb:en.const)) : 1
      startwith(repeat(not(optional(fb:en.const)),1)) : 2
      startwith(contain(not(repeat(repeat(optional(fb:en.const),1),1,)))) : 1
      startwith(not(contain(repeat(fb:en.const,1,)))) : 1
      startwith(contain(fb:en.const)) : 1
      contain(repeat(repeat(optional(fb:en.const),1),1,)) : 1
      not(optional(startwith(repeat(fb:en.const,1)))) : 2
      startwith(optional(contain(repeat(fb:en.const,1)))) : 2
      not(startwith(contain(repeat(repeat(optional(fb:en.const),1),1,)))) : 1
      contain(repeat(optional(fb:en.const),1)) : 2
      contain(repeat(not(repeat(optional(fb:en.const),1)),1,)) : 1
      contain(repeat(not(repeat(fb:en.const,1)),1,)) : 1
      startwith(optional(contain(repeat(repeat(fb:en.const,1),1,)))) : 1
      not(optional(startwith(fb:en.const))) : 1
      startwith(contain(not(repeat(optional(repeat(fb:en.const,1)),1,)))) : 1
      not(startwith(contain(repeat(repeat(fb:en.const,1),1,)))) : 1
      startwith(repeat(fb:en.const,1)) : 2
      startwith(not(optional(contain(fb:en.const)))) : 1
      startwith(repeat(repeat(fb:en.const,1),1,)) : 1
      startwith(not(contain(fb:en.const))) : 1
      startwith(repeat(optional(repeat(fb:en.const,1)),1,)) : 1
      not(startwith(repeat(repeat(optional(fb:en.const),1),1,))) : 1
      contain(repeat(repeat(fb:en.const,1),1,)) : 1
      startwith(contain(repeat(not(fb:en.const),1,))) : 1
      startwith(not(contain(repeat(repeat(fb:en.const,1),1,)))) : 1
      not(startwith(optional(fb:en.const))) : 1
      startwith(contain(not(repeat(fb:en.const,1)))) : 2
      startwith(repeat(not(fb:en.const),1)) : 2
      not(startwith(contain(optional(repeat(repeat(fb:en.const,1),1,))))) : 1
      contain(repeat(optional(repeat(fb:en.const,1)),1,)) : 1
      contain(repeat(not(fb:en.const),1)) : 2
      startwith(repeat(not(optional(fb:en.const)),1,)) : 1
      startwith(not(repeat(repeat(optional(fb:en.const),1),1,))) : 1
      startwith(contain(repeat(not(optional(repeat(fb:en.const,1))),1,))) : 1
      startwith(contain(not(fb:en.const))) : 1
      not(startwith(optional(repeat(fb:en.const,1,)))) : 1
      startwith(optional(contain(fb:en.const))) : 1
      startwith(repeat(repeat(not(optional(fb:en.const)),1),1,)) : 1
      startwith(contain(repeat(not(fb:en.const),1))) : 2
      startwith(contain(repeat(not(optional(fb:en.const)),1))) : 2
      not(startwith(repeat(optional(fb:en.const),1,))) : 1
      startwith(contain(not(optional(fb:en.const)))) : 1
      startwith(contain(repeat(repeat(optional(fb:en.const),1),1,))) : 1
      startwith(contain(repeat(optional(fb:en.const),1,))) : 1
      startwith(not(contain(optional(repeat(repeat(fb:en.const,1),1,))))) : 1
      startwith(contain(repeat(optional(fb:en.const),1))) : 2
      startwith(contain(not(repeat(optional(fb:en.const),1)))) : 2
      not(startwith(optional(repeat(fb:en.const,1)))) : 2
      optional(startwith(contain(repeat(fb:en.const,1,)))) : 1
      not(startwith(repeat(fb:en.const,1,))) : 1
      not(optional(startwith(repeat(fb:en.const,1,)))) : 1
      contain(not(repeat(repeat(optional(fb:en.const),1),1,))) : 1
      startwith(contain(repeat(fb:en.const,1))) : 2
      not(startwith(contain(repeat(optional(fb:en.const),1)))) : 2
      not(startwith(repeat(repeat(fb:en.const,1),1,))) : 1
      optional(startwith(contain(repeat(repeat(fb:en.const,1),1,)))) : 1
      startwith(repeat(not(fb:en.const),1,)) : 1
      startwith(not(optional(contain(repeat(repeat(fb:en.const,1),1,))))) : 1
      startwith(contain(not(repeat(repeat(fb:en.const,1),1,)))) : 1
      contain(repeat(repeat(not(optional(fb:en.const)),1),1,)) : 1
      startwith(repeat(optional(fb:en.const),1,)) : 1
      contain(not(optional(repeat(fb:en.const,1,)))) : 1
      not(startwith(contain(optional(repeat(fb:en.const,1,))))) : 1
      startwith(contain(repeat(not(optional(fb:en.const)),1,))) : 1
      contain(not(repeat(fb:en.const,1,))) : 1
      startwith(optional(repeat(fb:en.const,1,))) : 1
      startwith(not(optional(fb:en.const))) : 1
      startwith(not(repeat(repeat(fb:en.const,1),1,))) : 1
      not(optional(startwith(contain(repeat(repeat(fb:en.const,1),1,))))) : 1
      startwith(contain(optional(repeat(fb:en.const,1,)))) : 1
      not(startwith(contain(fb:en.const))) : 1
      startwith(not(contain(repeat(repeat(optional(fb:en.const),1),1,)))) : 1
      startwith(not(fb:en.const)) : 1
      not(startwith(fb:en.const)) : 1
      contain(optional(repeat(repeat(fb:en.const,1),1,))) : 1
      startwith(contain(repeat(repeat(not(optional(fb:en.const)),1),1,))) : 1
      startwith(repeat(optional(fb:en.const),1)) : 2
      not(optional(startwith(contain(repeat(fb:en.const,1,))))) : 1
      contain(not(repeat(optional(fb:en.const),1,))) : 1
      startwith(repeat(fb:en.const,1,)) : 1
      not(startwith(repeat(optional(fb:en.const),1))) : 2
      contain(not(optional(repeat(repeat(fb:en.const,1),1,)))) : 1
      startwith(repeat(not(repeat(optional(fb:en.const),1)),1,)) : 1
      contain(optional(fb:en.const)) : 1
      startwith(contain(optional(fb:en.const))) : 1
      startwith(not(contain(repeat(optional(fb:en.const),1,)))) : 1
      startwith(repeat(repeat(optional(fb:en.const),1),1,)) : 1
      not(startwith(optional(contain(repeat(fb:en.const,1,))))) : 1
      contain(optional(repeat(fb:en.const,1))) : 2
      optional(startwith(contain(fb:en.const))) : 1
      startwith(not(contain(optional(repeat(fb:en.const,1))))) : 2
  Line 2: should not contain alphabets and any other special character
    Top prediction: not(contain(and(fb:en.any,fb:en.let)))
    All 56 derivations and their counts: 
      and(fb:en.let,contain(fb:en.let)) : 1
      not(contain(and(fb:en.sp,fb:en.let))) : 1
      and(fb:en.sp,not(contain(fb:en.let))) : 1
      and(not(fb:en.let),fb:en.any) : 2
      and(not(contain(fb:en.let)),fb:en.sp) : 1
      not(contain(fb:en.any)) : 2
      not(fb:en.any) : 2
      and(fb:en.let,fb:en.sp) : 1
      fb:en.sp : 1
      and(fb:en.let,fb:en.any) : 2
      not(fb:en.sp) : 1
      contain(and(fb:en.let,fb:en.sp)) : 1
      not(contain(fb:en.let)) : 2
      not(and(contain(fb:en.let),fb:en.let)) : 1
      contain(and(fb:en.let,fb:en.any)) : 2
      not(and(contain(fb:en.let),fb:en.sp)) : 1
      and(fb:en.sp,not(fb:en.let)) : 1
      and(fb:en.any,fb:en.let) : 2
      not(and(fb:en.let,fb:en.any)) : 2
      and(fb:en.any,not(fb:en.let)) : 2
      not(contain(and(fb:en.let,fb:en.sp))) : 1
      not(and(fb:en.any,contain(fb:en.let))) : 2
      and(not(contain(fb:en.let)),fb:en.let) : 1
      not(contain(and(fb:en.let,fb:en.any))) : 2
      contain(and(fb:en.let,fb:en.let)) : 2
      not(and(fb:en.sp,fb:en.let)) : 1
      and(contain(fb:en.let),fb:en.let) : 1
      not(and(contain(fb:en.let),fb:en.any)) : 2
      not(and(fb:en.let,contain(fb:en.let))) : 1
      not(and(fb:en.let,fb:en.let)) : 2
      contain(and(fb:en.sp,fb:en.let)) : 1
      fb:en.any : 2
      and(fb:en.let,not(fb:en.let)) : 1
      and(fb:en.any,not(contain(fb:en.let))) : 2
      contain(fb:en.any) : 2
      contain(fb:en.sp) : 1
      fb:en.let : 2
      and(fb:en.any,contain(fb:en.let)) : 2
      and(not(fb:en.let),fb:en.sp) : 1
      and(not(fb:en.let),fb:en.let) : 1
      and(contain(fb:en.let),fb:en.sp) : 1
      not(and(fb:en.let,fb:en.sp)) : 1
      not(fb:en.let) : 2
      and(not(contain(fb:en.let)),fb:en.any) : 2
      and(fb:en.let,fb:en.let) : 2
      not(contain(and(fb:en.any,fb:en.let))) : 2
      not(and(fb:en.any,fb:en.let)) : 2
      contain(fb:en.let) : 2
      and(fb:en.sp,contain(fb:en.let)) : 1
      not(contain(and(fb:en.let,fb:en.let))) : 2
      not(contain(fb:en.sp)) : 1
      and(fb:en.let,not(contain(fb:en.let))) : 1
      contain(and(fb:en.any,fb:en.let)) : 2
      and(contain(fb:en.let),fb:en.any) : 2
      not(and(fb:en.sp,contain(fb:en.let))) : 1
      and(fb:en.sp,fb:en.let) : 1
  Line 3: Should not contain consecutive <M1> symbols
    Top prediction: not(contain(fb:en.const))
    All 4 derivations and their counts: 
      not(fb:en.const) : 1
      not(contain(fb:en.const)) : 1
      fb:en.const : 1
      contain(fb:en.const) : 1
=======================================================
Test on utterance 39:
  Line 0: I am trying to use a regular expression to validate decimal values .
    Top prediction: fb:en.dp
    All 1 derivations and their counts: 
      fb:en.dp : 1
  Line 1: Rules :
    Top prediction: 
  Line 2: It should allow positive numbers.
    Top prediction: fb:en.num
    All 1 derivations and their counts: 
      fb:en.num : 1
  Line 3: It should allow max 13 numbers before decimal point
    Top prediction: repeat(followedby(fb:en.num,fb:en.dp),1,13)
    All 11 derivations and their counts: 
      fb:en.num : 1
      followedby(repeat(fb:en.num,1,13),fb:en.dp) : 1
      repeat(followedby(fb:en.num,fb:en.dp),13) : 1
      repeat(fb:en.dp,1,13) : 1
      fb:en.dp : 1
      repeat(fb:en.num,1,13) : 1
      repeat(fb:en.dp,13) : 1
      repeat(fb:en.num,13) : 1
      followedby(repeat(fb:en.num,13),fb:en.dp) : 1
      repeat(followedby(fb:en.num,fb:en.dp),1,13) : 1
      followedby(fb:en.num,fb:en.dp) : 1
  Line 4: It should allow max two number after decimal.
    Top prediction: repeat(followedby(fb:en.dp,fb:en.num),1,2)
    All 11 derivations and their counts: 
      repeat(followedby(fb:en.dp,fb:en.num),1,2) : 1
      repeat(followedby(fb:en.dp,fb:en.num),2) : 1
      fb:en.num : 1
      followedby(fb:en.dp,repeat(fb:en.num,1,2)) : 1
      followedby(fb:en.dp,fb:en.num) : 1
      repeat(fb:en.dp,1,2) : 1
      fb:en.dp : 1
      repeat(fb:en.num,2) : 1
      repeat(fb:en.num,1,2) : 1
      followedby(fb:en.dp,repeat(fb:en.num,2)) : 1
      repeat(fb:en.dp,2) : 1
  Line 5: It should allow . ( dot ) with number like a <M0>
    Top prediction: fb:en.dp
    All 5 derivations and their counts: 
      fb:en.num : 1
      fb:en.dp : 1
      fb:en.const : 1
      contain(fb:en.num) : 1
      contain(fb:en.const) : 1
  Line 6: It should not allow the <M1>
    Top prediction: not(fb:en.const)
    All 2 derivations and their counts: 
      not(fb:en.const) : 1
      fb:en.const : 1
=======================================================
Test on utterance 40:
  Line 0: i need regular expression for :
    Top prediction: 
  Line 1: one or two digits then <M0> and one or two digits.
    Top prediction: repeat(followedby(fb:en.num,and(or(1,2),fb:en.const)),2)
derivSize == beamSize
    All 195 derivations and their counts: 
      repeat(and(repeat(fb:en.num,1,2),fb:en.num),2) : 1
      repeat(and(fb:en.num,fb:en.num),2) : 2
      repeat(followedby(fb:en.num,and(repeat(fb:en.num,2),fb:en.const)),2) : 1
      repeat(and(repeat(fb:en.num,1),fb:en.const),2) : 1
      and(followedby(repeat(fb:en.num,2),fb:en.const),or(1,2)) : 1
      repeat(followedby(and(or(1,2),fb:en.const),fb:en.num),2) : 1
      followedby(repeat(fb:en.num,2),fb:en.const) : 1
      followedby(fb:en.num,and(fb:en.num,fb:en.const)) : 1
      repeat(or(repeat(fb:en.num,2),fb:en.const),2) : 1
      repeat(followedby(fb:en.const,or(1,2)),2) : 1
      and(repeat(fb:en.const,2),fb:en.num) : 1
      and(or(1,2),repeat(fb:en.const,2)) : 1
      and(repeat(fb:en.num,2),or(1,2)) : 1
      followedby(repeat(fb:en.num,2),and(repeat(repeat(fb:en.num,2),1),fb:en.const)) : 1
      and(repeat(fb:en.num,2),repeat(fb:en.num,1)) : 1
      followedby(repeat(fb:en.num,2),and(fb:en.const,repeat(repeat(fb:en.num,2),1))) : 1
      repeat(repeat(repeat(fb:en.num,2),1),2) : 1
      repeat(repeat(fb:en.num,2),2,1) : 1
      and(repeat(followedby(fb:en.num,fb:en.const),2),repeat(fb:en.num,1)) : 1
      and(repeat(fb:en.num,1,2),followedby(fb:en.num,fb:en.const)) : 1
      and(repeat(fb:en.const,2),repeat(fb:en.num,1)) : 1
      and(fb:en.num,repeat(followedby(fb:en.num,fb:en.const),2)) : 1
      followedby(fb:en.num,and(fb:en.const,repeat(fb:en.num,1,2))) : 1
      followedby(fb:en.num,and(repeat(fb:en.num,2),fb:en.const)) : 1
      repeat(and(fb:en.num,repeat(fb:en.num,1)),2) : 1
      repeat(repeat(fb:en.num,1,2),2) : 1
      followedby(fb:en.num,and(or(1,2),fb:en.const)) : 1
      or(fb:en.num,repeat(fb:en.const,2)) : 1
      repeat(followedby(fb:en.num,and(repeat(fb:en.num,1),fb:en.const)),2) : 1
      repeat(or(fb:en.num,fb:en.const),2) : 1
      repeat(followedby(fb:en.const,repeat(repeat(fb:en.num,2),1)),2) : 1
      repeat(and(repeat(fb:en.num,2),followedby(fb:en.num,fb:en.const)),2) : 1
      and(or(1,2),repeat(fb:en.num,2)) : 1
      repeat(and(or(1,2),followedby(fb:en.num,fb:en.const)),2) : 1
      or(followedby(repeat(fb:en.num,2),fb:en.const),repeat(fb:en.num,2)) : 1
      repeat(and(fb:en.num,repeat(fb:en.num,1,2)),2) : 1
      repeat(fb:en.num,2,2) : 1
      followedby(fb:en.num,and(fb:en.const,repeat(fb:en.num,2))) : 1
      and(repeat(followedby(fb:en.num,fb:en.const),2),repeat(fb:en.num,2)) : 1
      repeat(followedby(fb:en.const,repeat(fb:en.num,1)),2) : 1
      and(followedby(repeat(fb:en.num,2),fb:en.const),fb:en.num) : 1
      followedby(repeat(fb:en.num,2),and(fb:en.num,fb:en.const)) : 1
      or(fb:en.num,repeat(followedby(fb:en.num,fb:en.const),2)) : 1
      followedby(repeat(fb:en.num,2),fb:en.num) : 1
      followedby(fb:en.num,and(fb:en.const,or(1,2))) : 1
      and(repeat(followedby(fb:en.num,fb:en.const),2),repeat(fb:en.num,1,2)) : 1
      or(repeat(fb:en.num,2),repeat(fb:en.num,2)) : 2
      repeat(followedby(fb:en.num,or(fb:en.const,repeat(fb:en.num,2))),2) : 1
      repeat(fb:en.num,2,1) : 1
      and(or(1,2),followedby(repeat(fb:en.num,2),fb:en.const)) : 1
      followedby(repeat(fb:en.num,2),and(repeat(fb:en.num,1,2),fb:en.const)) : 1
      and(repeat(fb:en.const,2),repeat(fb:en.num,2)) : 1
      repeat(followedby(fb:en.num,fb:en.const),2) : 1
      repeat(and(fb:en.num,fb:en.const),2) : 1
      repeat(followedby(fb:en.num,and(repeat(repeat(fb:en.num,2),1),fb:en.const)),2) : 1
      and(repeat(fb:en.const,2),or(1,2)) : 1
      repeat(followedby(fb:en.num,repeat(fb:en.num,1)),2) : 1
      followedby(fb:en.num,and(repeat(fb:en.num,1),fb:en.const)) : 1
      repeat(repeat(fb:en.num,1),2) : 1
      repeat(or(fb:en.const,fb:en.num),2) : 1
      repeat(and(fb:en.num,followedby(fb:en.num,fb:en.const)),2) : 1
      repeat(followedby(or(1,2),fb:en.num),2) : 1
      followedby(repeat(fb:en.num,2),and(fb:en.const,fb:en.num)) : 1
      repeat(and(followedby(fb:en.num,fb:en.const),repeat(fb:en.num,1,2)),2) : 1
      repeat(followedby(fb:en.num,repeat(fb:en.num,1,2)),2) : 1
      repeat(followedby(fb:en.num,fb:en.num),2) : 1
      followedby(fb:en.num,or(repeat(fb:en.num,2),fb:en.const)) : 1
      followedby(repeat(fb:en.num,2),and(fb:en.const,repeat(fb:en.num,1))) : 1
      repeat(and(fb:en.const,repeat(repeat(fb:en.num,2),1)),2) : 1
      followedby(fb:en.num,or(fb:en.const,fb:en.num)) : 1
      repeat(or(repeat(fb:en.num,2),followedby(fb:en.num,fb:en.const)),2) : 1
      or(followedby(repeat(fb:en.num,2),fb:en.const),fb:en.num) : 1
      repeat(or(fb:en.num,followedby(fb:en.num,fb:en.const)),2) : 1
      repeat(and(fb:en.const,repeat(fb:en.num,2)),2) : 1
      or(2,2) : 1
      repeat(followedby(fb:en.num,and(fb:en.const,repeat(fb:en.num,1,2))),2) : 1
      repeat(followedby(fb:en.num,or(repeat(fb:en.num,2),fb:en.const)),2) : 1
      repeat(and(fb:en.num,repeat(repeat(fb:en.num,2),1)),2) : 1
      followedby(repeat(fb:en.num,2),and(fb:en.const,repeat(fb:en.num,2))) : 1
      repeat(followedby(fb:en.num,and(fb:en.num,fb:en.const)),2) : 1
      repeat(followedby(fb:en.num,repeat(fb:en.num,2)),2) : 1
      and(repeat(fb:en.num,1,2),followedby(repeat(fb:en.num,2),fb:en.const)) : 1
      or(repeat(fb:en.const,2),repeat(fb:en.num,2)) : 1
      and(repeat(repeat(fb:en.num,2),1),repeat(followedby(fb:en.num,fb:en.const),2)) : 1
      repeat(and(fb:en.const,fb:en.num),2) : 1
      and(repeat(fb:en.num,1,2),repeat(followedby(fb:en.num,fb:en.const),2)) : 1
      followedby(fb:en.num,and(fb:en.const,fb:en.num)) : 1
      repeat(and(or(1,2),fb:en.const),2) : 1
      and(repeat(fb:en.num,2),repeat(fb:en.const,2)) : 1
      repeat(fb:en.const,2) : 1
      repeat(and(repeat(repeat(fb:en.num,2),1),fb:en.num),2) : 1
      repeat(and(followedby(fb:en.num,fb:en.const),repeat(repeat(fb:en.num,2),1)),2) : 1
      and(repeat(followedby(fb:en.num,fb:en.const),2),fb:en.num) : 1
      followedby(fb:en.num,and(fb:en.const,repeat(fb:en.num,1))) : 1
      and(followedby(repeat(fb:en.num,2),fb:en.const),repeat(fb:en.num,1,2)) : 1
      repeat(followedby(fb:en.num,and(fb:en.const,fb:en.num)),2) : 1
      or(repeat(fb:en.const,2),fb:en.num) : 1
      and(fb:en.num,followedby(repeat(fb:en.num,2),fb:en.const)) : 1
      repeat(or(fb:en.num,repeat(fb:en.num,2)),2) : 1
      followedby(fb:en.num,or(fb:en.const,repeat(fb:en.num,2))) : 1
      repeat(followedby(fb:en.num,and(fb:en.const,repeat(fb:en.num,1))),2) : 1
      followedby(repeat(fb:en.num,2),or(repeat(fb:en.num,2),fb:en.const)) : 1
      and(repeat(fb:en.const,2),repeat(repeat(fb:en.num,2),1)) : 1
      repeat(and(fb:en.num,repeat(fb:en.num,2)),2) : 1
      repeat(and(repeat(repeat(fb:en.num,2),1),followedby(fb:en.num,fb:en.const)),2) : 1
      repeat(and(repeat(fb:en.num,2),fb:en.num),2) : 1
      repeat(followedby(fb:en.num,and(fb:en.const,repeat(repeat(fb:en.num,2),1))),2) : 1
      repeat(or(repeat(fb:en.num,2),fb:en.num),2) : 1
      and(followedby(repeat(fb:en.num,2),fb:en.const),repeat(fb:en.num,2)) : 1
      followedby(repeat(fb:en.num,2),and(repeat(fb:en.num,1),fb:en.const)) : 1
      repeat(followedby(fb:en.num,and(or(1,2),fb:en.const)),2) : 1
      followedby(repeat(fb:en.num,2),repeat(fb:en.num,1)) : 1
      and(or(1,2),repeat(followedby(fb:en.num,fb:en.const),2)) : 1
      and(repeat(fb:en.num,1),repeat(fb:en.const,2)) : 1
      followedby(repeat(fb:en.num,2),repeat(fb:en.num,1,2)) : 1
      repeat(followedby(fb:en.num,or(fb:en.num,fb:en.const)),2) : 1
      repeat(followedby(fb:en.num,and(fb:en.const,or(1,2))),2) : 1
      repeat(and(repeat(repeat(fb:en.num,2),1),fb:en.const),2) : 1
      repeat(followedby(fb:en.const,repeat(fb:en.num,2)),2) : 1
      followedby(repeat(fb:en.num,2),and(or(1,2),fb:en.const)) : 1
      repeat(and(followedby(fb:en.num,fb:en.const),repeat(fb:en.num,2)),2) : 1
      followedby(fb:en.num,fb:en.const) : 1
      and(repeat(followedby(fb:en.num,fb:en.const),2),repeat(repeat(fb:en.num,2),1)) : 1
      repeat(and(repeat(fb:en.num,1,2),fb:en.const),2) : 1
      and(repeat(repeat(fb:en.num,2),1),followedby(repeat(fb:en.num,2),fb:en.const)) : 1
      repeat(or(fb:en.num,fb:en.num),2) : 2
      and(repeat(fb:en.num,2),repeat(repeat(fb:en.num,2),1)) : 1
      and(repeat(fb:en.const,2),repeat(fb:en.num,1,2)) : 1
      followedby(repeat(fb:en.num,2),or(fb:en.num,fb:en.const)) : 1
      and(followedby(repeat(fb:en.num,2),fb:en.const),repeat(fb:en.num,1)) : 1
      repeat(and(fb:en.const,repeat(fb:en.num,1,2)),2) : 1
      repeat(and(followedby(fb:en.num,fb:en.const),or(1,2)),2) : 1
      followedby(repeat(fb:en.num,2),or(fb:en.const,repeat(fb:en.num,2))) : 1
      repeat(followedby(and(fb:en.const,or(1,2)),fb:en.num),2) : 1
      and(repeat(fb:en.num,1,2),repeat(fb:en.const,2)) : 1
      repeat(followedby(fb:en.num,and(repeat(fb:en.num,1,2),fb:en.const)),2) : 1
      followedby(repeat(fb:en.num,2),and(repeat(fb:en.num,2),fb:en.const)) : 1
      or(repeat(fb:en.num,2),repeat(fb:en.const,2)) : 1
      followedby(fb:en.num,and(repeat(fb:en.num,1,2),fb:en.const)) : 1
      repeat(repeat(fb:en.num,2),2) : 1
      and(repeat(fb:en.num,1),repeat(fb:en.num,2)) : 1
      followedby(repeat(fb:en.num,2),and(fb:en.const,or(1,2))) : 1
      and(repeat(repeat(fb:en.num,2),1),followedby(fb:en.num,fb:en.const)) : 1
      and(repeat(fb:en.num,2),repeat(fb:en.num,1,2)) : 1
      repeat(followedby(fb:en.num,repeat(repeat(fb:en.num,2),1)),2) : 1
      and(repeat(followedby(fb:en.num,fb:en.const),2),or(1,2)) : 1
      repeat(or(followedby(fb:en.num,fb:en.const),fb:en.num),2) : 1
      repeat(and(repeat(fb:en.num,1),followedby(fb:en.num,fb:en.const)),2) : 1
      followedby(fb:en.num,and(fb:en.const,repeat(repeat(fb:en.num,2),1))) : 1
      repeat(and(fb:en.const,repeat(fb:en.num,1)),2) : 1
      and(repeat(fb:en.num,1),repeat(followedby(fb:en.num,fb:en.const),2)) : 1
      or(fb:en.num,repeat(fb:en.num,2)) : 1
      followedby(repeat(fb:en.num,2),and(fb:en.const,repeat(fb:en.num,1,2))) : 1
      followedby(repeat(fb:en.num,2),or(fb:en.const,fb:en.num)) : 1
      and(repeat(repeat(fb:en.num,2),1),repeat(fb:en.num,2)) : 1
      repeat(and(fb:en.const,or(1,2)),2) : 1
      and(fb:en.num,repeat(fb:en.num,2)) : 1
      repeat(followedby(fb:en.num,or(1,2)),2) : 1
      repeat(and(repeat(fb:en.num,2),fb:en.const),2) : 1
      followedby(fb:en.num,and(repeat(repeat(fb:en.num,2),1),fb:en.const)) : 1
      and(or(1,2),followedby(fb:en.num,fb:en.const)) : 1
      followedby(repeat(fb:en.num,2),repeat(repeat(fb:en.num,2),1)) : 1
      and(repeat(fb:en.num,1,2),repeat(fb:en.num,2)) : 1
      repeat(and(fb:en.num,or(1,2)),2) : 1
      repeat(followedby(fb:en.num,and(fb:en.const,repeat(fb:en.num,2))),2) : 1
      repeat(followedby(fb:en.const,repeat(fb:en.num,1,2)),2) : 1
      repeat(and(or(1,2),fb:en.num),2) : 1
      or(repeat(followedby(fb:en.num,fb:en.const),2),repeat(fb:en.num,2)) : 1
      or(repeat(followedby(fb:en.num,fb:en.const),2),fb:en.num) : 1
      and(repeat(fb:en.num,2),followedby(repeat(fb:en.num,2),fb:en.const)) : 1
      repeat(or(followedby(fb:en.num,fb:en.const),repeat(fb:en.num,2)),2) : 1
      and(repeat(repeat(fb:en.num,2),1),repeat(fb:en.const,2)) : 1
      repeat(and(followedby(fb:en.num,fb:en.const),repeat(fb:en.num,1)),2) : 1
      and(followedby(repeat(fb:en.num,2),fb:en.const),repeat(repeat(fb:en.num,2),1)) : 1
      and(fb:en.num,repeat(fb:en.const,2)) : 1
      or(fb:en.num,followedby(repeat(fb:en.num,2),fb:en.const)) : 1
      followedby(repeat(fb:en.num,2),repeat(fb:en.num,2)) : 1
      repeat(and(repeat(fb:en.num,1,2),followedby(fb:en.num,fb:en.const)),2) : 1
      followedby(repeat(fb:en.num,2),or(1,2)) : 1
      repeat(and(followedby(fb:en.num,fb:en.const),fb:en.num),2) : 1
      and(repeat(fb:en.num,1),followedby(fb:en.num,fb:en.const)) : 1
      repeat(followedby(fb:en.const,fb:en.num),2) : 1
      repeat(and(repeat(fb:en.num,1),fb:en.num),2) : 1
      or(repeat(fb:en.num,2),followedby(repeat(fb:en.num,2),fb:en.const)) : 1
      and(repeat(fb:en.num,2),repeat(fb:en.num,2)) : 2
      and(repeat(fb:en.num,2),fb:en.num) : 1
      repeat(fb:en.num,2) : 2
      or(repeat(fb:en.num,2),repeat(followedby(fb:en.num,fb:en.const),2)) : 1
      followedby(fb:en.num,or(fb:en.num,fb:en.const)) : 1
      or(repeat(fb:en.num,2),fb:en.num) : 1
      and(repeat(fb:en.num,2),repeat(followedby(fb:en.num,fb:en.const),2)) : 1
      repeat(or(1,2),2) : 1
      and(repeat(fb:en.num,1),followedby(repeat(fb:en.num,2),fb:en.const)) : 1
      repeat(followedby(fb:en.num,or(fb:en.const,fb:en.num)),2) : 1
      repeat(or(fb:en.const,repeat(fb:en.num,2)),2) : 1
=======================================================
Test on utterance 41:
  Line 0: regular expression which validates only number and min length should be 11 and maximum 16
    Top prediction: repeat(repeat(fb:en.num,11),1,)
    All 11 derivations and their counts: 
      repeat(repeat(fb:en.num,1,),11) : 1
      fb:en.num : 1
      repeat(fb:en.num,1,) : 1
      repeat(repeat(fb:en.num,16),1,) : 1
      repeat(repeat(fb:en.num,1,),16) : 1
      repeat(repeat(fb:en.num,11),1,) : 1
      repeat(repeat(fb:en.num,1,),11,16) : 1
      repeat(fb:en.num,11,16) : 1
      repeat(fb:en.num,16) : 1
      repeat(repeat(fb:en.num,11,16),1,) : 1
      repeat(fb:en.num,11) : 1
=======================================================
Test on utterance 42:
  Line 0: I need to validate the next pattern: 
    Top prediction: 
  Line 1: starts with <M0> and finish with 4 digits exactly
    Top prediction: contain(and(endwith(contain(repeat(fb:en.num,4))),fb:en.const))
    All 168 derivations and their counts: 
      startwith(fb:en.const) : 1
      contain(and(endwith(contain(repeat(fb:en.num,4))),fb:en.const)) : 1
      and(startwith(contain(fb:en.const)),endwith(fb:en.num)) : 1
      and(endwith(contain(repeat(fb:en.num,4))),contain(fb:en.const)) : 1
      and(startwith(fb:en.const),contain(fb:en.num)) : 1
      startwith(and(fb:en.const,fb:en.num)) : 1
      startwith(contain(and(endwith(fb:en.num),fb:en.const))) : 1
      endwith(contain(fb:en.const)) : 1
      and(contain(fb:en.const),contain(fb:en.num)) : 1
      startwith(and(contain(repeat(fb:en.num,4)),fb:en.const)) : 1
      startwith(contain(and(endwith(contain(fb:en.num)),fb:en.const))) : 1
      and(endwith(contain(fb:en.num)),startwith(fb:en.const)) : 1
      contain(and(fb:en.const,endwith(contain(repeat(fb:en.num,4))))) : 1
      startwith(and(endwith(fb:en.num),fb:en.const)) : 1
      contain(and(fb:en.const,endwith(fb:en.num))) : 1
      and(contain(fb:en.const),repeat(fb:en.num,4)) : 1
      startwith(contain(and(repeat(fb:en.num,4),fb:en.const))) : 1
      startwith(and(contain(fb:en.num),contain(fb:en.const))) : 1
      fb:en.num : 1
      and(fb:en.const,contain(repeat(fb:en.num,4))) : 1
      startwith(and(endwith(contain(fb:en.num)),fb:en.const)) : 1
      contain(and(repeat(fb:en.num,4),fb:en.const)) : 1
      and(endwith(fb:en.num),startwith(fb:en.const)) : 1
      and(startwith(fb:en.const),fb:en.num) : 1
      startwith(endwith(contain(fb:en.num))) : 1
      startwith(contain(endwith(contain(fb:en.num)))) : 1
      startwith(fb:en.num) : 1
      and(fb:en.num,fb:en.const) : 1
      and(startwith(fb:en.const),repeat(fb:en.num,4)) : 1
      startwith(and(fb:en.const,contain(fb:en.num))) : 1
      and(startwith(fb:en.const),endwith(contain(fb:en.num))) : 1
      startwith(contain(and(endwith(contain(repeat(fb:en.num,4))),fb:en.const))) : 1
      startwith(endwith(repeat(fb:en.num,4))) : 1
      and(startwith(contain(fb:en.const)),fb:en.num) : 1
      startwith(and(contain(fb:en.const),repeat(fb:en.num,4))) : 1
      endwith(contain(fb:en.num)) : 1
      startwith(contain(and(contain(fb:en.num),fb:en.const))) : 1
      and(fb:en.const,contain(fb:en.num)) : 1
      startwith(and(contain(fb:en.const),endwith(fb:en.num))) : 1
      startwith(and(fb:en.num,contain(fb:en.const))) : 1
      startwith(and(contain(fb:en.const),endwith(contain(fb:en.num)))) : 1
      and(startwith(fb:en.const),contain(repeat(fb:en.num,4))) : 1
      contain(endwith(fb:en.num)) : 1
      endwith(startwith(contain(fb:en.const))) : 1
      and(repeat(fb:en.num,4),fb:en.const) : 1
      startwith(contain(contain(fb:en.num))) : 1
      startwith(and(endwith(repeat(fb:en.num,4)),fb:en.const)) : 1
      startwith(and(fb:en.const,endwith(repeat(fb:en.num,4)))) : 1
      startwith(contain(and(fb:en.const,endwith(contain(repeat(fb:en.num,4)))))) : 1
      and(contain(fb:en.const),endwith(contain(fb:en.num))) : 1
      and(startwith(fb:en.const),endwith(fb:en.num)) : 1
      and(startwith(contain(fb:en.const)),contain(fb:en.num)) : 1
      endwith(fb:en.const) : 1
      startwith(and(endwith(fb:en.num),contain(fb:en.const))) : 1
      contain(endwith(contain(repeat(fb:en.num,4)))) : 1
      and(fb:en.const,endwith(contain(repeat(fb:en.num,4)))) : 1
      startwith(and(fb:en.const,repeat(fb:en.num,4))) : 1
      contain(fb:en.num) : 2
      contain(and(fb:en.const,contain(fb:en.num))) : 1
      contain(endwith(contain(fb:en.num))) : 1
      contain(and(fb:en.const,fb:en.num)) : 1
      and(fb:en.const,endwith(fb:en.num)) : 1
      contain(and(fb:en.const,contain(repeat(fb:en.num,4)))) : 1
      and(fb:en.num,contain(fb:en.const)) : 1
      startwith(contain(endwith(contain(repeat(fb:en.num,4))))) : 1
      and(fb:en.const,endwith(repeat(fb:en.num,4))) : 1
      endwith(contain(repeat(fb:en.num,4))) : 1
      startwith(contain(and(fb:en.const,contain(repeat(fb:en.num,4))))) : 1
      and(endwith(contain(repeat(fb:en.num,4))),fb:en.const) : 1
      and(contain(fb:en.const),endwith(contain(repeat(fb:en.num,4)))) : 1
      and(startwith(fb:en.const),endwith(repeat(fb:en.num,4))) : 1
      startwith(endwith(contain(repeat(fb:en.num,4)))) : 1
      fb:en.const : 1
      startwith(contain(fb:en.const)) : 1
      and(contain(fb:en.num),fb:en.const) : 1
      startwith(and(contain(fb:en.const),contain(repeat(fb:en.num,4)))) : 1
      contain(endwith(fb:en.const)) : 1
      and(contain(fb:en.const),contain(repeat(fb:en.num,4))) : 1
      and(contain(fb:en.num),startwith(contain(fb:en.const))) : 1
      startwith(contain(and(fb:en.const,repeat(fb:en.num,4)))) : 1
      and(contain(fb:en.num),contain(fb:en.const)) : 1
      startwith(contain(endwith(fb:en.const))) : 1
      startwith(contain(and(fb:en.const,endwith(contain(fb:en.num))))) : 1
      and(repeat(fb:en.num,4),startwith(contain(fb:en.const))) : 1
      startwith(and(endwith(contain(repeat(fb:en.num,4))),fb:en.const)) : 1
      startwith(endwith(contain(fb:en.const))) : 1
      and(contain(fb:en.const),endwith(repeat(fb:en.num,4))) : 1
      and(contain(repeat(fb:en.num,4)),startwith(fb:en.const)) : 1
      startwith(and(endwith(contain(fb:en.num)),contain(fb:en.const))) : 1
      and(contain(fb:en.const),fb:en.num) : 1
      startwith(contain(and(contain(repeat(fb:en.num,4)),fb:en.const))) : 1
      and(startwith(fb:en.const),endwith(contain(repeat(fb:en.num,4)))) : 1
      contain(and(fb:en.num,fb:en.const)) : 1
      contain(contain(repeat(fb:en.num,4))) : 1
      and(fb:en.const,endwith(contain(fb:en.num))) : 1
      startwith(contain(and(endwith(repeat(fb:en.num,4)),fb:en.const))) : 1
      and(startwith(contain(fb:en.const)),repeat(fb:en.num,4)) : 1
      and(endwith(repeat(fb:en.num,4)),startwith(fb:en.const)) : 1
      and(startwith(contain(fb:en.const)),endwith(contain(fb:en.num))) : 1
      and(startwith(contain(fb:en.const)),contain(repeat(fb:en.num,4))) : 1
      startwith(and(contain(repeat(fb:en.num,4)),contain(fb:en.const))) : 1
      and(startwith(contain(fb:en.const)),endwith(repeat(fb:en.num,4))) : 1
      contain(endwith(repeat(fb:en.num,4))) : 1
      contain(contain(fb:en.num)) : 1
      and(fb:en.const,fb:en.num) : 1
      startwith(and(fb:en.const,endwith(fb:en.num))) : 1
      contain(and(fb:en.const,repeat(fb:en.num,4))) : 1
      endwith(fb:en.num) : 1
      contain(and(fb:en.const,endwith(contain(fb:en.num)))) : 1
      and(endwith(contain(repeat(fb:en.num,4))),startwith(contain(fb:en.const))) : 1
      and(contain(fb:en.const),endwith(fb:en.num)) : 1
      repeat(fb:en.num,4) : 1
      startwith(contain(contain(repeat(fb:en.num,4)))) : 1
      and(endwith(contain(fb:en.num)),contain(fb:en.const)) : 1
      endwith(repeat(fb:en.num,4)) : 1
      startwith(and(fb:en.const,endwith(contain(repeat(fb:en.num,4))))) : 1
      startwith(contain(and(fb:en.const,contain(fb:en.num)))) : 1
      and(endwith(contain(repeat(fb:en.num,4))),startwith(fb:en.const)) : 1
      startwith(contain(and(fb:en.const,fb:en.num))) : 1
      startwith(and(contain(fb:en.const),endwith(repeat(fb:en.num,4)))) : 1
      startwith(and(fb:en.const,contain(repeat(fb:en.num,4)))) : 1
      startwith(and(contain(fb:en.num),fb:en.const)) : 1
      startwith(and(contain(fb:en.const),endwith(contain(repeat(fb:en.num,4))))) : 1
      and(endwith(repeat(fb:en.num,4)),contain(fb:en.const)) : 1
      startwith(and(fb:en.num,fb:en.const)) : 1
      startwith(repeat(fb:en.num,4)) : 1
      and(endwith(contain(fb:en.num)),startwith(contain(fb:en.const))) : 1
      and(endwith(repeat(fb:en.num,4)),startwith(contain(fb:en.const))) : 1
      and(repeat(fb:en.num,4),startwith(fb:en.const)) : 1
      startwith(and(endwith(contain(repeat(fb:en.num,4))),contain(fb:en.const))) : 1
      startwith(and(repeat(fb:en.num,4),fb:en.const)) : 1
      startwith(endwith(fb:en.const)) : 1
      startwith(contain(and(fb:en.const,endwith(fb:en.num)))) : 1
      and(contain(fb:en.num),startwith(fb:en.const)) : 1
      and(endwith(fb:en.num),contain(fb:en.const)) : 1
      and(endwith(contain(fb:en.num)),fb:en.const) : 1
      startwith(and(endwith(repeat(fb:en.num,4)),contain(fb:en.const))) : 1
      startwith(contain(repeat(fb:en.num,4))) : 2
      and(fb:en.num,startwith(contain(fb:en.const))) : 1
      contain(and(endwith(repeat(fb:en.num,4)),fb:en.const)) : 1
      contain(and(fb:en.const,endwith(repeat(fb:en.num,4)))) : 1
      startwith(contain(and(fb:en.num,fb:en.const))) : 1
      and(endwith(fb:en.num),startwith(contain(fb:en.const))) : 1
      contain(fb:en.const) : 1
      contain(and(endwith(fb:en.num),fb:en.const)) : 1
      and(contain(repeat(fb:en.num,4)),contain(fb:en.const)) : 1
      and(repeat(fb:en.num,4),contain(fb:en.const)) : 1
      contain(and(contain(fb:en.num),fb:en.const)) : 1
      contain(repeat(fb:en.num,4)) : 2
      startwith(contain(endwith(fb:en.num))) : 1
      and(fb:en.num,startwith(fb:en.const)) : 1
      startwith(and(contain(fb:en.const),contain(fb:en.num))) : 1
      startwith(and(contain(fb:en.const),fb:en.num)) : 1
      startwith(and(fb:en.const,endwith(contain(fb:en.num)))) : 1
      startwith(and(repeat(fb:en.num,4),contain(fb:en.const))) : 1
      contain(and(endwith(contain(fb:en.num)),fb:en.const)) : 1
      startwith(contain(fb:en.num)) : 2
      and(contain(repeat(fb:en.num,4)),fb:en.const) : 1
      startwith(contain(endwith(repeat(fb:en.num,4)))) : 1
      and(contain(repeat(fb:en.num,4)),startwith(contain(fb:en.const))) : 1
      and(endwith(repeat(fb:en.num,4)),fb:en.const) : 1
      and(endwith(fb:en.num),fb:en.const) : 1
      contain(and(contain(repeat(fb:en.num,4)),fb:en.const)) : 1
      and(startwith(contain(fb:en.const)),endwith(contain(repeat(fb:en.num,4)))) : 1
      startwith(endwith(fb:en.num)) : 1
      endwith(startwith(fb:en.const)) : 1
      startwith(contain(and(fb:en.const,endwith(repeat(fb:en.num,4))))) : 1
      and(fb:en.const,repeat(fb:en.num,4)) : 1
=======================================================
Test on utterance 43:
  Line 0: I am trying to validate dollar amount
    Top prediction: 
  Line 1: anything greater than equal to 0.1.
    Top prediction: 
=======================================================
Test on utterance 44:
  Line 0: I need a regular expression that satisfy these rules:
    Top prediction: 
  Line 1: The maximum number of decimal point is 3 but a number with no decimal point (e.g 12) should be accepted too
    Top prediction: repeat(fb:en.num,1,3)
    All 9 derivations and their counts: 
      fb:en.num : 2
      contain(fb:en.dp) : 1
      repeat(fb:en.dp,1,3) : 1
      fb:en.dp : 2
      repeat(fb:en.num,3) : 1
      repeat(fb:en.num,1,3) : 1
      repeat(contain(fb:en.dp),3) : 1
      repeat(fb:en.dp,3) : 1
      repeat(contain(fb:en.dp),1,3) : 1
  Line 2: the value must be at least 0
    Top prediction: 
  Line 3: the value must be less or equal to 99999999999.999
    Top prediction: 
  Line 4: the radix point is DOT (e.g 2.5, not 2,5)
    Top prediction: 
=======================================================
Test on utterance 45:
  Line 0: I need a regular expression that only validates UK mobile numbers. 
    Top prediction: repeat(fb:en.num,1,)
    All 2 derivations and their counts: 
      fb:en.num : 1
      repeat(fb:en.num,1,) : 1
  Line 1: A UK mobile number can be between 10 - 14 digits and either starts with 07, 
    Top prediction: fb:en.num
    All 5 derivations and their counts: 
      fb:en.num : 2
      repeat(repeat(fb:en.num,14),10) : 1
      repeat(fb:en.num,10) : 1
      repeat(fb:en.num,10,14) : 1
      repeat(fb:en.num,14) : 1
  Line 2: or omits the 0 and starts with 447. 
    Top prediction: 
  Line 3: Importantly, if the user adds +44 it should be rejected.
    Top prediction: 
=======================================================
Test on utterance 46:
  Line 0: I want a regular expression for decimal input, 
    Top prediction: fb:en.dp
    All 1 derivations and their counts: 
      fb:en.dp : 1
  Line 1: which can take 4 digits before decimal or <M0> and 2 digits after decimal / <M1>. 
    Top prediction: repeat(followedby(fb:en.num,or(and(repeat(followedby(fb:en.dp,fb:en.num),2),fb:en.const),fb:en.dp)),4)
derivSize == beamSize
    All 196 derivations and their counts: 
      repeat(followedby(fb:en.num,or(fb:en.dp,and(repeat(followedby(fb:en.const,fb:en.num),2),fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,followedby(fb:en.const,fb:en.num))),4) : 1
      repeat(followedby(fb:en.num,or(followedby(fb:en.dp,and(repeat(fb:en.num,2),fb:en.const)),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(repeat(followedby(fb:en.const,fb:en.num),2),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(repeat(fb:en.dp,2),fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,and(followedby(fb:en.const,repeat(fb:en.num,2)),or(fb:en.dp,fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(fb:en.const,followedby(fb:en.const,fb:en.num)))),4) : 1
      repeat(followedby(fb:en.num,or(and(repeat(fb:en.const,2),fb:en.const),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.dp,fb:en.const),fb:en.num)),4) : 1
      repeat(followedby(fb:en.num,and(fb:en.dp,followedby(fb:en.const,fb:en.num))),4) : 1
      repeat(followedby(fb:en.num,and(fb:en.dp,repeat(followedby(fb:en.const,fb:en.dp),2))),4) : 1
      repeat(followedby(fb:en.num,and(repeat(followedby(fb:en.const,fb:en.num),2),or(fb:en.dp,fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,followedby(fb:en.const,and(fb:en.const,repeat(fb:en.num,2))))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,repeat(followedby(fb:en.const,fb:en.num),2))),4) : 1
      repeat(followedby(fb:en.num,and(followedby(fb:en.const,fb:en.dp),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(and(repeat(followedby(fb:en.dp,fb:en.num),2),fb:en.const),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.dp,fb:en.const),followedby(fb:en.dp,fb:en.num))),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.dp,fb:en.const),repeat(fb:en.const,2))),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.dp,fb:en.const),followedby(fb:en.dp,repeat(fb:en.num,2)))),4) : 1
      repeat(followedby(fb:en.num,or(followedby(fb:en.const,fb:en.num),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(followedby(fb:en.dp,repeat(fb:en.num,2)),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(followedby(fb:en.dp,and(fb:en.const,repeat(fb:en.num,2))),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(followedby(fb:en.const,repeat(fb:en.num,2)),or(fb:en.const,fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(followedby(fb:en.dp,repeat(fb:en.num,2)),fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,and(fb:en.dp,or(fb:en.dp,fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(repeat(fb:en.const,2),fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,repeat(followedby(fb:en.dp,fb:en.num),2))),4) : 1
      repeat(followedby(fb:en.num,and(repeat(fb:en.num,2),or(fb:en.const,fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,fb:en.num)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(fb:en.num,fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,or(repeat(fb:en.const,2),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(fb:en.const,fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(fb:en.const,repeat(fb:en.dp,2)))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,followedby(fb:en.const,fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(fb:en.dp,fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.const,fb:en.dp),followedby(fb:en.dp,repeat(fb:en.num,2)))),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.const,fb:en.dp),repeat(fb:en.dp,2))),4) : 1
      repeat(followedby(fb:en.num,and(fb:en.dp,fb:en.num)),4) : 1
      repeat(followedby(fb:en.num,or(followedby(fb:en.const,fb:en.const),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,followedby(repeat(fb:en.num,2),fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,or(followedby(repeat(fb:en.num,2),fb:en.const),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.dp,fb:en.const),repeat(followedby(fb:en.dp,fb:en.num),2))),4) : 1
      repeat(followedby(fb:en.num,followedby(repeat(fb:en.num,2),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.num,fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(fb:en.const,repeat(fb:en.num,2)))),4) : 1
      repeat(followedby(fb:en.num,and(fb:en.dp,repeat(fb:en.const,2))),4) : 1
      repeat(followedby(fb:en.num,or(and(repeat(followedby(fb:en.const,fb:en.dp),2),fb:en.const),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,followedby(fb:en.num,fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(and(followedby(fb:en.dp,repeat(fb:en.num,2)),fb:en.const),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.const,fb:en.dp),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,followedby(repeat(fb:en.num,2),or(fb:en.const,fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,or(and(fb:en.const,followedby(fb:en.dp,repeat(fb:en.num,2))),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(repeat(followedby(fb:en.const,fb:en.dp),2),or(fb:en.dp,fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,or(followedby(fb:en.const,and(fb:en.const,fb:en.num)),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(fb:en.const,repeat(followedby(fb:en.const,fb:en.dp),2)))),4) : 1
      repeat(followedby(fb:en.num,and(fb:en.num,or(fb:en.dp,fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,or(followedby(fb:en.num,fb:en.const),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,followedby(and(fb:en.const,repeat(fb:en.num,2)),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(fb:en.dp,or(fb:en.const,fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.const,fb:en.dp),repeat(followedby(fb:en.const,fb:en.dp),2))),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.const,fb:en.dp),followedby(fb:en.dp,fb:en.num))),4) : 1
      repeat(followedby(fb:en.num,and(repeat(followedby(fb:en.const,fb:en.num),2),or(fb:en.const,fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,or(followedby(fb:en.dp,and(fb:en.num,fb:en.const)),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(followedby(fb:en.dp,fb:en.num),or(fb:en.dp,fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,and(repeat(followedby(fb:en.dp,fb:en.num),2),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.const,fb:en.dp),followedby(fb:en.const,repeat(fb:en.num,2)))),4) : 1
      repeat(followedby(fb:en.num,and(repeat(fb:en.const,2),or(fb:en.dp,fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,or(and(repeat(fb:en.num,2),fb:en.const),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(and(followedby(fb:en.const,fb:en.num),fb:en.const),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(followedby(fb:en.const,fb:en.num),or(fb:en.dp,fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,followedby(fb:en.const,and(fb:en.const,fb:en.num)))),4) : 1
      repeat(followedby(fb:en.num,and(fb:en.dp,fb:en.dp)),4) : 2
      repeat(followedby(fb:en.num,or(followedby(fb:en.const,and(repeat(fb:en.num,2),fb:en.const)),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(followedby(fb:en.const,fb:en.dp),fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,and(repeat(followedby(fb:en.const,fb:en.dp),2),or(fb:en.const,fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.dp,fb:en.const),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(fb:en.const,followedby(fb:en.const,repeat(fb:en.num,2))))),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.const,fb:en.dp),fb:en.num)),4) : 1
      repeat(followedby(fb:en.num,followedby(repeat(fb:en.num,2),or(fb:en.dp,fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,or(followedby(fb:en.const,and(fb:en.num,fb:en.const)),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,followedby(fb:en.dp,and(fb:en.num,fb:en.const)))),4) : 1
      repeat(followedby(fb:en.num,and(repeat(followedby(fb:en.const,fb:en.dp),2),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,repeat(fb:en.const,2))),4) : 1
      repeat(followedby(fb:en.num,and(fb:en.dp,repeat(followedby(fb:en.dp,fb:en.num),2))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,followedby(fb:en.dp,fb:en.num))),4) : 1
      repeat(followedby(fb:en.num,or(followedby(fb:en.dp,and(fb:en.const,fb:en.num)),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(and(followedby(fb:en.const,repeat(fb:en.num,2)),fb:en.const),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.dp,fb:en.const),repeat(followedby(fb:en.const,fb:en.num),2))),4) : 1
      repeat(followedby(fb:en.num,and(repeat(followedby(fb:en.dp,fb:en.num),2),or(fb:en.dp,fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,followedby(fb:en.num,or(fb:en.const,fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,or(followedby(fb:en.dp,repeat(fb:en.num,2)),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,followedby(fb:en.num,or(fb:en.dp,fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,and(fb:en.num,fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(repeat(followedby(fb:en.dp,fb:en.num),2),or(fb:en.const,fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,or(followedby(fb:en.const,repeat(fb:en.num,2)),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(fb:en.const,followedby(fb:en.dp,fb:en.num)))),4) : 1
      repeat(followedby(fb:en.num,and(fb:en.dp,repeat(fb:en.num,2))),4) : 1
      repeat(followedby(fb:en.num,or(and(fb:en.const,followedby(fb:en.const,fb:en.num)),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(and(repeat(followedby(fb:en.const,fb:en.num),2),fb:en.const),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(repeat(fb:en.const,2),or(fb:en.const,fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.dp,fb:en.const),repeat(followedby(fb:en.const,fb:en.dp),2))),4) : 1
      repeat(followedby(fb:en.num,or(and(followedby(fb:en.dp,fb:en.num),fb:en.const),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(followedby(fb:en.const,fb:en.dp),or(fb:en.dp,fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,followedby(fb:en.dp,or(and(fb:en.num,fb:en.const),fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,or(repeat(followedby(fb:en.const,fb:en.dp),2),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(repeat(fb:en.dp,2),or(fb:en.const,fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,and(fb:en.dp,followedby(fb:en.const,repeat(fb:en.num,2)))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(followedby(fb:en.dp,fb:en.num),fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,followedby(fb:en.dp,or(and(fb:en.const,repeat(fb:en.num,2)),fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,followedby(fb:en.num,fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,followedby(and(repeat(fb:en.num,2),fb:en.const),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,followedby(fb:en.dp,and(fb:en.const,fb:en.num)))),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.const,fb:en.dp),followedby(fb:en.const,fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,and(fb:en.dp,followedby(fb:en.dp,repeat(fb:en.num,2)))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(followedby(fb:en.const,fb:en.num),fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,repeat(fb:en.num,2))),4) : 1
      repeat(followedby(fb:en.num,or(repeat(fb:en.num,2),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,repeat(followedby(fb:en.const,fb:en.dp),2))),4) : 1
      repeat(followedby(fb:en.num,or(repeat(fb:en.dp,2),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.const,fb:en.dp),repeat(followedby(fb:en.dp,fb:en.num),2))),4) : 1
      repeat(followedby(fb:en.num,or(and(fb:en.const,repeat(followedby(fb:en.dp,fb:en.num),2)),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(followedby(fb:en.const,fb:en.num),or(fb:en.const,fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,or(and(fb:en.const,repeat(fb:en.num,2)),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(and(fb:en.const,fb:en.const),fb:en.dp)),4) : 2
      repeat(followedby(fb:en.num,followedby(and(fb:en.const,fb:en.num),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,followedby(fb:en.const,and(repeat(fb:en.num,2),fb:en.const)))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,fb:en.dp)),4) : 2
      repeat(followedby(fb:en.num,and(or(fb:en.dp,fb:en.const),followedby(fb:en.const,repeat(fb:en.num,2)))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(fb:en.const,fb:en.const))),4) : 2
      repeat(followedby(fb:en.num,and(followedby(fb:en.dp,fb:en.num),or(fb:en.const,fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,and(fb:en.num,or(fb:en.const,fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,or(and(followedby(fb:en.const,fb:en.dp),fb:en.const),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(followedby(fb:en.const,fb:en.dp),or(fb:en.const,fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(fb:en.const,followedby(fb:en.dp,repeat(fb:en.num,2))))),4) : 1
      repeat(followedby(fb:en.num,and(repeat(fb:en.dp,2),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(and(fb:en.const,fb:en.num),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,repeat(fb:en.dp,2))),4) : 1
      repeat(followedby(fb:en.num,and(followedby(fb:en.dp,fb:en.num),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(fb:en.dp,followedby(fb:en.dp,fb:en.num))),4) : 1
      repeat(followedby(fb:en.num,and(repeat(fb:en.num,2),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(and(fb:en.const,repeat(fb:en.const,2)),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(fb:en.dp,repeat(followedby(fb:en.const,fb:en.num),2))),4) : 1
      repeat(followedby(fb:en.num,and(fb:en.dp,repeat(fb:en.dp,2))),4) : 1
      repeat(followedby(fb:en.num,and(repeat(fb:en.num,2),or(fb:en.dp,fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,followedby(fb:en.dp,fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.const,fb:en.dp),followedby(fb:en.const,fb:en.num))),4) : 1
      repeat(followedby(fb:en.num,or(and(fb:en.const,followedby(fb:en.dp,fb:en.num)),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(fb:en.const,repeat(fb:en.const,2)))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,followedby(fb:en.const,and(fb:en.num,fb:en.const)))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(fb:en.const,fb:en.num))),4) : 1
      repeat(followedby(fb:en.num,or(followedby(fb:en.const,and(fb:en.const,repeat(fb:en.num,2))),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.dp,fb:en.const),repeat(fb:en.dp,2))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,followedby(fb:en.dp,repeat(fb:en.num,2)))),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.const,fb:en.dp),repeat(fb:en.num,2))),4) : 1
      repeat(followedby(fb:en.num,or(and(fb:en.const,followedby(fb:en.const,fb:en.dp)),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(repeat(fb:en.num,2),fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,followedby(fb:en.dp,and(repeat(fb:en.num,2),fb:en.const)))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(followedby(fb:en.const,repeat(fb:en.num,2)),fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,and(repeat(fb:en.dp,2),or(fb:en.dp,fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,followedby(fb:en.dp,or(and(repeat(fb:en.num,2),fb:en.const),fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.const,fb:en.dp),repeat(fb:en.const,2))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.const,fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,followedby(fb:en.const,fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,followedby(fb:en.const,repeat(fb:en.num,2)))),4) : 1
      repeat(followedby(fb:en.num,and(fb:en.dp,followedby(fb:en.const,fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,or(and(repeat(fb:en.dp,2),fb:en.const),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(repeat(fb:en.const,2),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,followedby(fb:en.const,fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,followedby(fb:en.dp,and(fb:en.const,repeat(fb:en.num,2))))),4) : 1
      repeat(followedby(fb:en.num,or(repeat(followedby(fb:en.dp,fb:en.num),2),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.dp,fb:en.const),followedby(fb:en.const,fb:en.num))),4) : 1
      repeat(followedby(fb:en.num,and(followedby(fb:en.const,repeat(fb:en.num,2)),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(and(fb:en.const,repeat(followedby(fb:en.const,fb:en.num),2)),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(repeat(followedby(fb:en.const,fb:en.num),2),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(and(fb:en.dp,fb:en.const),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(fb:en.const,repeat(followedby(fb:en.const,fb:en.num),2)))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(fb:en.const,followedby(fb:en.const,fb:en.dp)))),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.const,fb:en.dp),repeat(followedby(fb:en.const,fb:en.num),2))),4) : 1
      repeat(followedby(fb:en.num,and(followedby(fb:en.const,fb:en.num),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(followedby(fb:en.const,fb:en.dp),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.dp,fb:en.const),followedby(fb:en.const,fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,or(and(fb:en.const,followedby(fb:en.const,repeat(fb:en.num,2))),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(fb:en.const,repeat(followedby(fb:en.dp,fb:en.num),2)))),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,fb:en.const)),4) : 1
      repeat(followedby(fb:en.num,or(followedby(fb:en.dp,fb:en.num),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(and(fb:en.const,fb:en.dp),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(repeat(followedby(fb:en.const,fb:en.dp),2),fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,or(and(fb:en.const,repeat(followedby(fb:en.const,fb:en.dp),2)),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(fb:en.dp,and(repeat(followedby(fb:en.dp,fb:en.num),2),fb:en.const))),4) : 1
      repeat(followedby(fb:en.num,or(and(fb:en.const,repeat(fb:en.dp,2)),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(followedby(fb:en.dp,repeat(fb:en.num,2)),or(fb:en.const,fb:en.dp))),4) : 1
      repeat(followedby(fb:en.num,and(or(fb:en.dp,fb:en.const),repeat(fb:en.num,2))),4) : 1
      repeat(followedby(fb:en.num,or(followedby(fb:en.dp,fb:en.const),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,or(and(fb:en.num,fb:en.const),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,followedby(and(fb:en.num,fb:en.const),fb:en.dp)),4) : 1
      repeat(followedby(fb:en.num,and(followedby(fb:en.dp,repeat(fb:en.num,2)),or(fb:en.dp,fb:en.const))),4) : 1
  Line 2: 5 digit number without decimal is invalid.
    Top prediction: not(fb:en.num)
    All 9 derivations and their counts: 
      fb:en.num : 2
      repeat(not(fb:en.num),5) : 2
      fb:en.dp : 1
      not(fb:en.num) : 2
      repeat(fb:en.num,5) : 2
      repeat(not(fb:en.dp),5) : 1
      repeat(fb:en.dp,5) : 1
      not(fb:en.dp) : 1
      not(repeat(fb:en.num,5)) : 2
=======================================================
Test on utterance 47:
  Line 0: I need a regular expression that validates a decimal number which includes <M0> , <M1> sign as well.
    Top prediction: fb:en.dp
    All 4 derivations and their counts: 
      fb:en.num : 1
      fb:en.dp : 1
      fb:en.const : 2
      contain(fb:en.const) : 2
=======================================================
Test on utterance 48:
  Line 0: I need to validate a string that contains underscore ( <M0> ) in between the numbers. 
    Top prediction: fb:en.any
    All 5 derivations and their counts: 
      fb:en.num : 1
      fb:en.any : 1
      fb:en.const : 1
      contain(fb:en.num) : 1
      contain(fb:en.const) : 1
  Line 1: <M1> character is an optional. 
    Top prediction: optional(fb:en.let)
    All 4 derivations and their counts: 
      optional(fb:en.any) : 1
      fb:en.let : 1
      fb:en.any : 1
      optional(fb:en.let) : 1
  Line 2: Only condition is, it should be between the numbers.
    Top prediction: fb:en.num
    All 2 derivations and their counts: 
      fb:en.num : 1
      repeat(fb:en.num,1,) : 1
=======================================================
Test on utterance 49:
  Line 0: I need some help in finding how to write a validation expression to validate a string representing addition of digits.
    Top prediction: fb:en.any
    All 2 derivations and their counts: 
      fb:en.num : 1
      fb:en.any : 1
=======================================================
Test on utterance 50:
  Line 0: Requirement is that total number of <M0> with the string can only be one.
    Top prediction: fb:en.num
    All 4 derivations and their counts: 
      fb:en.num : 1
      contain(fb:en.any) : 1
      fb:en.const : 1
      fb:en.any : 1
=======================================================
Test on utterance 51:
  Line 0: I need to match only strings that include one character / between numbers or integer numbers.
    Top prediction: repeat(or(fb:en.num,fb:en.any),1,)
    All 136 derivations and their counts: 
      repeat(contain(or(fb:en.let,fb:en.num)),1,) : 1
      repeat(or(repeat(fb:en.num,1),fb:en.num),1,) : 1
      or(fb:en.num,repeat(contain(repeat(fb:en.any,1)),1,)) : 1
      contain(repeat(fb:en.any,1)) : 1
      repeat(contain(repeat(fb:en.let,1)),1,) : 1
      repeat(or(repeat(fb:en.let,1),fb:en.num),1,) : 1
      or(fb:en.num,repeat(contain(fb:en.any),1,)) : 1
      contain(repeat(or(fb:en.any,fb:en.num),1)) : 1
      repeat(or(fb:en.num,contain(fb:en.let)),1,) : 1
      repeat(or(fb:en.num,fb:en.any),1) : 2
      or(contain(repeat(fb:en.num,1)),fb:en.num) : 1
      or(fb:en.num,contain(repeat(fb:en.num,1))) : 1
      or(fb:en.num,repeat(repeat(fb:en.num,1),1,)) : 1
      repeat(or(fb:en.let,fb:en.num),1,) : 1
      repeat(contain(or(fb:en.num,repeat(fb:en.num,1))),1,) : 1
      contain(or(fb:en.any,fb:en.num)) : 1
      repeat(or(fb:en.let,fb:en.num),1) : 2
      repeat(or(contain(repeat(fb:en.let,1)),fb:en.num),1,) : 1
      contain(repeat(or(fb:en.num,fb:en.num),1)) : 2
      repeat(contain(or(repeat(fb:en.any,1),fb:en.num)),1,) : 1
      repeat(fb:en.any,1,) : 2
      repeat(or(fb:en.any,fb:en.num),1) : 2
      fb:en.num : 2
      repeat(or(fb:en.num,contain(repeat(fb:en.any,1))),1,) : 1
      or(repeat(fb:en.num,1,),fb:en.num) : 1
      or(fb:en.num,repeat(fb:en.any,1)) : 2
      repeat(contain(or(repeat(fb:en.num,1),fb:en.num)),1,) : 1
      repeat(contain(repeat(or(fb:en.let,fb:en.num),1)),1,) : 1
      or(repeat(contain(fb:en.let),1,),fb:en.num) : 1
      contain(or(fb:en.num,fb:en.any)) : 1
      repeat(or(fb:en.num,contain(fb:en.num)),1,) : 1
      repeat(or(repeat(fb:en.any,1),fb:en.num),1,) : 1
      or(fb:en.num,repeat(contain(repeat(fb:en.num,1)),1,)) : 1
      or(repeat(contain(repeat(fb:en.any,1)),1,),fb:en.num) : 1
      repeat(contain(repeat(fb:en.num,1)),1,) : 2
      repeat(repeat(or(fb:en.any,fb:en.num),1),1,) : 1
      or(fb:en.num,fb:en.let) : 1
      repeat(or(fb:en.num,repeat(fb:en.any,1)),1,) : 1
      contain(or(fb:en.num,fb:en.let)) : 1
      contain(or(repeat(fb:en.let,1),fb:en.num)) : 1
      repeat(repeat(fb:en.let,1),1,) : 1
      or(fb:en.num,repeat(repeat(fb:en.let,1),1,)) : 1
      repeat(or(fb:en.num,contain(repeat(fb:en.num,1))),1,) : 1
      repeat(or(fb:en.num,repeat(fb:en.num,1)),1,) : 1
      or(fb:en.num,repeat(repeat(fb:en.any,1),1,)) : 1
      contain(fb:en.any) : 1
      repeat(contain(or(fb:en.num,fb:en.let)),1,) : 1
      or(fb:en.num,repeat(fb:en.num,1)) : 2
      or(fb:en.num,contain(fb:en.num)) : 1
      repeat(repeat(or(fb:en.let,fb:en.num),1),1,) : 1
      repeat(contain(fb:en.num),1,) : 2
      or(fb:en.num,contain(fb:en.let)) : 1
      or(fb:en.num,repeat(contain(fb:en.num),1,)) : 1
      contain(or(fb:en.num,repeat(fb:en.let,1))) : 1
      contain(fb:en.num) : 2
      repeat(contain(or(fb:en.num,repeat(fb:en.any,1))),1,) : 1
      or(repeat(fb:en.any,1),fb:en.num) : 2
      or(fb:en.let,fb:en.num) : 1
      or(fb:en.num,contain(fb:en.any)) : 1
      or(fb:en.num,repeat(fb:en.num,1,)) : 1
      or(fb:en.any,fb:en.num) : 2
      or(fb:en.num,fb:en.any) : 2
      repeat(contain(or(fb:en.num,repeat(fb:en.let,1))),1,) : 1
      repeat(contain(repeat(or(fb:en.num,fb:en.num),1)),1,) : 2
      contain(fb:en.let) : 1
      repeat(or(fb:en.any,fb:en.num),1,) : 2
      repeat(contain(or(fb:en.any,fb:en.num)),1,) : 1
      or(repeat(fb:en.any,1,),fb:en.num) : 2
      repeat(contain(fb:en.any),1,) : 1
      or(fb:en.num,repeat(fb:en.any,1,)) : 2
      contain(repeat(or(fb:en.num,fb:en.any),1)) : 1
      repeat(fb:en.let,1,) : 1
      repeat(or(fb:en.num,fb:en.num),1,) : 2
      contain(or(fb:en.num,fb:en.num)) : 2
      contain(repeat(or(fb:en.let,fb:en.num),1)) : 1
      or(fb:en.num,repeat(contain(repeat(fb:en.let,1)),1,)) : 1
      contain(or(fb:en.let,fb:en.num)) : 1
      repeat(or(fb:en.num,fb:en.let),1) : 2
      or(repeat(contain(fb:en.num),1,),fb:en.num) : 1
      contain(repeat(fb:en.let,1)) : 1
      or(fb:en.num,repeat(fb:en.let,1)) : 2
      or(contain(repeat(fb:en.let,1)),fb:en.num) : 1
      or(repeat(contain(fb:en.any),1,),fb:en.num) : 1
      contain(or(repeat(fb:en.any,1),fb:en.num)) : 1
      repeat(or(contain(fb:en.any),fb:en.num),1,) : 1
      repeat(repeat(fb:en.num,1),1,) : 2
      repeat(or(contain(fb:en.num),fb:en.num),1,) : 1
      repeat(or(fb:en.num,contain(fb:en.any)),1,) : 1
      repeat(contain(or(fb:en.num,fb:en.num)),1,) : 2
      repeat(or(fb:en.num,fb:en.num),1) : 4
      repeat(fb:en.any,1) : 2
      or(fb:en.num,repeat(contain(fb:en.let),1,)) : 1
      contain(repeat(fb:en.num,1)) : 2
      repeat(or(fb:en.num,repeat(fb:en.let,1)),1,) : 1
      or(repeat(fb:en.let,1),fb:en.num) : 2
      repeat(contain(or(fb:en.num,fb:en.any)),1,) : 1
      or(contain(fb:en.num),fb:en.num) : 1
      repeat(or(contain(repeat(fb:en.any,1)),fb:en.num),1,) : 1
      repeat(or(contain(repeat(fb:en.num,1)),fb:en.num),1,) : 1
      or(repeat(repeat(fb:en.num,1),1,),fb:en.num) : 1
      repeat(contain(fb:en.let),1,) : 1
      repeat(contain(or(repeat(fb:en.let,1),fb:en.num)),1,) : 1
      repeat(fb:en.num,1,) : 2
      contain(repeat(or(fb:en.num,fb:en.let),1)) : 1
      contain(or(repeat(fb:en.num,1),fb:en.num)) : 1
      fb:en.any : 2
      or(fb:en.num,repeat(fb:en.let,1,)) : 1
      repeat(or(fb:en.num,fb:en.let),1,) : 1
      repeat(contain(repeat(fb:en.any,1)),1,) : 1
      repeat(or(contain(fb:en.let),fb:en.num),1,) : 1
      repeat(fb:en.num,1) : 4
      fb:en.let : 1
      or(fb:en.num,fb:en.num) : 2
      or(repeat(repeat(fb:en.let,1),1,),fb:en.num) : 1
      or(repeat(contain(repeat(fb:en.num,1)),1,),fb:en.num) : 1
      repeat(fb:en.let,1) : 2
      or(contain(fb:en.any),fb:en.num) : 1
      contain(or(fb:en.num,repeat(fb:en.any,1))) : 1
      repeat(contain(repeat(or(fb:en.num,fb:en.any),1)),1,) : 1
      or(fb:en.num,contain(repeat(fb:en.let,1))) : 1
      repeat(or(fb:en.num,contain(repeat(fb:en.let,1))),1,) : 1
      or(repeat(fb:en.let,1,),fb:en.num) : 1
      contain(or(fb:en.num,repeat(fb:en.num,1))) : 1
      repeat(or(fb:en.num,fb:en.any),1,) : 2
      or(fb:en.num,contain(repeat(fb:en.any,1))) : 1
      or(contain(fb:en.let),fb:en.num) : 1
      repeat(repeat(or(fb:en.num,fb:en.let),1),1,) : 1
      repeat(contain(repeat(or(fb:en.any,fb:en.num),1)),1,) : 1
      or(repeat(contain(repeat(fb:en.let,1)),1,),fb:en.num) : 1
      or(repeat(fb:en.num,1),fb:en.num) : 2
      repeat(repeat(fb:en.any,1),1,) : 1
      repeat(contain(repeat(or(fb:en.num,fb:en.let),1)),1,) : 1
      or(contain(repeat(fb:en.any,1)),fb:en.num) : 1
      or(repeat(repeat(fb:en.any,1),1,),fb:en.num) : 1
      repeat(repeat(or(fb:en.num,fb:en.any),1),1,) : 1
      repeat(repeat(or(fb:en.num,fb:en.num),1),1,) : 2
=======================================================
Test on utterance 52:
  Line 0: Allows only the following characters: Letters, numbers, spaces and any of the following characters <M0> <M1> <M2> <M3> <M4> <M5> <M6>
    Top prediction: repeat(followedby(fb:en.let,and(followedby(fb:en.any,fb:en.let),fb:en.let)),1,)
derivSize == beamSize
    All 40 derivations and their counts: 
      repeat(followedby(fb:en.let,and(followedby(fb:en.any,fb:en.const),fb:en.let)),1,) : 14
      repeat(followedby(fb:en.any,and(fb:en.let,followedby(fb:en.any,fb:en.const))),1,) : 9
      repeat(followedby(fb:en.any,and(fb:en.let,followedby(fb:en.let,fb:en.const))),1,) : 2
      repeat(followedby(fb:en.let,followedby(and(fb:en.let,fb:en.any),fb:en.any)),1,) : 1
      repeat(followedby(fb:en.let,and(followedby(fb:en.any,fb:en.let),fb:en.let)),1,) : 1
      repeat(followedby(fb:en.any,and(followedby(fb:en.any,fb:en.any),fb:en.let)),1,) : 1
      repeat(followedby(fb:en.let,and(fb:en.let,followedby(fb:en.any,fb:en.any))),1,) : 1
      repeat(followedby(fb:en.let,and(fb:en.let,fb:en.any)),1,) : 2
      repeat(followedby(fb:en.let,followedby(fb:en.let,fb:en.num)),1,) : 1
      repeat(followedby(fb:en.let,and(fb:en.let,followedby(fb:en.const,fb:en.const))),1,) : 21
      repeat(followedby(fb:en.any,and(followedby(fb:en.const,fb:en.const),fb:en.let)),1,) : 21
      repeat(followedby(fb:en.let,and(fb:en.any,fb:en.let)),1,) : 2
      repeat(followedby(fb:en.let,followedby(fb:en.let,fb:en.const)),1,) : 7
      repeat(followedby(fb:en.let,followedby(and(fb:en.let,fb:en.any),fb:en.const)),1,) : 7
      repeat(followedby(fb:en.let,and(fb:en.let,fb:en.const)),1,) : 7
      repeat(followedby(fb:en.any,and(fb:en.any,fb:en.let)),1,) : 1
      repeat(followedby(fb:en.let,fb:en.let),1,) : 1
      repeat(followedby(fb:en.let,and(fb:en.let,followedby(fb:en.any,fb:en.const))),1,) : 14
      repeat(followedby(fb:en.let,followedby(fb:en.let,fb:en.let)),1,) : 1
      repeat(followedby(fb:en.let,and(fb:en.let,followedby(fb:en.any,fb:en.let))),1,) : 1
      repeat(followedby(fb:en.let,and(fb:en.let,followedby(fb:en.let,fb:en.const))),1,) : 7
      repeat(followedby(fb:en.any,and(followedby(fb:en.any,fb:en.let),fb:en.let)),1,) : 1
      repeat(followedby(fb:en.let,and(fb:en.let,fb:en.let)),1,) : 2
      repeat(followedby(fb:en.let,followedby(and(fb:en.any,fb:en.let),fb:en.const)),1,) : 7
      repeat(followedby(fb:en.any,and(followedby(fb:en.any,fb:en.const),fb:en.let)),1,) : 14
      repeat(followedby(fb:en.let,and(followedby(fb:en.const,fb:en.const),fb:en.let)),1,) : 21
      repeat(followedby(fb:en.let,followedby(and(fb:en.let,fb:en.any),fb:en.let)),1,) : 1
      repeat(followedby(fb:en.let,followedby(and(fb:en.any,fb:en.let),fb:en.any)),1,) : 1
      repeat(followedby(fb:en.any,and(fb:en.let,followedby(fb:en.const,fb:en.const))),1,) : 1
      repeat(followedby(fb:en.let,followedby(fb:en.let,and(fb:en.any,fb:en.num))),1,) : 1
      repeat(followedby(fb:en.let,and(followedby(fb:en.let,fb:en.const),fb:en.let)),1,) : 7
      repeat(followedby(fb:en.let,followedby(fb:en.let,and(fb:en.num,fb:en.any))),1,) : 1
      repeat(followedby(fb:en.let,followedby(and(fb:en.any,fb:en.let),fb:en.let)),1,) : 1
      repeat(followedby(fb:en.let,and(fb:en.const,fb:en.let)),1,) : 7
      repeat(followedby(fb:en.any,and(fb:en.let,followedby(fb:en.any,fb:en.let))),1,) : 1
      repeat(followedby(fb:en.any,and(fb:en.let,followedby(fb:en.any,fb:en.any))),1,) : 1
      repeat(followedby(fb:en.let,followedby(fb:en.let,fb:en.any)),1,) : 2
      repeat(followedby(fb:en.let,and(followedby(fb:en.any,fb:en.any),fb:en.let)),1,) : 1
      repeat(followedby(fb:en.any,and(fb:en.let,fb:en.any)),1,) : 1
      repeat(followedby(fb:en.any,and(followedby(fb:en.let,fb:en.const),fb:en.let)),1,) : 7
=======================================================
Test on utterance 53:
  Line 0: User allowed to enter two characters after <M0>
    Top prediction: repeat(followedby(fb:en.const,fb:en.let),2)
    All 12 derivations and their counts: 
      repeat(fb:en.any,2) : 1
      repeat(fb:en.let,2) : 1
      followedby(fb:en.const,repeat(fb:en.let,2)) : 1
      followedby(fb:en.const,fb:en.let) : 1
      followedby(fb:en.const,repeat(fb:en.any,2)) : 1
      repeat(fb:en.const,2) : 1
      followedby(fb:en.const,fb:en.any) : 1
      fb:en.let : 1
      fb:en.any : 1
      fb:en.const : 1
      repeat(followedby(fb:en.const,fb:en.let),2) : 1
      repeat(followedby(fb:en.const,fb:en.any),2) : 1
=======================================================
Test on utterance 54:
  Line 0: Validating rules are follow
    Top prediction: 
  Line 1: Input is last name, first name i.e. separated by <M0>.
    Top prediction: repeat(sep(fb:en.const),1)
    All 4 derivations and their counts: 
      repeat(fb:en.const,1) : 1
      sep(fb:en.const) : 1
      repeat(sep(fb:en.const),1) : 1
      fb:en.const : 1
  Line 2: Must have at least two characters while using wild card search.
    Top prediction: contain(repeat(fb:en.let,2,))
    All 12 derivations and their counts: 
      contain(repeat(fb:en.any,2)) : 1
      repeat(fb:en.any,2) : 1
      repeat(fb:en.let,2) : 1
      repeat(fb:en.let,2,) : 1
      contain(repeat(fb:en.let,2,)) : 1
      contain(fb:en.any) : 1
      contain(repeat(fb:en.let,2)) : 1
      contain(repeat(fb:en.any,2,)) : 1
      fb:en.let : 1
      contain(fb:en.let) : 1
      fb:en.any : 1
      repeat(fb:en.any,2,) : 1
  Line 3: Valid wildcard character is ' <M1> ' only.
    Top prediction: fb:en.let
    All 3 derivations and their counts: 
      fb:en.let : 1
      fb:en.any : 1
      fb:en.const : 1
  Line 4: At most two wildcard characters can be used.
    Top prediction: repeat(fb:en.let,2)
    All 4 derivations and their counts: 
      repeat(fb:en.any,2) : 1
      repeat(fb:en.let,2) : 1
      fb:en.let : 1
      fb:en.any : 1
  Line 5: No consecutive wild cards.
    Top prediction: 
  Line 6: If no wild card used no constraint on length of characters in both last and first name.
    Top prediction: repeat(fb:en.let,1)
    All 4 derivations and their counts: 
      repeat(fb:en.let,1) : 2
      repeat(fb:en.any,1) : 2
      fb:en.let : 1
      fb:en.any : 1
=======================================================
Test on utterance 55:
  Line 0: The validation will pass only if
    Top prediction: 
  Line 1: the number has precisely two decimal places
    Top prediction: fb:en.num
    All 5 derivations and their counts: 
      fb:en.num : 1
      contain(fb:en.dp) : 1
      contain(repeat(fb:en.dp,2)) : 1
      fb:en.dp : 1
      repeat(fb:en.dp,2) : 1
  Line 2: there is at least one digit before the decimal point. (could be zero)
    Top prediction: repeat(followedby(fb:en.num,fb:en.dp),1,)
    All 11 derivations and their counts: 
      repeat(fb:en.dp,1,) : 1
      fb:en.num : 1
      repeat(followedby(fb:en.num,fb:en.dp),1,) : 1
      repeat(fb:en.num,1) : 1
      repeat(fb:en.num,1,) : 1
      repeat(followedby(fb:en.num,fb:en.dp),1) : 1
      followedby(repeat(fb:en.num,1,),fb:en.dp) : 1
      fb:en.dp : 1
      followedby(repeat(fb:en.num,1),fb:en.dp) : 1
      repeat(fb:en.dp,1) : 1
      followedby(fb:en.num,fb:en.dp) : 1
  Line 3: the number before the decimal point can not begin with more than one zero.
    Top prediction: followedby(fb:en.num,not(fb:en.dp))
    All 7 derivations and their counts: 
      fb:en.num : 1
      fb:en.dp : 1
      not(fb:en.num) : 1
      followedby(fb:en.num,not(fb:en.dp)) : 1
      not(followedby(fb:en.num,fb:en.dp)) : 1
      not(fb:en.dp) : 1
      followedby(fb:en.num,fb:en.dp) : 1
=======================================================
Test on utterance 56:
  Line 0: the first letter of each string is in upper case
    Top prediction: repeat(fb:en.let,1)
    All 6 derivations and their counts: 
      repeat(fb:en.let,1) : 1
      fb:en.cap : 1
      repeat(fb:en.any,1) : 1
      fb:en.let : 1
      fb:en.any : 1
      repeat(fb:en.cap,1) : 1
=======================================================
Test on utterance 57:
  Line 0: allow only numbers, maxmium two decimals, max one <M0> (,) and one <M1> symbol in front of the number ( optional ).
    Top prediction: repeat(and(repeat(optional(fb:en.const),1),fb:en.num),1,)
derivSize == beamSize
    All 189 derivations and their counts: 
      repeat(and(fb:en.const,fb:en.num),1,) : 1
      repeat(repeat(and(optional(fb:en.const),repeat(fb:en.const,1,1)),2),1,) : 1
      repeat(and(fb:en.num,repeat(optional(fb:en.num),1)),1,) : 1
      repeat(repeat(and(repeat(fb:en.const,1),fb:en.dp),2),1,) : 1
      repeat(repeat(optional(and(repeat(startwith(fb:en.num),1),fb:en.dp)),2),1,) : 1
      repeat(repeat(repeat(and(optional(repeat(fb:en.num,1)),fb:en.const),1,1),2),1,) : 1
      repeat(repeat(repeat(optional(fb:en.const),1,1),2),1,) : 3
      repeat(repeat(and(repeat(fb:en.const,1,1),repeat(fb:en.const,1)),2),1,) : 1
      repeat(and(repeat(startwith(optional(fb:en.num)),1),fb:en.num),1,) : 1
      repeat(repeat(and(repeat(startwith(fb:en.num),1),fb:en.dp),2),1,) : 1
      repeat(repeat(optional(and(fb:en.const,fb:en.dp)),2),1,) : 1
      repeat(repeat(repeat(and(repeat(fb:en.num,1),fb:en.const),1,1),2),1,) : 1
      repeat(repeat(repeat(optional(and(fb:en.const,startwith(fb:en.num))),1,1),2),1,) : 1
      repeat(and(fb:en.num,startwith(fb:en.num)),1,) : 1
      repeat(and(fb:en.num,optional(startwith(fb:en.num))),1,) : 1
      repeat(repeat(and(optional(fb:en.num),fb:en.dp),2),1,) : 1
      repeat(and(optional(repeat(fb:en.num,1)),fb:en.num),1,) : 1
      repeat(and(fb:en.num,optional(repeat(fb:en.num,1))),1,) : 1
      repeat(and(fb:en.num,optional(fb:en.num)),1,) : 1
      repeat(repeat(and(fb:en.dp,optional(repeat(fb:en.num,1))),2),1,) : 1
      repeat(repeat(repeat(and(fb:en.const,optional(startwith(fb:en.num))),1,1),2),1,) : 1
      repeat(and(optional(startwith(fb:en.num)),fb:en.num),1,) : 1
      repeat(repeat(and(fb:en.dp,repeat(optional(fb:en.const),1)),2),1,) : 1
      repeat(and(repeat(optional(startwith(fb:en.num)),1),fb:en.num),1,) : 1
      repeat(repeat(repeat(and(fb:en.const,repeat(optional(startwith(fb:en.num)),1)),1,1),2),1,) : 1
      repeat(repeat(and(repeat(optional(fb:en.num),1),fb:en.dp),2),1,) : 1
      repeat(and(fb:en.num,repeat(optional(fb:en.const),1)),1,) : 1
      repeat(repeat(and(repeat(fb:en.const,1,1),startwith(optional(fb:en.num))),2),1,) : 1
      repeat(and(startwith(optional(fb:en.num)),fb:en.num),1,) : 1
      repeat(repeat(repeat(optional(and(repeat(fb:en.num,1),fb:en.const)),1,1),2),1,) : 1
      repeat(repeat(and(repeat(fb:en.const,1),repeat(fb:en.const,1,1)),2),1,) : 1
      repeat(repeat(repeat(and(startwith(optional(fb:en.num)),fb:en.const),1,1),2),1,) : 1
      repeat(repeat(and(repeat(fb:en.const,1,1),optional(repeat(startwith(fb:en.num),1))),2),1,) : 1
      repeat(repeat(and(optional(repeat(fb:en.const,1)),fb:en.dp),2),1,) : 1
      repeat(repeat(and(fb:en.dp,startwith(optional(fb:en.num))),2),1,) : 1
      repeat(repeat(fb:en.dp,2),1,) : 1
      repeat(repeat(repeat(optional(repeat(fb:en.const,1)),1,1),2),1,) : 1
      repeat(repeat(and(fb:en.dp,optional(repeat(startwith(fb:en.num),1))),2),1,) : 1
      repeat(repeat(repeat(and(fb:en.const,optional(repeat(startwith(fb:en.num),1))),1,1),2),1,) : 1
      repeat(repeat(and(repeat(fb:en.const,1,1),optional(repeat(fb:en.const,1))),2),1,) : 1
      repeat(repeat(and(repeat(fb:en.const,1,1),startwith(fb:en.num)),2),1,) : 1
      repeat(repeat(and(repeat(startwith(optional(fb:en.num)),1),repeat(fb:en.const,1,1)),2),1,) : 1
      repeat(optional(fb:en.num),1,) : 1
      repeat(repeat(repeat(repeat(fb:en.num,1),1,1),2),1,) : 1
      repeat(repeat(and(fb:en.dp,startwith(fb:en.num)),2),1,) : 1
      repeat(repeat(repeat(and(fb:en.const,startwith(fb:en.num)),1,1),2),1,) : 1
      repeat(repeat(repeat(optional(repeat(fb:en.num,1)),1,1),2),1,) : 1
      repeat(and(fb:en.num,fb:en.const),1,) : 1
      repeat(repeat(repeat(and(optional(fb:en.const),fb:en.const),1,1),2),1,) : 1
      repeat(repeat(and(fb:en.num,fb:en.dp),2),1,) : 1
      repeat(and(repeat(fb:en.num,1),fb:en.num),1,) : 1
      repeat(repeat(repeat(and(fb:en.const,fb:en.num),1,1),2),1,) : 1
      repeat(repeat(and(repeat(fb:en.const,1,1),repeat(fb:en.num,1)),2),1,) : 1
      repeat(optional(and(startwith(fb:en.num),fb:en.num)),1,) : 1
      repeat(and(fb:en.num,optional(repeat(fb:en.const,1))),1,) : 1
      repeat(repeat(repeat(and(repeat(fb:en.const,1),fb:en.const),1,1),2),1,) : 1
      repeat(and(repeat(optional(fb:en.const),1),fb:en.num),1,) : 1
      repeat(repeat(and(startwith(fb:en.num),fb:en.dp),2),1,) : 1
      repeat(repeat(repeat(and(fb:en.const,optional(fb:en.num)),1,1),2),1,) : 1
      repeat(and(startwith(fb:en.num),fb:en.num),1,) : 1
      repeat(repeat(and(fb:en.const,repeat(fb:en.const,1,1)),2),1,) : 1
      repeat(repeat(repeat(startwith(fb:en.num),1,1),2),1,) : 2
      repeat(optional(and(repeat(fb:en.const,1),fb:en.num)),1,) : 1
      repeat(repeat(and(optional(repeat(startwith(fb:en.num),1)),fb:en.dp),2),1,) : 1
      repeat(repeat(and(repeat(fb:en.const,1,1),repeat(optional(startwith(fb:en.num)),1)),2),1,) : 1
      repeat(repeat(and(fb:en.dp,fb:en.const),2),1,) : 1
      repeat(repeat(and(fb:en.dp,repeat(optional(startwith(fb:en.num)),1)),2),1,) : 1
      repeat(and(fb:en.num,optional(repeat(startwith(fb:en.num),1))),1,) : 1
      repeat(repeat(and(repeat(optional(startwith(fb:en.num)),1),repeat(fb:en.const,1,1)),2),1,) : 1
      repeat(repeat(and(startwith(optional(fb:en.num)),repeat(fb:en.const,1,1)),2),1,) : 1
      repeat(repeat(and(optional(fb:en.num),repeat(fb:en.const,1,1)),2),1,) : 1
      repeat(repeat(repeat(repeat(optional(startwith(fb:en.num)),1),1,1),2),1,) : 1
      repeat(repeat(optional(and(fb:en.dp,repeat(startwith(fb:en.num),1))),2),1,) : 1
      repeat(repeat(repeat(optional(and(fb:en.const,fb:en.num)),1,1),2),1,) : 1
      repeat(repeat(and(fb:en.dp,fb:en.num),2),1,) : 1
      repeat(repeat(and(fb:en.dp,optional(fb:en.const)),2),1,) : 1
      repeat(repeat(and(repeat(fb:en.const,1,1),fb:en.const),2),1,) : 1
      repeat(repeat(optional(and(fb:en.num,fb:en.dp)),2),1,) : 1
      repeat(repeat(optional(and(repeat(fb:en.num,1),fb:en.dp)),2),1,) : 1
      repeat(and(fb:en.num,optional(fb:en.const)),1,) : 1
      repeat(repeat(and(repeat(optional(fb:en.num),1),repeat(fb:en.const,1,1)),2),1,) : 1
      repeat(repeat(and(repeat(fb:en.const,1,1),repeat(optional(fb:en.num),1)),2),1,) : 1
      repeat(repeat(repeat(and(repeat(optional(startwith(fb:en.num)),1),fb:en.const),1,1),2),1,) : 1
      repeat(repeat(and(optional(startwith(fb:en.num)),fb:en.dp),2),1,) : 1
      repeat(repeat(repeat(and(fb:en.num,fb:en.const),1,1),2),1,) : 1
      repeat(repeat(and(repeat(startwith(fb:en.num),1),repeat(fb:en.const,1,1)),2),1,) : 1
      repeat(and(optional(fb:en.const),fb:en.num),1,) : 1
      repeat(repeat(and(optional(repeat(startwith(fb:en.num),1)),repeat(fb:en.const,1,1)),2),1,) : 1
      repeat(and(repeat(fb:en.const,1),fb:en.num),1,) : 1
      repeat(repeat(repeat(optional(and(fb:en.const,repeat(fb:en.num,1))),1,1),2),1,) : 1
      repeat(optional(and(repeat(fb:en.num,1),fb:en.num)),1,) : 1
      repeat(repeat(repeat(and(optional(repeat(fb:en.const,1)),fb:en.const),1,1),2),1,) : 1
      repeat(repeat(repeat(and(optional(repeat(startwith(fb:en.num),1)),fb:en.const),1,1),2),1,) : 1
      repeat(repeat(repeat(repeat(optional(fb:en.num),1),1,1),2),1,) : 1
      repeat(repeat(repeat(repeat(optional(fb:en.const),1),1,1),2),1,) : 1
      repeat(repeat(and(repeat(fb:en.const,1,1),optional(fb:en.const)),2),1,) : 1
      repeat(repeat(optional(and(fb:en.dp,repeat(fb:en.num,1))),2),1,) : 1
      repeat(repeat(and(fb:en.const,fb:en.dp),2),1,) : 1
      repeat(repeat(and(optional(repeat(fb:en.num,1)),fb:en.dp),2),1,) : 1
      repeat(repeat(repeat(and(repeat(optional(fb:en.num),1),fb:en.const),1,1),2),1,) : 1
      repeat(repeat(repeat(and(fb:en.const,repeat(optional(fb:en.const),1)),1,1),2),1,) : 1
      repeat(repeat(repeat(and(repeat(startwith(optional(fb:en.num)),1),fb:en.const),1,1),2),1,) : 1
      repeat(repeat(repeat(repeat(startwith(optional(fb:en.num)),1),1,1),2),1,) : 1
      repeat(optional(and(fb:en.num,repeat(startwith(fb:en.num),1))),1,) : 1
      repeat(repeat(repeat(startwith(optional(fb:en.num)),1,1),2),1,) : 2
      repeat(optional(and(fb:en.num,repeat(fb:en.num,1))),1,) : 1
      repeat(repeat(and(startwith(fb:en.num),repeat(fb:en.const,1,1)),2),1,) : 1
      repeat(repeat(and(repeat(fb:en.const,1,1),repeat(optional(fb:en.const),1)),2),1,) : 1
      repeat(and(fb:en.num,repeat(optional(startwith(fb:en.num)),1)),1,) : 1
      repeat(repeat(optional(and(fb:en.dp,fb:en.const)),2),1,) : 1
      repeat(repeat(and(repeat(fb:en.const,1,1),optional(fb:en.num)),2),1,) : 1
      repeat(repeat(and(fb:en.dp,repeat(startwith(optional(fb:en.num)),1)),2),1,) : 1
      repeat(and(optional(repeat(fb:en.const,1)),fb:en.num),1,) : 1
      repeat(repeat(and(optional(startwith(fb:en.num)),repeat(fb:en.const,1,1)),2),1,) : 1
      repeat(repeat(and(startwith(optional(fb:en.num)),fb:en.dp),2),1,) : 1
      repeat(repeat(and(repeat(fb:en.const,1,1),repeat(startwith(optional(fb:en.num)),1)),2),1,) : 1
      repeat(and(fb:en.num,repeat(fb:en.const,1)),1,) : 1
      repeat(optional(and(fb:en.num,fb:en.num)),1,) : 2
      repeat(and(fb:en.num,fb:en.num),1,) : 2
      repeat(repeat(repeat(repeat(startwith(fb:en.num),1),1,1),2),1,) : 1
      repeat(optional(and(fb:en.num,startwith(fb:en.num))),1,) : 1
      repeat(repeat(repeat(and(optional(startwith(fb:en.num)),fb:en.const),1,1),2),1,) : 1
      repeat(repeat(repeat(optional(and(fb:en.num,fb:en.const)),1,1),2),1,) : 1
      repeat(fb:en.num,1,) : 1
      repeat(repeat(optional(fb:en.dp),2),1,) : 1
      repeat(repeat(repeat(optional(and(repeat(startwith(fb:en.num),1),fb:en.const)),1,1),2),1,) : 1
      repeat(repeat(repeat(and(fb:en.const,optional(repeat(fb:en.num,1))),1,1),2),1,) : 1
      repeat(repeat(and(repeat(fb:en.num,1),fb:en.dp),2),1,) : 1
      repeat(repeat(repeat(and(fb:en.const,optional(fb:en.const)),1,1),2),1,) : 1
      repeat(repeat(and(repeat(fb:en.const,1,1),optional(repeat(fb:en.num,1))),2),1,) : 1
      repeat(repeat(repeat(and(fb:en.const,fb:en.const),1,1),2),1,) : 2
      repeat(and(fb:en.num,repeat(startwith(fb:en.num),1)),1,) : 1
      repeat(repeat(repeat(and(fb:en.const,repeat(startwith(optional(fb:en.num)),1)),1,1),2),1,) : 1
      repeat(repeat(repeat(and(optional(fb:en.num),fb:en.const),1,1),2),1,) : 1
      repeat(repeat(and(repeat(fb:en.const,1,1),repeat(startwith(fb:en.num),1)),2),1,) : 1
      repeat(repeat(and(fb:en.dp,optional(repeat(fb:en.const,1))),2),1,) : 1
      repeat(optional(and(fb:en.const,fb:en.num)),1,) : 1
      repeat(optional(and(repeat(startwith(fb:en.num),1),fb:en.num)),1,) : 1
      repeat(repeat(repeat(and(startwith(fb:en.num),fb:en.const),1,1),2),1,) : 1
      repeat(optional(and(fb:en.num,repeat(fb:en.const,1))),1,) : 1
      repeat(repeat(repeat(and(repeat(optional(fb:en.const),1),fb:en.const),1,1),2),1,) : 1
      repeat(repeat(repeat(and(fb:en.const,optional(repeat(fb:en.const,1))),1,1),2),1,) : 1
      repeat(repeat(and(fb:en.dp,repeat(optional(fb:en.num),1)),2),1,) : 1
      repeat(repeat(and(optional(fb:en.const),fb:en.dp),2),1,) : 1
      repeat(repeat(repeat(optional(fb:en.num),1,1),2),1,) : 1
      repeat(repeat(and(repeat(startwith(optional(fb:en.num)),1),fb:en.dp),2),1,) : 1
      repeat(and(repeat(optional(fb:en.num),1),fb:en.num),1,) : 1
      repeat(repeat(optional(and(repeat(fb:en.const,1),fb:en.dp)),2),1,) : 1
      repeat(repeat(optional(and(startwith(fb:en.num),fb:en.dp)),2),1,) : 1
      repeat(repeat(and(optional(repeat(fb:en.num,1)),repeat(fb:en.const,1,1)),2),1,) : 1
      repeat(repeat(repeat(and(fb:en.const,startwith(optional(fb:en.num))),1,1),2),1,) : 1
      repeat(repeat(repeat(fb:en.const,1,1),2),1,) : 3
      repeat(repeat(and(fb:en.num,repeat(fb:en.const,1,1)),2),1,) : 1
      repeat(repeat(and(fb:en.dp,optional(fb:en.num)),2),1,) : 1
      repeat(repeat(repeat(optional(and(fb:en.const,repeat(startwith(fb:en.num),1))),1,1),2),1,) : 1
      repeat(repeat(and(repeat(optional(startwith(fb:en.num)),1),fb:en.dp),2),1,) : 1
      repeat(repeat(repeat(repeat(fb:en.const,1),1,1),2),1,) : 1
      repeat(repeat(repeat(optional(and(fb:en.const,repeat(fb:en.const,1))),1,1),2),1,) : 1
      repeat(repeat(and(fb:en.dp,repeat(fb:en.const,1)),2),1,) : 1
      repeat(repeat(repeat(and(repeat(startwith(fb:en.num),1),fb:en.const),1,1),2),1,) : 1
      repeat(repeat(repeat(and(fb:en.const,repeat(fb:en.const,1)),1,1),2),1,) : 1
      repeat(repeat(repeat(optional(and(repeat(fb:en.const,1),fb:en.const)),1,1),2),1,) : 1
      repeat(repeat(optional(and(fb:en.dp,repeat(fb:en.const,1))),2),1,) : 1
      repeat(repeat(repeat(and(fb:en.const,repeat(fb:en.num,1)),1,1),2),1,) : 1
      repeat(and(fb:en.num,startwith(optional(fb:en.num))),1,) : 1
      repeat(and(fb:en.num,repeat(startwith(optional(fb:en.num)),1)),1,) : 1
      repeat(repeat(repeat(optional(repeat(startwith(fb:en.num),1)),1,1),2),1,) : 1
      repeat(repeat(and(repeat(fb:en.const,1,1),optional(startwith(fb:en.num))),2),1,) : 1
      repeat(repeat(repeat(optional(startwith(fb:en.num)),1,1),2),1,) : 2
      repeat(repeat(and(repeat(optional(fb:en.const),1),fb:en.dp),2),1,) : 1
      repeat(optional(and(fb:en.num,fb:en.const)),1,) : 1
      repeat(repeat(repeat(optional(and(startwith(fb:en.num),fb:en.const)),1,1),2),1,) : 1
      repeat(and(repeat(startwith(fb:en.num),1),fb:en.num),1,) : 1
      repeat(and(optional(fb:en.num),fb:en.num),1,) : 1
      repeat(repeat(and(repeat(fb:en.const,1,1),fb:en.num),2),1,) : 1
      repeat(repeat(repeat(optional(and(fb:en.const,fb:en.const)),1,1),2),1,) : 2
      repeat(repeat(and(repeat(fb:en.num,1),repeat(fb:en.const,1,1)),2),1,) : 1
      repeat(repeat(and(repeat(optional(fb:en.const),1),repeat(fb:en.const,1,1)),2),1,) : 1
      repeat(repeat(repeat(fb:en.num,1,1),2),1,) : 1
      repeat(repeat(and(optional(repeat(fb:en.const,1)),repeat(fb:en.const,1,1)),2),1,) : 1
      repeat(repeat(and(fb:en.dp,repeat(fb:en.num,1)),2),1,) : 1
      repeat(and(fb:en.num,repeat(fb:en.num,1)),1,) : 1
      repeat(repeat(and(fb:en.dp,optional(startwith(fb:en.num))),2),1,) : 1
      repeat(repeat(optional(and(fb:en.dp,fb:en.num)),2),1,) : 1
      repeat(repeat(repeat(and(fb:en.const,repeat(startwith(fb:en.num),1)),1,1),2),1,) : 1
      repeat(and(optional(repeat(startwith(fb:en.num),1)),fb:en.num),1,) : 1
      repeat(repeat(optional(and(fb:en.dp,startwith(fb:en.num))),2),1,) : 1
      repeat(repeat(and(fb:en.dp,repeat(startwith(fb:en.num),1)),2),1,) : 1
      repeat(repeat(repeat(and(fb:en.const,repeat(optional(fb:en.num),1)),1,1),2),1,) : 1
=======================================================
Test on utterance 58:
  Line 0: it doesn't start with a <M0>,
    Top prediction: not(startwith(contain(fb:en.const)))
    All 8 derivations and their counts: 
      not(fb:en.const) : 1
      startwith(fb:en.const) : 1
      not(startwith(fb:en.const)) : 1
      not(contain(fb:en.const)) : 1
      startwith(contain(fb:en.const)) : 1
      fb:en.const : 1
      not(startwith(contain(fb:en.const))) : 1
      contain(fb:en.const) : 1
  Line 1: doesn't contain a <M1>, 
    Top prediction: not(contain(fb:en.const))
    All 4 derivations and their counts: 
      not(fb:en.const) : 1
      not(contain(fb:en.const)) : 1
      fb:en.const : 1
      contain(fb:en.const) : 1
  Line 2: and doesn't end with a <M2>.
    Top prediction: not(endwith(contain(fb:en.const)))
    All 8 derivations and their counts: 
      not(endwith(fb:en.const)) : 1
      not(fb:en.const) : 1
      not(contain(fb:en.const)) : 1
      endwith(fb:en.const) : 1
      fb:en.const : 1
      not(endwith(contain(fb:en.const))) : 1
      endwith(contain(fb:en.const)) : 1
      contain(fb:en.const) : 1
=======================================================
Test on utterance 59:
  Line 0: We like to validate following with Regex:
    Top prediction: 
  Line 1: string may contain 0 or more alphabets, digits, <M0> OR
    Top prediction: contain(repeat(fb:en.let,0))
    All 25 derivations and their counts: 
      repeat(fb:en.let,0,) : 1
      or(fb:en.let,fb:en.any) : 1
      contain(repeat(fb:en.const,0,)) : 1
      fb:en.let : 1
      contain(repeat(fb:en.const,0)) : 1
      or(fb:en.any,fb:en.let) : 1
      repeat(fb:en.const,0,) : 1
      or(fb:en.const,fb:en.any) : 1
      or(fb:en.any,fb:en.const) : 1
      contain(fb:en.num) : 1
      contain(fb:en.const) : 1
      contain(repeat(fb:en.num,0,)) : 1
      fb:en.num : 1
      contain(repeat(fb:en.let,0,)) : 1
      or(fb:en.any,fb:en.num) : 1
      repeat(fb:en.num,0) : 1
      repeat(fb:en.const,0) : 1
      or(fb:en.num,fb:en.any) : 1
      contain(repeat(fb:en.num,0)) : 1
      contain(repeat(fb:en.let,0)) : 1
      contain(fb:en.let) : 1
      repeat(fb:en.let,0) : 1
      repeat(fb:en.num,0,) : 1
      fb:en.const : 1
      fb:en.any : 1
  Line 2: string may contain literals <M1> or <M2> (0 or more times in any order)
    Top prediction: contain(or(repeat(fb:en.const,0),fb:en.const))
    All 139 derivations and their counts: 
      contain(repeat(fb:en.any,1)) : 1
      repeat(repeat(fb:en.any,1),0) : 1
      or(or(repeat(fb:en.any,1),fb:en.const),fb:en.const) : 1
      contain(or(repeat(fb:en.const,0),fb:en.const)) : 1
      or(repeat(repeat(fb:en.any,1),0,),fb:en.any) : 1
      or(contain(fb:en.const),repeat(fb:en.const,0)) : 1
      contain(repeat(fb:en.const,0)) : 2
      or(repeat(fb:en.any,1),contain(fb:en.const)) : 3
      or(contain(fb:en.const),fb:en.any) : 3
      or(contain(fb:en.const),or(fb:en.const,fb:en.any)) : 1
      or(repeat(fb:en.any,1),or(fb:en.const,contain(fb:en.const))) : 1
      contain(repeat(repeat(fb:en.any,1),0,)) : 1
      or(repeat(repeat(fb:en.any,1),0),fb:en.any) : 1
      contain(or(or(fb:en.const,fb:en.any),fb:en.const)) : 1
      or(or(fb:en.const,fb:en.const),repeat(fb:en.any,1)) : 2
      or(contain(fb:en.const),repeat(repeat(fb:en.any,1),0)) : 1
      or(repeat(fb:en.any,0),fb:en.const) : 1
      or(fb:en.any,repeat(fb:en.any,0)) : 1
      or(contain(fb:en.const),or(repeat(fb:en.any,1),fb:en.const)) : 1
      or(contain(or(fb:en.const,fb:en.const)),fb:en.any) : 2
      or(repeat(fb:en.any,1),or(fb:en.any,fb:en.const)) : 1
      or(fb:en.any,repeat(fb:en.any,0,)) : 1
      repeat(fb:en.const,0) : 2
      or(or(fb:en.const,fb:en.const),fb:en.any) : 2
      or(or(fb:en.const,fb:en.any),repeat(fb:en.any,1)) : 1
      or(repeat(fb:en.any,0,),fb:en.any) : 1
      or(fb:en.any,or(fb:en.const,repeat(fb:en.any,1))) : 1
      or(or(fb:en.any,fb:en.const),contain(fb:en.const)) : 1
      or(or(fb:en.any,fb:en.const),fb:en.any) : 2
      or(fb:en.any,or(fb:en.any,fb:en.const)) : 2
      or(fb:en.const,contain(fb:en.const)) : 1
      repeat(or(fb:en.any,fb:en.const),0) : 1
      repeat(or(fb:en.const,fb:en.const),0) : 2
      or(repeat(fb:en.const,0),fb:en.any) : 1
      or(fb:en.const,repeat(fb:en.any,1)) : 3
      contain(repeat(fb:en.any,0)) : 1
      contain(or(fb:en.const,repeat(repeat(fb:en.any,1),0))) : 1
      or(fb:en.const,repeat(repeat(fb:en.any,1),0,)) : 1
      contain(fb:en.any) : 1
      or(fb:en.const,or(repeat(fb:en.any,1),fb:en.const)) : 1
      contain(or(repeat(repeat(fb:en.any,1),0),fb:en.const)) : 1
      or(repeat(fb:en.any,1),or(fb:en.const,fb:en.any)) : 1
      or(or(fb:en.const,repeat(fb:en.any,1)),fb:en.const) : 1
      or(fb:en.const,fb:en.any) : 4
      repeat(contain(fb:en.const),0) : 2
      or(contain(fb:en.const),repeat(repeat(fb:en.any,1),0,)) : 1
      or(fb:en.const,or(fb:en.any,fb:en.const)) : 1
      contain(or(repeat(repeat(fb:en.any,1),0,),fb:en.const)) : 1
      repeat(or(fb:en.const,contain(fb:en.const)),0) : 1
      contain(or(repeat(fb:en.any,1),fb:en.const)) : 3
      repeat(fb:en.any,0,) : 1
      contain(repeat(repeat(fb:en.any,1),0)) : 1
      or(or(fb:en.const,contain(fb:en.const)),repeat(fb:en.any,1)) : 1
      repeat(or(fb:en.const,fb:en.any),0) : 1
      contain(or(or(fb:en.const,fb:en.const),fb:en.any)) : 2
      contain(or(fb:en.const,repeat(fb:en.any,0))) : 1
      or(contain(fb:en.const),repeat(fb:en.any,0)) : 1
      or(repeat(fb:en.const,0),fb:en.const) : 1
      or(repeat(fb:en.any,1),contain(or(fb:en.const,fb:en.const))) : 2
      or(repeat(repeat(fb:en.any,1),0,),fb:en.const) : 1
      or(fb:en.const,repeat(fb:en.any,0,)) : 1
      or(fb:en.const,repeat(repeat(fb:en.any,1),0)) : 1
      or(fb:en.any,or(contain(fb:en.const),fb:en.const)) : 1
      repeat(contain(or(fb:en.const,fb:en.const)),0) : 2
      contain(or(fb:en.const,repeat(fb:en.any,0,))) : 1
      contain(or(or(fb:en.const,fb:en.const),repeat(fb:en.any,1))) : 2
      fb:en.const : 2
      or(fb:en.const,repeat(fb:en.any,0)) : 1
      contain(repeat(fb:en.any,0,)) : 1
      contain(or(or(repeat(fb:en.any,1),fb:en.const),fb:en.const)) : 1
      or(repeat(repeat(fb:en.any,1),0),contain(fb:en.const)) : 1
      contain(or(repeat(fb:en.any,0,),fb:en.const)) : 1
      contain(repeat(or(fb:en.const,fb:en.const),0)) : 2
      contain(or(fb:en.const,repeat(repeat(fb:en.any,1),0,))) : 1
      repeat(fb:en.any,0) : 2
      or(or(fb:en.any,fb:en.const),repeat(fb:en.any,1)) : 1
      or(repeat(fb:en.any,0,),fb:en.const) : 1
      or(repeat(fb:en.any,1),fb:en.const) : 3
      or(fb:en.any,repeat(repeat(fb:en.any,1),0,)) : 1
      contain(or(or(fb:en.any,fb:en.const),fb:en.const)) : 1
      or(repeat(repeat(fb:en.any,1),0),fb:en.const) : 1
      contain(or(fb:en.any,or(fb:en.const,fb:en.const))) : 2
      or(or(fb:en.any,fb:en.const),fb:en.const) : 1
      contain(or(fb:en.const,repeat(fb:en.const,0))) : 1
      contain(or(fb:en.const,fb:en.const)) : 2
      or(contain(fb:en.const),fb:en.const) : 1
      or(fb:en.any,fb:en.any) : 4
      or(fb:en.any,contain(or(fb:en.const,fb:en.const))) : 2
      contain(or(repeat(fb:en.any,1),or(fb:en.const,fb:en.const))) : 2
      or(or(fb:en.const,fb:en.any),fb:en.const) : 1
      contain(or(fb:en.const,fb:en.any)) : 3
      or(fb:en.any,repeat(repeat(fb:en.any,1),0)) : 1
      or(contain(fb:en.const),repeat(fb:en.any,1)) : 3
      repeat(fb:en.any,1) : 1
      or(or(fb:en.const,contain(fb:en.const)),fb:en.any) : 1
      contain(or(fb:en.const,or(fb:en.any,fb:en.const))) : 1
      or(repeat(fb:en.any,1),or(contain(fb:en.const),fb:en.const)) : 1
      or(fb:en.any,or(fb:en.const,fb:en.const)) : 2
      repeat(repeat(fb:en.any,1),0,) : 1
      or(fb:en.any,repeat(fb:en.const,0)) : 1
      or(fb:en.any,or(repeat(fb:en.any,1),fb:en.const)) : 1
      or(repeat(fb:en.any,1),or(fb:en.const,fb:en.const)) : 2
      or(or(fb:en.const,fb:en.any),contain(fb:en.const)) : 1
      fb:en.any : 2
      or(or(fb:en.const,repeat(fb:en.any,1)),fb:en.any) : 1
      or(repeat(fb:en.any,1),fb:en.any) : 2
      contain(or(fb:en.const,repeat(fb:en.any,1))) : 3
      contain(or(or(fb:en.const,repeat(fb:en.any,1)),fb:en.const)) : 1
      or(or(repeat(fb:en.any,1),fb:en.const),fb:en.any) : 1
      contain(or(fb:en.any,fb:en.const)) : 3
      or(repeat(fb:en.any,0),fb:en.any) : 1
      or(fb:en.const,fb:en.const) : 2
      or(fb:en.const,repeat(fb:en.const,0)) : 1
      or(fb:en.any,or(fb:en.const,contain(fb:en.const))) : 1
      or(contain(fb:en.const),or(fb:en.any,fb:en.const)) : 1
      or(contain(or(fb:en.const,fb:en.const)),repeat(fb:en.any,1)) : 2
      or(fb:en.any,repeat(fb:en.any,1)) : 2
      or(fb:en.any,fb:en.const) : 4
      or(or(contain(fb:en.const),fb:en.const),fb:en.any) : 1
      contain(or(fb:en.const,or(repeat(fb:en.any,1),fb:en.const))) : 1
      or(or(fb:en.const,repeat(fb:en.any,1)),contain(fb:en.const)) : 1
      contain(fb:en.const) : 2
      contain(or(fb:en.const,or(fb:en.const,fb:en.any))) : 1
      or(fb:en.any,or(fb:en.const,fb:en.any)) : 2
      or(or(repeat(fb:en.any,1),fb:en.const),contain(fb:en.const)) : 1
      or(contain(fb:en.const),or(fb:en.const,repeat(fb:en.any,1))) : 1
      or(repeat(fb:en.any,0),contain(fb:en.const)) : 1
      contain(or(fb:en.const,or(fb:en.const,repeat(fb:en.any,1)))) : 1
      or(contain(fb:en.const),repeat(fb:en.any,0,)) : 1
      or(or(contain(fb:en.const),fb:en.const),repeat(fb:en.any,1)) : 1
      or(or(fb:en.const,fb:en.any),fb:en.any) : 2
      contain(or(repeat(fb:en.any,0),fb:en.const)) : 1
      or(fb:en.const,or(fb:en.const,fb:en.any)) : 1
      or(fb:en.any,contain(fb:en.const)) : 3
      or(repeat(fb:en.const,0),contain(fb:en.const)) : 1
      repeat(or(contain(fb:en.const),fb:en.const),0) : 1
      or(fb:en.const,or(fb:en.const,repeat(fb:en.any,1))) : 1
      or(repeat(repeat(fb:en.any,1),0,),contain(fb:en.const)) : 1
      or(repeat(fb:en.any,0,),contain(fb:en.const)) : 1
=======================================================
Test on utterance 60:
  Line 0: I want to write a regular expression using jQuery to validate input fields which will not allow special char at end and the string length should be in between 3 - 25.
    Top prediction: not(endwith(repeat(fb:en.any,3)))
    All 28 derivations and their counts: 
      repeat(not(fb:en.any),25) : 1
      not(repeat(fb:en.any,3)) : 1
      not(repeat(endwith(fb:en.any),3)) : 1
      not(fb:en.any) : 1
      repeat(not(endwith(fb:en.any)),3) : 1
      repeat(not(fb:en.any),3,25) : 1
      endwith(repeat(fb:en.any,25)) : 1
      repeat(endwith(fb:en.any),3,25) : 1
      repeat(endwith(fb:en.any),3) : 1
      not(endwith(repeat(fb:en.any,3,25))) : 1
      not(repeat(fb:en.any,25)) : 1
      not(endwith(fb:en.any)) : 1
      not(repeat(endwith(fb:en.any),25)) : 1
      endwith(repeat(fb:en.any,3,25)) : 1
      repeat(fb:en.any,3) : 1
      endwith(repeat(fb:en.any,3)) : 1
      repeat(not(endwith(fb:en.any)),3,25) : 1
      repeat(not(endwith(fb:en.any)),25) : 1
      not(repeat(endwith(fb:en.any),3,25)) : 1
      repeat(fb:en.any,25) : 1
      repeat(not(fb:en.any),3) : 1
      endwith(fb:en.any) : 1
      repeat(fb:en.any,3,25) : 1
      not(endwith(repeat(fb:en.any,25))) : 1
      fb:en.any : 1
      repeat(endwith(fb:en.any),25) : 1
      not(repeat(fb:en.any,3,25)) : 1
      not(endwith(repeat(fb:en.any,3))) : 1
=======================================================
Test on utterance 61:
  Line 0: write a regular expression for validating a organisation name which allows Alphanumeric as the starting characters and only special characters like <M0> , <M1> , <M2> and <M3>.
    Top prediction: and(repeat(and(fb:en.const,fb:en.sp),1,),fb:en.letnum)
derivSize == beamSize
    All 123 derivations and their counts: 
      and(fb:en.letnum,fb:en.sp) : 1
      and(fb:en.const,and(fb:en.let,fb:en.letnum)) : 1
      startwith(and(repeat(fb:en.any,1,),fb:en.let)) : 1
      startwith(and(repeat(fb:en.const,1,),fb:en.any)) : 3
      and(fb:en.letnum,repeat(and(fb:en.any,fb:en.const),1,)) : 1
      and(fb:en.const,and(repeat(fb:en.any,1,),fb:en.letnum)) : 1
      and(and(fb:en.letnum,fb:en.const),fb:en.const) : 3
      and(fb:en.letnum,fb:en.any) : 1
      fb:en.letnum : 1
      startwith(and(repeat(fb:en.sp,1,),fb:en.let)) : 1
      and(fb:en.letnum,repeat(and(fb:en.const,fb:en.let),1,)) : 1
      and(and(fb:en.letnum,fb:en.any),fb:en.const) : 1
      and(fb:en.const,and(fb:en.letnum,fb:en.const)) : 3
      and(fb:en.letnum,repeat(and(fb:en.const,fb:en.sp),1,)) : 1
      and(fb:en.letnum,and(fb:en.const,fb:en.any)) : 1
      startwith(and(repeat(fb:en.sp,1,),fb:en.any)) : 1
      and(fb:en.const,and(repeat(fb:en.const,1,),fb:en.letnum)) : 3
      and(fb:en.const,and(fb:en.const,fb:en.letnum)) : 3
      and(and(fb:en.letnum,repeat(fb:en.const,1,)),fb:en.const) : 3
      and(fb:en.const,fb:en.letnum) : 5
      and(and(repeat(fb:en.sp,1,),fb:en.letnum),fb:en.const) : 1
      and(and(fb:en.letnum,fb:en.let),fb:en.const) : 1
      and(fb:en.letnum,repeat(fb:en.const,1,)) : 4
      startwith(and(and(repeat(fb:en.const,1,),fb:en.const),fb:en.let)) : 3
      and(fb:en.const,and(fb:en.letnum,repeat(fb:en.any,1,))) : 1
      startwith(and(repeat(fb:en.const,1,),fb:en.let)) : 4
      startwith(and(and(fb:en.const,repeat(fb:en.let,1,)),fb:en.let)) : 1
      and(and(repeat(fb:en.let,1,),fb:en.const),fb:en.letnum) : 1
      and(and(fb:en.letnum,fb:en.sp),fb:en.const) : 1
      startwith(and(and(fb:en.const,repeat(fb:en.sp,1,)),fb:en.let)) : 1
      and(repeat(and(fb:en.const,fb:en.sp),1,),fb:en.letnum) : 1
      and(and(fb:en.const,repeat(fb:en.const,1,)),fb:en.letnum) : 3
      and(fb:en.const,and(fb:en.letnum,repeat(fb:en.let,1,))) : 1
      and(and(repeat(fb:en.sp,1,),fb:en.const),fb:en.letnum) : 1
      and(and(fb:en.let,fb:en.letnum),fb:en.const) : 1
      and(and(repeat(fb:en.const,1,),fb:en.const),fb:en.letnum) : 3
      startwith(and(and(repeat(fb:en.any,1,),fb:en.const),fb:en.let)) : 1
      and(repeat(and(fb:en.let,fb:en.const),1,),fb:en.letnum) : 1
      and(and(fb:en.any,fb:en.const),fb:en.letnum) : 1
      startwith(and(repeat(and(fb:en.const,fb:en.const),1,),fb:en.let)) : 6
      and(fb:en.letnum,and(repeat(fb:en.sp,1,),fb:en.const)) : 1
      and(and(fb:en.const,fb:en.sp),fb:en.letnum) : 1
      and(fb:en.letnum,repeat(and(fb:en.const,fb:en.const),1,)) : 6
      and(repeat(and(fb:en.const,fb:en.const),1,),fb:en.letnum) : 6
      and(fb:en.letnum,and(fb:en.const,fb:en.let)) : 1
      and(and(fb:en.const,repeat(fb:en.any,1,)),fb:en.letnum) : 1
      and(and(fb:en.any,fb:en.letnum),fb:en.const) : 1
      and(and(repeat(fb:en.any,1,),fb:en.const),fb:en.letnum) : 1
      and(fb:en.letnum,and(fb:en.const,fb:en.sp)) : 1
      and(fb:en.letnum,and(repeat(fb:en.const,1,),fb:en.const)) : 3
      and(and(fb:en.const,fb:en.let),fb:en.letnum) : 1
      and(and(fb:en.let,fb:en.const),fb:en.letnum) : 1
      and(fb:en.letnum,repeat(and(fb:en.let,fb:en.const),1,)) : 1
      startwith(and(repeat(and(fb:en.let,fb:en.const),1,),fb:en.let)) : 1
      and(fb:en.sp,fb:en.letnum) : 1
      and(fb:en.letnum,and(fb:en.const,repeat(fb:en.any,1,))) : 1
      and(fb:en.const,and(fb:en.letnum,repeat(fb:en.sp,1,))) : 1
      and(fb:en.letnum,and(repeat(fb:en.any,1,),fb:en.const)) : 1
      startwith(and(repeat(and(fb:en.const,fb:en.sp),1,),fb:en.any)) : 1
      startwith(and(repeat(and(fb:en.let,fb:en.const),1,),fb:en.any)) : 1
      startwith(and(repeat(and(fb:en.const,fb:en.sp),1,),fb:en.let)) : 1
      and(fb:en.letnum,and(repeat(fb:en.let,1,),fb:en.const)) : 1
      and(repeat(and(fb:en.const,fb:en.any),1,),fb:en.letnum) : 1
      and(fb:en.const,and(fb:en.letnum,fb:en.any)) : 1
      startwith(and(repeat(and(fb:en.sp,fb:en.const),1,),fb:en.let)) : 1
      startwith(and(repeat(and(fb:en.const,fb:en.const),1,),fb:en.any)) : 6
      and(and(fb:en.const,repeat(fb:en.sp,1,)),fb:en.letnum) : 1
      and(and(repeat(fb:en.const,1,),fb:en.letnum),fb:en.const) : 3
      and(fb:en.const,and(fb:en.any,fb:en.letnum)) : 1
      startwith(and(repeat(fb:en.let,1,),fb:en.any)) : 1
      startwith(and(and(fb:en.const,repeat(fb:en.const,1,)),fb:en.let)) : 3
      and(and(repeat(fb:en.let,1,),fb:en.letnum),fb:en.const) : 1
      and(fb:en.letnum,repeat(and(fb:en.const,fb:en.any),1,)) : 1
      and(fb:en.letnum,repeat(fb:en.sp,1,)) : 1
      and(fb:en.letnum,and(fb:en.const,repeat(fb:en.const,1,))) : 3
      startwith(and(repeat(and(fb:en.const,fb:en.let),1,),fb:en.let)) : 1
      and(and(fb:en.const,fb:en.any),fb:en.letnum) : 1
      and(fb:en.letnum,fb:en.let) : 1
      startwith(and(repeat(and(fb:en.sp,fb:en.const),1,),fb:en.any)) : 1
      and(repeat(fb:en.any,1,),fb:en.letnum) : 1
      and(and(repeat(fb:en.any,1,),fb:en.letnum),fb:en.const) : 1
      and(and(fb:en.const,fb:en.const),fb:en.letnum) : 6
      startwith(and(repeat(and(fb:en.any,fb:en.const),1,),fb:en.any)) : 1
      and(fb:en.letnum,and(fb:en.const,repeat(fb:en.sp,1,))) : 1
      and(fb:en.letnum,and(fb:en.sp,fb:en.const)) : 1
      and(repeat(and(fb:en.sp,fb:en.const),1,),fb:en.letnum) : 1
      and(fb:en.const,and(fb:en.sp,fb:en.letnum)) : 1
      startwith(and(repeat(fb:en.let,1,),fb:en.let)) : 1
      and(fb:en.letnum,and(fb:en.const,fb:en.const)) : 6
      and(repeat(and(fb:en.const,fb:en.let),1,),fb:en.letnum) : 1
      and(and(fb:en.sp,fb:en.letnum),fb:en.const) : 1
      and(repeat(fb:en.const,1,),fb:en.letnum) : 4
      and(fb:en.letnum,and(fb:en.let,fb:en.const)) : 1
      startwith(and(repeat(and(fb:en.any,fb:en.const),1,),fb:en.let)) : 1
      and(fb:en.letnum,repeat(fb:en.let,1,)) : 1
      and(and(fb:en.letnum,repeat(fb:en.let,1,)),fb:en.const) : 1
      and(repeat(fb:en.let,1,),fb:en.letnum) : 1
      and(fb:en.letnum,and(fb:en.const,repeat(fb:en.let,1,))) : 1
      and(fb:en.let,fb:en.letnum) : 1
      and(repeat(fb:en.sp,1,),fb:en.letnum) : 1
      and(fb:en.const,and(repeat(fb:en.sp,1,),fb:en.letnum)) : 1
      startwith(and(repeat(and(fb:en.const,fb:en.let),1,),fb:en.any)) : 1
      startwith(and(and(repeat(fb:en.sp,1,),fb:en.const),fb:en.let)) : 1
      and(fb:en.const,and(fb:en.letnum,repeat(fb:en.const,1,))) : 3
      startwith(and(repeat(fb:en.any,1,),fb:en.any)) : 1
      and(and(fb:en.sp,fb:en.const),fb:en.letnum) : 1
      and(repeat(and(fb:en.any,fb:en.const),1,),fb:en.letnum) : 1
      and(fb:en.letnum,repeat(fb:en.any,1,)) : 1
      and(and(fb:en.const,fb:en.letnum),fb:en.const) : 3
      startwith(and(and(repeat(fb:en.let,1,),fb:en.const),fb:en.let)) : 1
      and(and(fb:en.const,repeat(fb:en.let,1,)),fb:en.letnum) : 1
      and(fb:en.const,and(fb:en.letnum,fb:en.sp)) : 1
      and(and(fb:en.letnum,repeat(fb:en.any,1,)),fb:en.const) : 1
      startwith(and(and(fb:en.const,repeat(fb:en.any,1,)),fb:en.let)) : 1
      and(fb:en.letnum,repeat(and(fb:en.sp,fb:en.const),1,)) : 1
      startwith(and(repeat(and(fb:en.const,fb:en.any),1,),fb:en.let)) : 1
      and(and(fb:en.letnum,repeat(fb:en.sp,1,)),fb:en.const) : 1
      and(fb:en.letnum,fb:en.const) : 5
      startwith(and(repeat(and(fb:en.const,fb:en.any),1,),fb:en.any)) : 1
      and(fb:en.const,and(fb:en.letnum,fb:en.let)) : 1
      and(fb:en.any,fb:en.letnum) : 1
      and(fb:en.const,and(repeat(fb:en.let,1,),fb:en.letnum)) : 1
      and(fb:en.letnum,and(fb:en.any,fb:en.const)) : 1
=======================================================
Test on utterance 62:
  Line 0: validate a set of double number with <M0> delimeted
    Top prediction: fb:en.num
    All 3 derivations and their counts: 
      fb:en.num : 1
      fb:en.const : 1
      contain(fb:en.const) : 1
=======================================================
Test on utterance 63:
  Line 0: I need regular expression for validating version number
    Top prediction: fb:en.num
    All 1 derivations and their counts: 
      fb:en.num : 1
=======================================================
Test on utterance 64:
  Line 0: What is the regex that matches 6 characters, first is a letter, others are numbers
    Top prediction: repeat(fb:en.let,6)
    All 12 derivations and their counts: 
      repeat(fb:en.num,6,1) : 1
      fb:en.num : 1
      repeat(repeat(fb:en.let,1),6) : 1
      repeat(fb:en.let,1) : 1
      repeat(fb:en.num,1) : 1
      repeat(fb:en.let,6) : 2
      repeat(repeat(fb:en.num,1),6) : 1
      repeat(fb:en.let,6,1) : 1
      fb:en.let : 2
      repeat(fb:en.num,6) : 1
      fb:en.any : 1
      repeat(fb:en.any,6) : 1
=======================================================
Test on utterance 65:
  Line 0: I'm trying to make a regular expression that validates positive natural numbers from three digits to 9 digits and separates the thousand unit and the million unit with a <M0>
    Top prediction: and(sep(fb:en.const),fb:en.num)
derivSize == beamSize
    All 166 derivations and their counts: 
      repeat(and(contain(fb:en.const),fb:en.num),3) : 2
      repeat(repeat(sep(fb:en.const),9),3) : 1
      repeat(and(repeat(fb:en.const,1000000),fb:en.num),3,9) : 2
      and(fb:en.const,sep(fb:en.num)) : 1
      repeat(repeat(and(contain(fb:en.const),sep(fb:en.num)),9),3) : 1
      repeat(sep(fb:en.num),3,9) : 1
      repeat(and(repeat(contain(fb:en.const),1000),fb:en.num),3,9) : 1
      and(sep(fb:en.const),fb:en.num) : 1
      and(sep(fb:en.num),contain(fb:en.const)) : 1
      repeat(and(fb:en.num,repeat(fb:en.const,1000,1000000)),3) : 1
      repeat(and(repeat(fb:en.num,9),repeat(repeat(fb:en.const,1000000),1000)),3) : 1
      repeat(and(contain(fb:en.const),repeat(fb:en.num,9)),3) : 2
      repeat(and(repeat(fb:en.const,1000,1000000),fb:en.num),3,9) : 1
      repeat(and(fb:en.const,repeat(fb:en.num,9)),3) : 2
      repeat(repeat(and(repeat(repeat(fb:en.const,1000000),1000),fb:en.num),9),3) : 1
      repeat(and(repeat(fb:en.num,9),repeat(repeat(contain(fb:en.const),1000000),1000)),3) : 1
      repeat(and(repeat(fb:en.const,1000),fb:en.num),3) : 1
      repeat(repeat(repeat(fb:en.const,1000),9),3) : 1
      repeat(and(fb:en.num,fb:en.const),3) : 2
      repeat(and(repeat(fb:en.const,1000000),sep(fb:en.num)),3,9) : 1
      repeat(and(sep(fb:en.num),repeat(fb:en.const,1000000)),3) : 1
      repeat(and(fb:en.num,repeat(fb:en.const,1000,1000000)),3,9) : 1
      repeat(and(repeat(fb:en.const,1000000),repeat(fb:en.num,9)),3) : 2
      repeat(and(repeat(fb:en.const,1000),fb:en.num),3,9) : 1
      repeat(and(contain(fb:en.const),sep(fb:en.num)),3) : 1
      repeat(and(repeat(fb:en.const,1000,1000000),fb:en.num),3) : 1
      repeat(repeat(and(fb:en.num,repeat(repeat(fb:en.const,1000000),1000)),9),3) : 1
      fb:en.num : 1
      repeat(and(repeat(fb:en.const,1000),repeat(fb:en.num,9)),3) : 1
      repeat(and(repeat(fb:en.num,9),repeat(contain(fb:en.const),1000,1000000)),3) : 1
      repeat(and(fb:en.num,sep(fb:en.const)),3) : 1
      repeat(and(fb:en.num,repeat(contain(fb:en.const),1000)),3) : 1
      repeat(repeat(and(repeat(repeat(contain(fb:en.const),1000000),1000),fb:en.num),9),3) : 1
      and(fb:en.num,fb:en.const) : 2
      repeat(repeat(repeat(contain(fb:en.const),1000000),9,1000),3) : 1
      repeat(and(repeat(repeat(contain(fb:en.const),1000000),1000),fb:en.num),3,9) : 1
      repeat(repeat(fb:en.const,9,1000),3) : 1
      repeat(and(repeat(contain(fb:en.const),1000,1000000),repeat(fb:en.num,9)),3) : 1
      repeat(and(fb:en.num,repeat(repeat(fb:en.const,1000000),1000)),3,9) : 1
      repeat(repeat(fb:en.num,9),3) : 1
      repeat(repeat(contain(fb:en.const),9,1000000),3) : 1
      and(repeat(fb:en.const,1000,1000000),fb:en.num) : 1
      repeat(and(repeat(contain(fb:en.const),1000000),fb:en.num),3) : 2
      repeat(and(repeat(repeat(contain(fb:en.const),1000000),1000),fb:en.num),3) : 1
      sep(fb:en.num) : 1
      and(repeat(contain(fb:en.const),1000),fb:en.num) : 1
      repeat(and(repeat(repeat(contain(fb:en.const),1000000),1000),repeat(fb:en.num,9)),3) : 1
      repeat(and(repeat(fb:en.const,1000000),sep(fb:en.num)),3) : 1
      repeat(and(fb:en.num,repeat(contain(fb:en.const),1000000)),3) : 2
      repeat(and(fb:en.num,repeat(repeat(contain(fb:en.const),1000000),1000)),3) : 1
      repeat(repeat(and(fb:en.num,repeat(contain(fb:en.const),1000000)),9),3) : 2
      repeat(and(fb:en.num,repeat(fb:en.const,1000)),3) : 1
      repeat(and(repeat(contain(fb:en.const),1000),fb:en.num),3) : 1
      repeat(and(repeat(fb:en.num,9),repeat(contain(fb:en.const),1000)),3) : 1
      repeat(repeat(fb:en.const,9,1000000),3) : 1
      repeat(and(repeat(contain(fb:en.const),1000,1000000),fb:en.num),3) : 1
      and(repeat(contain(fb:en.const),1000,1000000),fb:en.num) : 1
      repeat(and(repeat(repeat(fb:en.const,1000000),1000),fb:en.num),3) : 1
      repeat(and(repeat(fb:en.const,1000000),repeat(sep(fb:en.num),9)),3) : 1
      repeat(repeat(and(fb:en.const,sep(fb:en.num)),9),3) : 1
      repeat(repeat(repeat(fb:en.const,1000000),9,1000),3) : 1
      repeat(repeat(and(fb:en.num,fb:en.const),9),3) : 2
      and(fb:en.num,contain(fb:en.const)) : 2
      repeat(and(sep(fb:en.num),repeat(contain(fb:en.const),1000000)),3,9) : 1
      repeat(and(sep(fb:en.const),repeat(fb:en.num,9)),3) : 1
      repeat(repeat(and(fb:en.num,repeat(contain(fb:en.const),1000,1000000)),9),3) : 1
      and(fb:en.num,repeat(repeat(fb:en.const,1000000),1000)) : 1
      repeat(repeat(and(repeat(contain(fb:en.const),1000000),sep(fb:en.num)),9),3) : 1
      repeat(and(sep(fb:en.num),repeat(fb:en.const,1000000)),3,9) : 1
      repeat(and(fb:en.num,repeat(fb:en.const,1000000)),3,9) : 1
      repeat(repeat(repeat(contain(fb:en.const),1000000),9),3) : 1
      repeat(repeat(repeat(repeat(fb:en.const,1000000),1000),9),3) : 1
      repeat(repeat(and(contain(fb:en.const),fb:en.num),9),3) : 2
      repeat(and(repeat(sep(fb:en.num),9),repeat(fb:en.const,1000000)),3) : 1
      repeat(and(repeat(contain(fb:en.const),1000000),sep(fb:en.num)),3) : 1
      repeat(and(repeat(sep(fb:en.num),9),repeat(contain(fb:en.const),1000000)),3) : 1
      and(repeat(fb:en.const,1000),fb:en.num) : 1
      and(repeat(contain(fb:en.const),1000000),sep(fb:en.num)) : 1
      and(fb:en.num,repeat(contain(fb:en.const),1000,1000000)) : 1
      repeat(repeat(and(sep(fb:en.num),repeat(fb:en.const,1000000)),9),3) : 1
      repeat(and(repeat(sep(fb:en.num),9),fb:en.const),3) : 1
      and(fb:en.num,repeat(fb:en.const,1000)) : 1
      repeat(fb:en.num,3) : 1
      repeat(repeat(and(sep(fb:en.num),fb:en.const),9),3) : 1
      and(repeat(repeat(fb:en.const,1000000),1000),fb:en.num) : 1
      repeat(and(repeat(contain(fb:en.const),1000000),fb:en.num),3,9) : 2
      repeat(and(repeat(contain(fb:en.const),1000),repeat(fb:en.num,9)),3) : 1
      repeat(repeat(fb:en.const,9),3) : 1
      and(repeat(fb:en.const,1000000),fb:en.num) : 2
      repeat(repeat(and(fb:en.num,repeat(fb:en.const,1000,1000000)),9),3) : 1
      repeat(repeat(repeat(fb:en.const,1000000),9),3) : 1
      repeat(and(repeat(fb:en.num,9),fb:en.const),3) : 2
      and(fb:en.num,repeat(contain(fb:en.const),1000000)) : 2
      repeat(sep(fb:en.num),3) : 1
      and(contain(fb:en.const),fb:en.num) : 2
      repeat(repeat(and(fb:en.num,repeat(contain(fb:en.const),1000)),9),3) : 1
      repeat(repeat(and(sep(fb:en.num),contain(fb:en.const)),9),3) : 1
      repeat(and(repeat(fb:en.num,9),repeat(contain(fb:en.const),1000000)),3) : 2
      repeat(repeat(repeat(contain(fb:en.const),1000,1000000),9),3) : 1
      repeat(repeat(contain(fb:en.const),9),3) : 1
      repeat(repeat(repeat(contain(fb:en.const),1000),9),3) : 1
      repeat(and(fb:en.num,repeat(fb:en.const,1000)),3,9) : 1
      repeat(repeat(repeat(repeat(contain(fb:en.const),1000000),1000),9),3) : 1
      repeat(and(fb:en.num,contain(fb:en.const)),3) : 2
      repeat(repeat(and(fb:en.const,fb:en.num),9),3) : 2
      repeat(and(repeat(repeat(fb:en.const,1000000),1000),repeat(fb:en.num,9)),3) : 1
      repeat(repeat(and(repeat(fb:en.const,1000,1000000),fb:en.num),9),3) : 1
      repeat(repeat(and(sep(fb:en.num),repeat(contain(fb:en.const),1000000)),9),3) : 1
      repeat(repeat(and(repeat(fb:en.const,1000000),sep(fb:en.num)),9),3) : 1
      and(fb:en.const,fb:en.num) : 2
      repeat(and(sep(fb:en.num),fb:en.const),3) : 1
      repeat(and(sep(fb:en.const),fb:en.num),3) : 1
      repeat(and(repeat(fb:en.const,1000,1000000),repeat(fb:en.num,9)),3) : 1
      repeat(and(fb:en.num,repeat(fb:en.const,1000000)),3) : 2
      repeat(repeat(repeat(fb:en.const,1000,1000000),9),3) : 1
      repeat(and(repeat(contain(fb:en.const),1000000),sep(fb:en.num)),3,9) : 1
      repeat(and(fb:en.const,fb:en.num),3) : 2
      repeat(repeat(and(fb:en.num,repeat(fb:en.const,1000)),9),3) : 1
      repeat(repeat(and(repeat(fb:en.const,1000),fb:en.num),9),3) : 1
      repeat(and(fb:en.num,repeat(contain(fb:en.const),1000,1000000)),3,9) : 1
      and(fb:en.num,sep(fb:en.const)) : 1
      repeat(repeat(and(repeat(contain(fb:en.const),1000),fb:en.num),9),3) : 1
      repeat(and(sep(fb:en.num),repeat(contain(fb:en.const),1000000)),3) : 1
      repeat(and(repeat(contain(fb:en.const),1000,1000000),fb:en.num),3,9) : 1
      repeat(and(sep(fb:en.num),contain(fb:en.const)),3) : 1
      repeat(and(repeat(fb:en.num,9),contain(fb:en.const)),3) : 2
      repeat(repeat(and(fb:en.num,repeat(fb:en.const,1000000)),9),3) : 2
      repeat(and(fb:en.num,sep(fb:en.const)),3,9) : 1
      and(fb:en.num,repeat(contain(fb:en.const),1000)) : 1
      repeat(and(fb:en.num,repeat(repeat(fb:en.const,1000000),1000)),3) : 1
      repeat(repeat(and(fb:en.num,repeat(repeat(contain(fb:en.const),1000000),1000)),9),3) : 1
      repeat(and(repeat(repeat(fb:en.const,1000000),1000),fb:en.num),3,9) : 1
      and(fb:en.num,repeat(fb:en.const,1000000)) : 2
      repeat(and(fb:en.const,repeat(sep(fb:en.num),9)),3) : 1
      and(sep(fb:en.num),repeat(fb:en.const,1000000)) : 1
      repeat(and(fb:en.num,repeat(repeat(contain(fb:en.const),1000000),1000)),3,9) : 1
      repeat(and(fb:en.const,sep(fb:en.num)),3) : 1
      repeat(repeat(contain(fb:en.const),9,1000),3) : 1
      repeat(and(fb:en.num,repeat(contain(fb:en.const),1000,1000000)),3) : 1
      repeat(and(repeat(fb:en.const,1000000),fb:en.num),3) : 2
      repeat(and(repeat(contain(fb:en.const),1000000),repeat(sep(fb:en.num),9)),3) : 1
      repeat(repeat(and(repeat(fb:en.const,1000000),fb:en.num),9),3) : 2
      and(sep(fb:en.num),repeat(contain(fb:en.const),1000000)) : 1
      repeat(and(contain(fb:en.const),repeat(sep(fb:en.num),9)),3) : 1
      repeat(repeat(and(repeat(contain(fb:en.const),1000000),fb:en.num),9),3) : 2
      repeat(and(repeat(fb:en.num,9),sep(fb:en.const)),3) : 1
      repeat(and(sep(fb:en.const),fb:en.num),3,9) : 1
      and(contain(fb:en.const),sep(fb:en.num)) : 1
      repeat(repeat(and(fb:en.num,sep(fb:en.const)),9),3) : 1
      repeat(and(repeat(sep(fb:en.num),9),contain(fb:en.const)),3) : 1
      repeat(repeat(and(sep(fb:en.const),fb:en.num),9),3) : 1
      and(repeat(contain(fb:en.const),1000000),fb:en.num) : 2
      and(fb:en.num,repeat(repeat(contain(fb:en.const),1000000),1000)) : 1
      and(repeat(fb:en.const,1000000),sep(fb:en.num)) : 1
      repeat(repeat(and(repeat(contain(fb:en.const),1000,1000000),fb:en.num),9),3) : 1
      and(repeat(repeat(contain(fb:en.const),1000000),1000),fb:en.num) : 1
      repeat(and(repeat(contain(fb:en.const),1000000),repeat(fb:en.num,9)),3) : 2
      repeat(and(fb:en.num,repeat(contain(fb:en.const),1000000)),3,9) : 1
      repeat(and(repeat(fb:en.num,9),repeat(fb:en.const,1000000)),3) : 2
      and(sep(fb:en.num),fb:en.const) : 1
      and(fb:en.num,repeat(fb:en.const,1000,1000000)) : 1
      repeat(and(repeat(fb:en.num,9),repeat(fb:en.const,1000)),3) : 1
      repeat(and(fb:en.num,repeat(contain(fb:en.const),1000)),3,9) : 1
      repeat(repeat(and(fb:en.num,contain(fb:en.const)),9),3) : 2
      repeat(and(repeat(fb:en.num,9),repeat(fb:en.const,1000,1000000)),3) : 1
      repeat(repeat(sep(fb:en.num),9),3) : 1
=======================================================
Test on utterance 66:
  Line 0: First Name and Last Name Only with only 2 words with only 1 <M0>.
    Top prediction: repeat(contain(repeat(repeat(fb:en.any,2),1,)),1,)
derivSize == beamSize
    All 114 derivations and their counts: 
      contain(contain(fb:en.const)) : 1
      contain(repeat(repeat(repeat(fb:en.const,1,),2),1,)) : 1
      repeat(contain(repeat(fb:en.const,2,1)),1,) : 1
      repeat(contain(repeat(contain(fb:en.const),1,)),1,) : 1
      repeat(repeat(repeat(fb:en.const,1),1,),2) : 1
      contain(repeat(repeat(fb:en.const,2,1),1,)) : 1
      repeat(repeat(repeat(fb:en.const,2),1,),1,) : 1
      repeat(contain(repeat(fb:en.const,2)),1,) : 2
      repeat(repeat(fb:en.const,1),1,) : 3
      contain(repeat(contain(fb:en.const),1,)) : 1
      contain(contain(repeat(fb:en.const,1,))) : 1
      repeat(contain(repeat(fb:en.const,1,)),1,) : 3
      contain(repeat(fb:en.any,1,)) : 1
      repeat(contain(repeat(repeat(fb:en.const,1),1,)),2) : 1
      repeat(fb:en.any,1,) : 2
      repeat(repeat(contain(fb:en.const),2),1,) : 3
      repeat(repeat(fb:en.const,1,),1,) : 2
      contain(repeat(repeat(repeat(fb:en.const,1),2),1,)) : 2
      repeat(contain(repeat(repeat(repeat(fb:en.const,1),2),1,)),1,) : 2
      repeat(contain(repeat(repeat(contain(fb:en.const),2),1,)),1,) : 1
      contain(repeat(contain(repeat(fb:en.const,1)),1,)) : 2
      repeat(repeat(fb:en.const,1,),2) : 1
      contain(repeat(fb:en.const,1,)) : 2
      repeat(contain(repeat(repeat(repeat(fb:en.const,1,),2),1,)),1,) : 1
      repeat(contain(repeat(repeat(repeat(repeat(fb:en.const,1),1,),2),1,)),1,) : 1
      repeat(contain(repeat(contain(repeat(fb:en.const,1,)),2)),1,) : 2
      repeat(repeat(repeat(fb:en.const,1,),1,),1,) : 1
      repeat(repeat(repeat(fb:en.const,1),1,),1,) : 3
      repeat(contain(repeat(contain(repeat(fb:en.const,1)),2)),1,) : 4
      contain(repeat(repeat(fb:en.const,2),1,)) : 1
      repeat(repeat(contain(repeat(fb:en.const,1,)),1,),1,) : 1
      repeat(repeat(repeat(repeat(fb:en.const,1),1,),1,),1,) : 1
      repeat(repeat(repeat(repeat(fb:en.const,1),2),1,),1,) : 2
      repeat(repeat(repeat(contain(repeat(repeat(fb:en.const,1),1,)),2),1,),1,) : 1
      repeat(contain(repeat(repeat(fb:en.any,2),1,)),1,) : 1
      repeat(repeat(fb:en.const,1),2) : 2
      repeat(fb:en.any,2) : 2
      repeat(repeat(contain(repeat(repeat(fb:en.const,1),1,)),2),1,) : 3
      repeat(repeat(contain(repeat(fb:en.const,1)),2),1,) : 6
      repeat(contain(repeat(contain(repeat(fb:en.const,1)),1,)),1,) : 2
      repeat(repeat(fb:en.any,2),1,) : 3
      contain(repeat(fb:en.const,1)) : 3
      contain(fb:en.any) : 1
      repeat(contain(repeat(fb:en.any,1,)),1,) : 1
      repeat(contain(repeat(repeat(repeat(fb:en.const,1),1,),1,)),1,) : 1
      repeat(fb:en.const,1,) : 1
      repeat(contain(repeat(repeat(fb:en.const,1),1,)),1,) : 4
      repeat(repeat(repeat(contain(fb:en.const),2),1,),1,) : 1
      repeat(repeat(repeat(repeat(fb:en.const,1),1,),2),1,) : 3
      repeat(repeat(contain(fb:en.const),1,),1,) : 1
      repeat(repeat(fb:en.const,2),1,) : 3
      repeat(repeat(repeat(contain(repeat(fb:en.const,1,)),2),1,),1,) : 1
      contain(repeat(repeat(repeat(repeat(fb:en.const,1),1,),2),1,)) : 1
      contain(contain(repeat(fb:en.const,1))) : 2
      repeat(contain(repeat(repeat(contain(repeat(fb:en.const,1,)),2),1,)),1,) : 1
      repeat(contain(contain(fb:en.const)),1,) : 1
      repeat(repeat(contain(repeat(repeat(fb:en.const,1),1,)),1,),1,) : 1
      repeat(repeat(contain(repeat(fb:en.const,1,)),2),1,) : 3
      contain(repeat(repeat(fb:en.any,2),1,)) : 1
      contain(repeat(repeat(contain(fb:en.const),2),1,)) : 1
      repeat(contain(fb:en.any),1,) : 1
      contain(repeat(contain(fb:en.const),2)) : 2
      contain(repeat(contain(repeat(repeat(fb:en.const,1),1,)),1,)) : 1
      repeat(repeat(repeat(repeat(repeat(fb:en.const,1),1,),2),1,),1,) : 1
      contain(repeat(fb:en.const,2)) : 2
      repeat(repeat(repeat(fb:en.const,2,1),1,),1,) : 1
      contain(repeat(contain(repeat(fb:en.const,1,)),1,)) : 1
      repeat(contain(repeat(repeat(contain(repeat(repeat(fb:en.const,1),1,)),2),1,)),1,) : 1
      contain(repeat(repeat(fb:en.const,1,),2)) : 2
      repeat(contain(fb:en.const),1,) : 2
      repeat(contain(fb:en.const),2) : 1
      contain(repeat(repeat(fb:en.const,1),1,)) : 3
      repeat(contain(repeat(contain(repeat(repeat(fb:en.const,1),1,)),1,)),1,) : 1
      contain(repeat(contain(repeat(fb:en.const,1,)),2)) : 2
      contain(repeat(repeat(fb:en.const,1),2)) : 4
      contain(repeat(fb:en.const,2,1)) : 1
      repeat(repeat(repeat(contain(repeat(fb:en.const,1)),2),1,),1,) : 2
      repeat(contain(repeat(contain(repeat(repeat(fb:en.const,1),1,)),2)),1,) : 2
      repeat(repeat(repeat(fb:en.any,2),1,),1,) : 1
      repeat(repeat(contain(repeat(fb:en.const,1)),1,),1,) : 2
      repeat(contain(repeat(fb:en.const,1)),1,) : 5
      repeat(repeat(fb:en.const,2,1),1,) : 2
      repeat(contain(repeat(repeat(fb:en.const,1),2)),1,) : 4
      contain(repeat(repeat(repeat(fb:en.const,1),1,),1,)) : 1
      repeat(contain(contain(repeat(fb:en.const,1,))),1,) : 1
      repeat(contain(repeat(repeat(repeat(fb:en.const,1),1,),2)),1,) : 2
      contain(repeat(fb:en.any,2)) : 2
      contain(contain(repeat(repeat(fb:en.const,1),1,))) : 1
      repeat(repeat(repeat(repeat(fb:en.const,1,),2),1,),1,) : 1
      repeat(fb:en.const,1) : 1
      repeat(contain(repeat(repeat(fb:en.const,1,),1,)),1,) : 1
      repeat(contain(contain(repeat(repeat(fb:en.const,1),1,))),1,) : 1
      contain(repeat(contain(repeat(fb:en.const,1)),2)) : 4
      contain(repeat(repeat(contain(repeat(fb:en.const,1)),2),1,)) : 2
      repeat(contain(repeat(repeat(fb:en.const,2,1),1,)),1,) : 1
      repeat(contain(repeat(contain(fb:en.const),2)),1,) : 2
      contain(repeat(repeat(fb:en.const,1,),1,)) : 1
      repeat(repeat(fb:en.any,1,),1,) : 1
      repeat(repeat(repeat(fb:en.const,1),2),1,) : 6
      repeat(contain(repeat(repeat(contain(repeat(fb:en.const,1)),2),1,)),1,) : 2
      contain(fb:en.const) : 1
      repeat(contain(repeat(contain(repeat(fb:en.const,1,)),1,)),1,) : 1
      repeat(repeat(repeat(fb:en.const,1,),2),1,) : 3
      repeat(contain(repeat(repeat(fb:en.const,1,),2)),1,) : 2
      repeat(contain(repeat(fb:en.const,1)),2) : 2
      repeat(fb:en.const,2) : 1
      contain(repeat(repeat(contain(repeat(fb:en.const,1,)),2),1,)) : 1
      repeat(contain(repeat(fb:en.any,2)),1,) : 2
      repeat(contain(repeat(fb:en.const,1,)),2) : 1
      contain(repeat(repeat(contain(repeat(repeat(fb:en.const,1),1,)),2),1,)) : 1
      repeat(contain(contain(repeat(fb:en.const,1))),1,) : 2
      contain(repeat(contain(repeat(repeat(fb:en.const,1),1,)),2)) : 2
      contain(repeat(repeat(repeat(fb:en.const,1),1,),2)) : 2
      repeat(contain(repeat(repeat(fb:en.const,2),1,)),1,) : 1
=======================================================
Test on utterance 67:
  Line 0: the expression is a alphanumeric one(where the alphabets are optional) where the alphabets can be only <M0> | <M1> | <M2> | <M3> | <M4> | <M5> | <M6> | <M7> | <M8> | <M9> and can appear only after the numerals. 
    Top prediction: optional(fb:en.letnum)
derivSize == beamSize
    All 52 derivations and their counts: 
      and(fb:en.num,fb:en.letnum) : 1
      followedby(fb:en.const,optional(fb:en.letnum)) : 10
      and(fb:en.letnum,repeat(fb:en.num,1,)) : 1
      repeat(and(repeat(fb:en.num,1,),optional(fb:en.let)),1) : 1
      and(optional(fb:en.letnum),repeat(fb:en.num,1,)) : 1
      repeat(followedby(optional(repeat(fb:en.const,1,)),fb:en.let),1) : 10
      fb:en.letnum : 1
      repeat(followedby(fb:en.const,fb:en.let),1) : 10
      repeat(optional(fb:en.let),1) : 1
      followedby(fb:en.let,fb:en.letnum) : 2
      repeat(followedby(fb:en.num,optional(fb:en.let)),1) : 1
      optional(fb:en.letnum) : 1
      followedby(fb:en.num,optional(fb:en.letnum)) : 1
      and(fb:en.letnum,fb:en.num) : 1
      followedby(repeat(optional(fb:en.let),1),fb:en.letnum) : 2
      repeat(optional(and(fb:en.let,repeat(fb:en.num,1,))),1) : 1
      repeat(and(optional(fb:en.let),repeat(fb:en.num,1,)),1) : 1
      repeat(followedby(repeat(fb:en.const,1,),optional(fb:en.let)),1) : 10
      followedby(repeat(optional(repeat(fb:en.const,1,)),1),fb:en.letnum) : 10
      repeat(followedby(fb:en.const,optional(fb:en.let)),1) : 10
      followedby(optional(repeat(fb:en.const,1,)),fb:en.letnum) : 10
      followedby(repeat(fb:en.const,1),fb:en.letnum) : 10
      followedby(repeat(fb:en.let,1),fb:en.letnum) : 2
      repeat(followedby(fb:en.let,fb:en.let),1) : 1
      repeat(optional(and(repeat(fb:en.num,1,),fb:en.let)),1) : 1
      repeat(followedby(fb:en.num,fb:en.let),1) : 1
      and(repeat(fb:en.num,1,),fb:en.letnum) : 1
      followedby(optional(fb:en.let),fb:en.letnum) : 2
      followedby(repeat(fb:en.const,1,),optional(fb:en.letnum)) : 10
      optional(repeat(fb:en.let,1)) : 1
      repeat(followedby(repeat(fb:en.const,1,),fb:en.let),1) : 10
      followedby(repeat(optional(fb:en.const),1),fb:en.letnum) : 10
      repeat(and(repeat(fb:en.num,1,),fb:en.let),1) : 1
      repeat(and(fb:en.num,fb:en.let),1) : 1
      repeat(fb:en.let,1) : 1
      and(optional(fb:en.letnum),fb:en.num) : 1
      and(repeat(fb:en.num,1,),optional(fb:en.letnum)) : 1
      repeat(followedby(optional(fb:en.const),fb:en.let),1) : 10
      repeat(and(fb:en.let,fb:en.num),1) : 1
      repeat(and(optional(fb:en.let),fb:en.num),1) : 1
      followedby(fb:en.let,optional(fb:en.letnum)) : 1
      followedby(fb:en.num,fb:en.letnum) : 1
      followedby(repeat(fb:en.const,1,),fb:en.letnum) : 10
      repeat(followedby(optional(fb:en.let),fb:en.let),1) : 1
      repeat(and(fb:en.num,optional(fb:en.let)),1) : 1
      followedby(optional(fb:en.const),fb:en.letnum) : 10
      followedby(repeat(repeat(fb:en.const,1,),1),fb:en.letnum) : 10
      followedby(fb:en.const,fb:en.letnum) : 10
      and(fb:en.num,optional(fb:en.letnum)) : 1
      followedby(optional(repeat(fb:en.let,1)),fb:en.letnum) : 1
      repeat(followedby(fb:en.let,optional(fb:en.let)),1) : 1
      repeat(and(fb:en.let,repeat(fb:en.num,1,)),1) : 1
  Line 1: Also if any character can come before any numerals that can only be a <M10>.
    Top prediction: followedby(fb:en.any,fb:en.let)
    All 8 derivations and their counts: 
      followedby(fb:en.any,fb:en.let) : 1
      fb:en.num : 1
      followedby(fb:en.let,fb:en.num) : 1
      followedby(fb:en.let,fb:en.any) : 1
      fb:en.let : 1
      followedby(fb:en.any,fb:en.any) : 3
      fb:en.any : 3
      followedby(fb:en.any,fb:en.num) : 3
=======================================================
Test on utterance 68:
  Line 0: The name must only consist of letters, numbers and one or more single <M0> (not in the beginning or end). 
    Top prediction: repeat(and(repeat(not(fb:en.const),1),fb:en.let),1,)
derivSize == beamSize
    All 200 derivations and their counts: 
      repeat(and(fb:en.const,fb:en.num),1,) : 1
      repeat(endwith(not(and(fb:en.num,repeat(fb:en.const,1,)))),1,) : 1
      repeat(endwith(fb:en.let),1,) : 1
      repeat(and(fb:en.num,endwith(not(fb:en.const))),1,) : 1
      repeat(and(fb:en.num,endwith(repeat(not(fb:en.const),1,))),1,) : 1
      repeat(and(fb:en.num,repeat(not(fb:en.const),1)),1,) : 1
      repeat(endwith(not(or(fb:en.num,fb:en.const))),1,) : 1
      repeat(and(fb:en.num,repeat(endwith(fb:en.const),1,)),1,) : 1
      repeat(endwith(or(fb:en.let,not(fb:en.const))),1,) : 1
      repeat(endwith(and(fb:en.let,repeat(not(fb:en.const),1,))),1,) : 1
      repeat(endwith(and(fb:en.num,fb:en.const)),1,) : 1
      and(endwith(not(repeat(fb:en.const,1))),repeat(fb:en.let,1,)) : 1
      repeat(not(and(fb:en.let,repeat(fb:en.const,1))),1,) : 1
      repeat(and(fb:en.num,not(fb:en.const)),1,) : 1
      repeat(and(fb:en.num,endwith(fb:en.const)),1,) : 1
      repeat(not(and(fb:en.let,repeat(fb:en.const,1,))),1,) : 1
      repeat(endwith(and(repeat(not(fb:en.const),1,),fb:en.num)),1,) : 1
      repeat(and(fb:en.let,not(repeat(fb:en.const,1))),1,) : 1
      repeat(endwith(not(or(fb:en.const,fb:en.let))),1,) : 1
      repeat(endwith(not(fb:en.let)),1,) : 1
      repeat(and(not(repeat(fb:en.const,1,)),fb:en.num),1,) : 1
      repeat(endwith(not(and(fb:en.num,fb:en.const))),1,) : 1
      repeat(endwith(and(repeat(fb:en.const,1,),fb:en.let)),1,) : 1
      repeat(endwith(and(not(repeat(fb:en.const,1)),fb:en.let)),1,) : 1
      repeat(and(endwith(not(repeat(fb:en.const,1,))),fb:en.let),1,) : 1
      repeat(endwith(and(repeat(not(fb:en.const),1),fb:en.let)),1,) : 1
      repeat(and(fb:en.let,endwith(repeat(fb:en.const,1))),1,) : 1
      repeat(endwith(and(fb:en.let,repeat(fb:en.const,1))),1,) : 1
      repeat(and(fb:en.let,repeat(endwith(fb:en.const),1)),1,) : 1
      repeat(and(repeat(not(fb:en.const),1,),fb:en.let),1,) : 1
      repeat(and(endwith(fb:en.const),fb:en.num),1,) : 1
      repeat(and(repeat(not(fb:en.const),1),fb:en.let),1,) : 1
      repeat(and(endwith(not(fb:en.const)),fb:en.num),1,) : 1
      and(repeat(endwith(not(fb:en.const)),1,),repeat(fb:en.num,1,)) : 1
      and(repeat(not(fb:en.const),1,),repeat(fb:en.let,1,)) : 1
      repeat(and(fb:en.let,repeat(endwith(fb:en.const),1,)),1,) : 1
      repeat(endwith(not(and(repeat(fb:en.const,1,),fb:en.num))),1,) : 1
      repeat(endwith(or(fb:en.let,fb:en.const)),1,) : 1
      repeat(not(and(fb:en.const,fb:en.let)),1,) : 1
      repeat(or(fb:en.let,endwith(not(fb:en.const))),1,) : 1
      repeat(and(not(fb:en.const),fb:en.let),1,) : 1
      repeat(not(and(repeat(fb:en.const,1),fb:en.num)),1,) : 1
      repeat(endwith(and(repeat(fb:en.const,1),fb:en.num)),1,) : 1
      and(repeat(fb:en.const,1,),repeat(fb:en.num,1,)) : 1
      repeat(endwith(not(and(fb:en.const,fb:en.let))),1,) : 1
      repeat(endwith(or(fb:en.num,not(fb:en.const))),1,) : 1
      repeat(fb:en.let,1,) : 1
      repeat(and(repeat(fb:en.const,1),fb:en.num),1,) : 1
      repeat(and(endwith(repeat(fb:en.const,1)),fb:en.let),1,) : 1
      repeat(and(fb:en.let,repeat(fb:en.const,1)),1,) : 1
      repeat(and(fb:en.num,endwith(not(repeat(fb:en.const,1)))),1,) : 1
      and(repeat(endwith(not(fb:en.const)),1),repeat(fb:en.num,1,)) : 1
      and(repeat(endwith(fb:en.const),1),repeat(fb:en.num,1,)) : 1
      repeat(and(endwith(not(repeat(fb:en.const,1,))),fb:en.num),1,) : 1
      and(endwith(not(repeat(fb:en.const,1,))),repeat(fb:en.let,1,)) : 1
      repeat(endwith(and(fb:en.let,not(repeat(fb:en.const,1,)))),1,) : 1
      and(endwith(repeat(fb:en.const,1,)),repeat(fb:en.let,1,)) : 1
      repeat(or(fb:en.num,endwith(fb:en.const)),1,) : 1
      repeat(and(repeat(endwith(not(fb:en.const)),1,),fb:en.num),1,) : 1
      repeat(endwith(and(not(repeat(fb:en.const,1)),fb:en.num)),1,) : 1
      and(repeat(endwith(fb:en.const),1,),repeat(fb:en.num,1,)) : 1
      repeat(and(fb:en.num,repeat(endwith(fb:en.const),1)),1,) : 1
      repeat(and(repeat(endwith(fb:en.const),1),fb:en.num),1,) : 1
      repeat(and(repeat(endwith(fb:en.const),1),fb:en.let),1,) : 1
      repeat(and(endwith(not(repeat(fb:en.const,1))),fb:en.let),1,) : 1
      repeat(and(endwith(repeat(not(fb:en.const),1)),fb:en.let),1,) : 1
      repeat(and(fb:en.num,endwith(repeat(fb:en.const,1))),1,) : 1
      repeat(and(repeat(fb:en.const,1,),fb:en.num),1,) : 1
      repeat(or(fb:en.num,endwith(not(fb:en.const))),1,) : 1
      repeat(and(fb:en.let,repeat(fb:en.const,1,)),1,) : 1
      repeat(and(fb:en.let,endwith(repeat(fb:en.const,1,))),1,) : 1
      repeat(endwith(not(fb:en.num)),1,) : 1
      repeat(and(repeat(endwith(fb:en.const),1,),fb:en.let),1,) : 1
      repeat(and(fb:en.let,endwith(repeat(not(fb:en.const),1))),1,) : 1
      repeat(and(endwith(repeat(fb:en.const,1)),fb:en.num),1,) : 1
      repeat(and(repeat(fb:en.const,1),fb:en.let),1,) : 1
      repeat(and(fb:en.let,repeat(not(fb:en.const),1,)),1,) : 1
      repeat(or(fb:en.let,endwith(fb:en.const)),1,) : 1
      repeat(endwith(and(fb:en.num,repeat(fb:en.const,1))),1,) : 1
      repeat(endwith(or(not(fb:en.const),fb:en.num)),1,) : 1
      repeat(and(repeat(endwith(fb:en.const),1,),fb:en.num),1,) : 1
      and(repeat(endwith(not(fb:en.const)),1),repeat(fb:en.let,1,)) : 1
      and(repeat(not(fb:en.const),1),repeat(fb:en.num,1,)) : 1
      repeat(and(repeat(fb:en.const,1,),fb:en.let),1,) : 1
      repeat(not(and(fb:en.num,fb:en.const)),1,) : 1
      repeat(endwith(and(fb:en.num,not(fb:en.const))),1,) : 1
      repeat(endwith(not(and(repeat(fb:en.const,1),fb:en.let))),1,) : 1
      repeat(endwith(not(and(fb:en.let,repeat(fb:en.const,1,)))),1,) : 1
      repeat(and(fb:en.let,not(fb:en.const)),1,) : 1
      and(repeat(fb:en.const,1,),repeat(fb:en.let,1,)) : 1
      repeat(and(fb:en.let,fb:en.const),1,) : 1
      and(endwith(repeat(fb:en.const,1)),repeat(fb:en.let,1,)) : 1
      repeat(and(endwith(repeat(not(fb:en.const),1,)),fb:en.num),1,) : 1
      repeat(and(not(fb:en.const),fb:en.num),1,) : 1
      repeat(and(endwith(repeat(not(fb:en.const),1)),fb:en.num),1,) : 1
      repeat(endwith(and(not(repeat(fb:en.const,1,)),fb:en.let)),1,) : 1
      repeat(endwith(and(fb:en.num,repeat(fb:en.const,1,))),1,) : 1
      repeat(and(fb:en.let,repeat(endwith(not(fb:en.const)),1)),1,) : 1
      repeat(endwith(and(fb:en.num,not(repeat(fb:en.const,1,)))),1,) : 1
      repeat(and(endwith(not(fb:en.const)),fb:en.let),1,) : 1
      repeat(endwith(or(fb:en.const,fb:en.num)),1,) : 1
      repeat(not(and(repeat(fb:en.const,1,),fb:en.num)),1,) : 1
      repeat(not(or(fb:en.const,fb:en.let)),1,) : 1
      repeat(endwith(and(repeat(fb:en.const,1,),fb:en.num)),1,) : 1
      repeat(endwith(not(and(repeat(fb:en.const,1),fb:en.num))),1,) : 1
      repeat(endwith(and(not(fb:en.const),fb:en.let)),1,) : 1
      repeat(not(and(fb:en.num,repeat(fb:en.const,1,))),1,) : 1
      repeat(not(and(fb:en.const,fb:en.num)),1,) : 1
      and(repeat(fb:en.const,1),repeat(fb:en.num,1,)) : 1
      repeat(endwith(and(repeat(fb:en.const,1),fb:en.let)),1,) : 1
      repeat(and(fb:en.num,repeat(not(fb:en.const),1,)),1,) : 1
      repeat(endwith(and(fb:en.const,fb:en.let)),1,) : 1
      repeat(and(repeat(not(fb:en.const),1),fb:en.num),1,) : 1
      repeat(endwith(not(and(fb:en.num,repeat(fb:en.const,1)))),1,) : 1
      repeat(and(fb:en.let,endwith(not(repeat(fb:en.const,1,)))),1,) : 1
      repeat(endwith(and(repeat(not(fb:en.const),1,),fb:en.let)),1,) : 1
      and(repeat(not(fb:en.const),1,),repeat(fb:en.num,1,)) : 1
      repeat(endwith(or(fb:en.const,fb:en.let)),1,) : 1
      repeat(or(fb:en.num,fb:en.const),1,) : 1
      repeat(endwith(and(fb:en.let,fb:en.const)),1,) : 1
      repeat(endwith(and(not(repeat(fb:en.const,1,)),fb:en.num)),1,) : 1
      repeat(and(endwith(fb:en.const),fb:en.let),1,) : 1
      repeat(and(not(repeat(fb:en.const,1)),fb:en.let),1,) : 1
      repeat(and(fb:en.let,repeat(endwith(not(fb:en.const)),1,)),1,) : 1
      repeat(and(fb:en.let,endwith(fb:en.const)),1,) : 1
      repeat(and(repeat(endwith(not(fb:en.const)),1),fb:en.let),1,) : 1
      repeat(endwith(or(fb:en.num,fb:en.const)),1,) : 1
      and(repeat(not(fb:en.const),1),repeat(fb:en.let,1,)) : 1
      repeat(endwith(or(not(fb:en.const),fb:en.let)),1,) : 1
      repeat(endwith(and(fb:en.let,repeat(fb:en.const,1,))),1,) : 1
      repeat(and(endwith(not(repeat(fb:en.const,1))),fb:en.num),1,) : 1
      and(repeat(endwith(fb:en.const),1,),repeat(fb:en.let,1,)) : 1
      repeat(and(repeat(endwith(not(fb:en.const)),1,),fb:en.let),1,) : 1
      and(not(repeat(fb:en.const,1)),repeat(fb:en.let,1,)) : 1
      repeat(or(endwith(not(fb:en.const)),fb:en.let),1,) : 1
      repeat(and(fb:en.num,endwith(repeat(fb:en.const,1,))),1,) : 1
      repeat(endwith(and(fb:en.let,not(fb:en.const))),1,) : 1
      repeat(and(fb:en.num,fb:en.const),1,) : 1
      repeat(and(fb:en.const,fb:en.let),1,) : 1
      repeat(and(fb:en.num,repeat(fb:en.const,1,)),1,) : 1
      repeat(not(and(repeat(fb:en.const,1,),fb:en.let)),1,) : 1
      repeat(and(fb:en.num,not(repeat(fb:en.const,1))),1,) : 1
      repeat(not(fb:en.num),1,) : 1
      repeat(endwith(and(fb:en.num,repeat(not(fb:en.const),1))),1,) : 1
      and(repeat(fb:en.const,1),repeat(fb:en.let,1,)) : 1
      repeat(not(and(fb:en.let,fb:en.const)),1,) : 1
      repeat(and(endwith(repeat(not(fb:en.const),1,)),fb:en.let),1,) : 1
      repeat(endwith(not(and(repeat(fb:en.const,1,),fb:en.let))),1,) : 1
      repeat(endwith(and(fb:en.const,fb:en.num)),1,) : 1
      and(endwith(repeat(not(fb:en.const),1)),repeat(fb:en.let,1,)) : 1
      repeat(not(or(fb:en.const,fb:en.num)),1,) : 1
      repeat(and(fb:en.let,repeat(not(fb:en.const),1)),1,) : 1
      repeat(and(fb:en.num,repeat(endwith(not(fb:en.const)),1,)),1,) : 1
      repeat(endwith(not(or(fb:en.let,fb:en.const))),1,) : 1
      repeat(not(or(fb:en.let,fb:en.const)),1,) : 1
      repeat(or(fb:en.const,fb:en.let),1,) : 1
      repeat(and(fb:en.num,not(repeat(fb:en.const,1,))),1,) : 1
      repeat(and(fb:en.let,endwith(repeat(not(fb:en.const),1,))),1,) : 1
      repeat(not(or(fb:en.num,fb:en.const)),1,) : 1
      repeat(endwith(and(not(fb:en.const),fb:en.num)),1,) : 1
      repeat(endwith(not(and(fb:en.const,fb:en.num))),1,) : 1
      repeat(or(fb:en.let,not(fb:en.const)),1,) : 1
      repeat(endwith(and(fb:en.let,repeat(not(fb:en.const),1))),1,) : 1
      repeat(or(endwith(fb:en.const),fb:en.num),1,) : 1
      repeat(and(endwith(repeat(fb:en.const,1,)),fb:en.num),1,) : 1
      repeat(not(fb:en.let),1,) : 1
      repeat(endwith(and(fb:en.num,repeat(not(fb:en.const),1,))),1,) : 1
      repeat(and(fb:en.num,endwith(repeat(not(fb:en.const),1))),1,) : 1
      repeat(and(fb:en.num,repeat(endwith(not(fb:en.const)),1)),1,) : 1
      and(not(repeat(fb:en.const,1,)),repeat(fb:en.let,1,)) : 1
      repeat(and(fb:en.num,repeat(fb:en.const,1)),1,) : 1
      repeat(or(fb:en.num,not(fb:en.const)),1,) : 1
      repeat(endwith(and(fb:en.let,not(repeat(fb:en.const,1)))),1,) : 1
      repeat(endwith(and(repeat(not(fb:en.const),1),fb:en.num)),1,) : 1
      repeat(fb:en.num,1,) : 1
      repeat(or(not(fb:en.const),fb:en.let),1,) : 1
      and(repeat(endwith(not(fb:en.const)),1,),repeat(fb:en.let,1,)) : 1
      repeat(and(not(repeat(fb:en.const,1,)),fb:en.let),1,) : 1
      repeat(and(fb:en.let,endwith(not(fb:en.const))),1,) : 1
      repeat(endwith(not(and(fb:en.let,repeat(fb:en.const,1)))),1,) : 1
      repeat(and(fb:en.let,endwith(not(repeat(fb:en.const,1)))),1,) : 1
      repeat(endwith(not(and(fb:en.let,fb:en.const))),1,) : 1
      repeat(or(fb:en.const,fb:en.num),1,) : 1
      repeat(or(not(fb:en.const),fb:en.num),1,) : 1
      and(repeat(endwith(fb:en.const),1),repeat(fb:en.let,1,)) : 1
      repeat(endwith(fb:en.num),1,) : 1
      repeat(and(not(repeat(fb:en.const,1)),fb:en.num),1,) : 1
      repeat(endwith(not(or(fb:en.const,fb:en.num))),1,) : 1
      repeat(endwith(and(fb:en.num,not(repeat(fb:en.const,1)))),1,) : 1
      repeat(or(endwith(fb:en.const),fb:en.let),1,) : 1
      and(endwith(repeat(not(fb:en.const),1,)),repeat(fb:en.let,1,)) : 1
      repeat(or(fb:en.let,fb:en.const),1,) : 1
      repeat(not(and(fb:en.num,repeat(fb:en.const,1))),1,) : 1
      repeat(or(endwith(not(fb:en.const)),fb:en.num),1,) : 1
      repeat(and(endwith(repeat(fb:en.const,1,)),fb:en.let),1,) : 1
      repeat(and(repeat(not(fb:en.const),1,),fb:en.num),1,) : 1
      repeat(and(fb:en.let,not(repeat(fb:en.const,1,))),1,) : 1
      repeat(not(and(repeat(fb:en.const,1),fb:en.let)),1,) : 1
      repeat(and(repeat(endwith(not(fb:en.const)),1),fb:en.num),1,) : 1
      repeat(and(fb:en.num,endwith(not(repeat(fb:en.const,1,)))),1,) : 1
  Line 1: The minimum length is 3 characters.
    Top prediction: repeat(fb:en.let,3,)
    All 10 derivations and their counts: 
      repeat(fb:en.any,3) : 1
      repeat(fb:en.let,3,) : 1
      repeat(fb:en.let,1) : 1
      repeat(fb:en.let,3) : 1
      repeat(repeat(fb:en.any,3),1) : 1
      repeat(fb:en.any,1) : 1
      fb:en.let : 1
      repeat(fb:en.any,3,) : 1
      fb:en.any : 1
      repeat(repeat(fb:en.let,3),1) : 1
=======================================================
Test on utterance 69:
  Line 0: I would like to validate a string format that should only contain only numbers with also following conditions both satisfied: 
    Top prediction: followedby(fb:en.any,repeat(contain(repeat(fb:en.num,1,)),1,))
    All 15 derivations and their counts: 
      followedby(fb:en.any,repeat(contain(repeat(fb:en.num,1,)),1,)) : 1
      fb:en.num : 1
      contain(repeat(fb:en.num,1,)) : 1
      repeat(contain(repeat(fb:en.num,1,)),1,) : 1
      followedby(fb:en.any,repeat(fb:en.num,1,)) : 2
      followedby(fb:en.any,repeat(repeat(fb:en.num,1,),1,)) : 1
      repeat(contain(fb:en.num),1,) : 1
      repeat(fb:en.num,1,) : 2
      followedby(fb:en.any,repeat(contain(fb:en.num),1,)) : 1
      followedby(fb:en.any,contain(repeat(fb:en.num,1,))) : 1
      followedby(fb:en.any,contain(fb:en.num)) : 1
      fb:en.any : 1
      repeat(repeat(fb:en.num,1,),1,) : 1
      contain(fb:en.num) : 1
      followedby(fb:en.any,fb:en.num) : 1
  Line 1: If it is a integer number, the maximum number of digits is 5. 
    Top prediction: fb:en.num
    All 1 derivations and their counts: 
      fb:en.num : 3
  Line 2: If it is a number with decimal (or decimal fraction), the maximum digits after decimal mark is two. 
    Top prediction: or(followedby(fb:en.num,fb:en.dp),fb:en.num)
    All 82 derivations and their counts: 
      or(fb:en.num,fb:en.dp) : 3
      or(contain(fb:en.dp),followedby(fb:en.num,fb:en.dp)) : 1
      followedby(fb:en.dp,fb:en.num) : 4
      followedby(fb:en.dp,or(fb:en.num,fb:en.dp)) : 2
      or(followedby(fb:en.num,fb:en.dp),fb:en.num) : 1
      contain(or(fb:en.dp,followedby(fb:en.dp,fb:en.num))) : 1
      or(followedby(fb:en.num,fb:en.dp),contain(fb:en.dp)) : 1
      followedby(fb:en.dp,contain(or(fb:en.dp,fb:en.dp))) : 2
      contain(or(fb:en.num,fb:en.dp)) : 1
      or(fb:en.dp,followedby(fb:en.dp,fb:en.num)) : 1
      or(fb:en.dp,followedby(fb:en.dp,fb:en.dp)) : 1
      followedby(fb:en.num,contain(fb:en.dp)) : 2
      followedby(fb:en.num,or(contain(fb:en.dp),fb:en.dp)) : 1
      followedby(fb:en.num,or(fb:en.dp,fb:en.num)) : 1
      followedby(fb:en.dp,or(contain(fb:en.dp),fb:en.dp)) : 1
      contain(fb:en.dp) : 3
      contain(or(fb:en.dp,fb:en.num)) : 1
      followedby(or(fb:en.num,contain(fb:en.dp)),fb:en.num) : 1
      contain(or(followedby(fb:en.num,fb:en.dp),fb:en.dp)) : 1
      followedby(or(fb:en.dp,contain(fb:en.dp)),fb:en.num) : 1
      contain(followedby(fb:en.dp,or(fb:en.dp,fb:en.dp))) : 2
      or(contain(fb:en.dp),fb:en.dp) : 2
      contain(followedby(fb:en.dp,fb:en.num)) : 1
      followedby(fb:en.dp,contain(fb:en.num)) : 1
      or(fb:en.dp,fb:en.num) : 3
      fb:en.num : 2
      followedby(or(fb:en.dp,fb:en.num),fb:en.num) : 1
      or(fb:en.num,followedby(fb:en.dp,fb:en.dp)) : 1
      followedby(fb:en.dp,or(fb:en.dp,fb:en.num)) : 2
      fb:en.dp : 3
      followedby(fb:en.num,contain(or(fb:en.dp,fb:en.dp))) : 2
      followedby(contain(or(fb:en.dp,fb:en.dp)),fb:en.num) : 2
      followedby(contain(fb:en.dp),fb:en.num) : 2
      or(contain(fb:en.dp),followedby(fb:en.dp,fb:en.dp)) : 1
      followedby(fb:en.dp,contain(or(fb:en.dp,fb:en.num))) : 1
      or(followedby(fb:en.dp,fb:en.num),fb:en.num) : 1
      or(fb:en.dp,contain(fb:en.dp)) : 2
      followedby(fb:en.num,fb:en.dp) : 2
      or(followedby(fb:en.dp,fb:en.dp),fb:en.num) : 1
      or(fb:en.num,followedby(fb:en.num,fb:en.dp)) : 1
      followedby(or(fb:en.num,fb:en.dp),fb:en.num) : 1
      or(fb:en.num,followedby(fb:en.dp,fb:en.num)) : 1
      or(followedby(fb:en.dp,fb:en.dp),fb:en.dp) : 1
      followedby(fb:en.num,or(fb:en.num,fb:en.dp)) : 1
      followedby(fb:en.dp,fb:en.dp) : 3
      followedby(contain(fb:en.num),fb:en.num) : 1
      followedby(fb:en.dp,or(fb:en.dp,fb:en.dp)) : 2
      contain(followedby(fb:en.dp,or(fb:en.num,fb:en.dp))) : 1
      or(followedby(fb:en.num,fb:en.dp),fb:en.dp) : 1
      followedby(fb:en.num,or(fb:en.dp,fb:en.dp)) : 2
      followedby(fb:en.dp,or(fb:en.dp,contain(fb:en.dp))) : 1
      or(fb:en.num,fb:en.num) : 2
      followedby(or(contain(fb:en.dp),fb:en.dp),fb:en.num) : 1
      followedby(fb:en.num,fb:en.num) : 1
      or(fb:en.dp,fb:en.dp) : 4
      or(fb:en.num,contain(fb:en.dp)) : 1
      or(followedby(fb:en.dp,fb:en.num),fb:en.dp) : 1
      followedby(contain(or(fb:en.num,fb:en.dp)),fb:en.num) : 1
      followedby(or(contain(fb:en.dp),fb:en.num),fb:en.num) : 1
      contain(or(followedby(fb:en.dp,fb:en.dp),fb:en.dp)) : 1
      followedby(fb:en.dp,or(fb:en.num,contain(fb:en.dp))) : 1
      or(followedby(fb:en.dp,fb:en.dp),contain(fb:en.dp)) : 1
      contain(fb:en.num) : 1
      or(contain(fb:en.dp),followedby(fb:en.dp,fb:en.num)) : 1
      followedby(fb:en.dp,or(fb:en.num,fb:en.num)) : 2
      contain(followedby(fb:en.num,or(fb:en.dp,fb:en.dp))) : 2
      followedby(fb:en.num,or(fb:en.dp,contain(fb:en.dp))) : 1
      followedby(fb:en.dp,or(contain(fb:en.dp),fb:en.num)) : 1
      contain(followedby(fb:en.dp,fb:en.dp)) : 3
      contain(followedby(fb:en.num,fb:en.dp)) : 2
      contain(or(fb:en.dp,followedby(fb:en.num,fb:en.dp))) : 1
      or(contain(fb:en.dp),fb:en.num) : 1
      followedby(fb:en.dp,contain(fb:en.dp)) : 3
      followedby(fb:en.dp,contain(or(fb:en.num,fb:en.dp))) : 1
      followedby(contain(or(fb:en.dp,fb:en.num)),fb:en.num) : 1
      followedby(or(fb:en.dp,fb:en.dp),fb:en.num) : 2
      or(followedby(fb:en.dp,fb:en.num),contain(fb:en.dp)) : 1
      contain(followedby(fb:en.dp,or(fb:en.dp,fb:en.num))) : 1
      contain(or(followedby(fb:en.dp,fb:en.num),fb:en.dp)) : 1
      or(fb:en.dp,followedby(fb:en.num,fb:en.dp)) : 1
      contain(or(fb:en.dp,followedby(fb:en.dp,fb:en.dp))) : 1
      contain(or(fb:en.dp,fb:en.dp)) : 4
  Line 3: NOTE: value use <M0> or dot as decimal point. 
    Top prediction: or(fb:en.dp,fb:en.const)
    All 4 derivations and their counts: 
      or(fb:en.dp,fb:en.const) : 2
      or(fb:en.const,fb:en.dp) : 2
      fb:en.dp : 2
      fb:en.const : 1
  Line 4: Please bear in mind that both of the two conditions have to be satisfied.
    Top prediction: 
=======================================================
Test on utterance 70:
  Line 0: I need a regular expression to validate single digit within range of [1-5] followed by alphabet [A-C] and followed by optional alphabet [X-Z]
    Top prediction: followedby(fb:en.num,optional(fb:en.let))
    All 28 derivations and their counts: 
      followedby(fb:en.num,followedby(fb:en.let,fb:en.let)) : 1
      followedby(fb:en.num,and(fb:en.let,fb:en.let)) : 2
      and(followedby(fb:en.num,fb:en.let),optional(fb:en.let)) : 1
      fb:en.let : 2
      optional(fb:en.num) : 1
      and(optional(fb:en.let),followedby(fb:en.num,fb:en.let)) : 1
      and(fb:en.num,fb:en.let) : 1
      followedby(fb:en.num,and(fb:en.let,optional(fb:en.let))) : 1
      optional(fb:en.let) : 2
      fb:en.num : 1
      followedby(fb:en.let,optional(fb:en.let)) : 2
      followedby(fb:en.num,optional(fb:en.let)) : 3
      and(optional(fb:en.let),fb:en.let) : 1
      and(fb:en.let,optional(fb:en.let)) : 1
      and(fb:en.let,fb:en.let) : 2
      followedby(fb:en.num,and(optional(fb:en.let),fb:en.let)) : 1
      and(fb:en.let,fb:en.num) : 1
      followedby(followedby(fb:en.num,fb:en.let),optional(fb:en.let)) : 1
      and(fb:en.num,optional(fb:en.let)) : 1
      followedby(optional(fb:en.let),fb:en.let) : 1
      followedby(fb:en.let,fb:en.let) : 2
      followedby(followedby(fb:en.num,fb:en.let),fb:en.let) : 1
      followedby(fb:en.num,fb:en.let) : 4
      and(fb:en.let,followedby(fb:en.num,fb:en.let)) : 1
      followedby(fb:en.num,followedby(fb:en.let,optional(fb:en.let))) : 1
      optional(followedby(fb:en.num,fb:en.let)) : 2
      and(optional(fb:en.let),fb:en.num) : 1
      and(followedby(fb:en.num,fb:en.let),fb:en.let) : 1
=======================================================
Test on utterance 71:
  Line 0: I need a regular expression validation expression that will 
    Top prediction: 
  Line 1: ALLOW positive number ( 0-9 ), , and . 
    Top prediction: fb:en.num
    All 1 derivations and their counts: 
      fb:en.num : 1
  Line 2: DISALLOW letter (a-z), any other letter or symbol except <M0> and <M1>
    Top prediction: or(not(and(fb:en.const,fb:en.const)),fb:en.let)
derivSize == beamSize
    All 108 derivations and their counts: 
      not(not(fb:en.any)) : 1
      and(fb:en.const,not(fb:en.let)) : 2
      or(fb:en.any,and(not(fb:en.const),fb:en.const)) : 1
      or(fb:en.let,not(and(fb:en.const,fb:en.const))) : 4
      or(fb:en.any,and(fb:en.const,fb:en.const)) : 2
      and(fb:en.const,or(fb:en.let,not(fb:en.const))) : 2
      or(fb:en.any,not(and(fb:en.const,fb:en.const))) : 2
      or(not(fb:en.const),fb:en.let) : 4
      not(and(fb:en.const,or(fb:en.any,fb:en.const))) : 1
      or(fb:en.const,fb:en.let) : 4
      or(and(fb:en.const,fb:en.const),fb:en.any) : 2
      not(or(fb:en.let,not(and(fb:en.const,fb:en.const)))) : 4
      or(and(fb:en.const,not(fb:en.const)),fb:en.any) : 1
      not(fb:en.const) : 2
      and(fb:en.const,not(fb:en.const)) : 1
      and(fb:en.const,or(fb:en.any,fb:en.const)) : 1
      or(fb:en.any,not(fb:en.const)) : 2
      not(not(fb:en.let)) : 2
      and(or(fb:en.const,fb:en.any),fb:en.const) : 1
      not(and(fb:en.const,not(fb:en.let))) : 1
      not(and(or(fb:en.any,fb:en.const),fb:en.const)) : 1
      and(fb:en.const,or(fb:en.any,not(fb:en.const))) : 1
      not(or(and(fb:en.const,not(fb:en.const)),fb:en.any)) : 1
      not(or(not(and(fb:en.const,fb:en.const)),fb:en.let)) : 4
      not(or(fb:en.let,fb:en.const)) : 3
      and(fb:en.const,fb:en.const) : 2
      not(or(fb:en.any,not(fb:en.const))) : 2
      not(and(fb:en.any,fb:en.const)) : 1
      and(fb:en.any,fb:en.const) : 1
      not(or(not(fb:en.const),fb:en.let)) : 4
      or(and(fb:en.const,fb:en.const),fb:en.let) : 4
      and(not(fb:en.let),fb:en.const) : 2
      not(and(fb:en.const,fb:en.let)) : 1
      not(and(or(fb:en.let,not(fb:en.const)),fb:en.const)) : 1
      not(and(or(fb:en.let,fb:en.const),fb:en.const)) : 1
      not(or(fb:en.any,not(and(fb:en.const,fb:en.const)))) : 2
      or(and(not(fb:en.const),fb:en.const),fb:en.any) : 1
      and(or(fb:en.let,not(fb:en.const)),fb:en.const) : 2
      or(fb:en.let,fb:en.const) : 4
      and(or(fb:en.any,not(fb:en.const)),fb:en.const) : 1
      or(fb:en.const,fb:en.any) : 2
      and(not(fb:en.any),fb:en.const) : 1
      not(and(or(not(fb:en.const),fb:en.let),fb:en.const)) : 1
      not(and(or(fb:en.const,fb:en.let),fb:en.const)) : 1
      and(fb:en.const,or(fb:en.const,fb:en.any)) : 1
      not(fb:en.let) : 3
      not(and(fb:en.const,or(fb:en.const,fb:en.any))) : 1
      not(and(not(fb:en.any),fb:en.const)) : 1
      not(or(fb:en.let,and(not(fb:en.const),fb:en.const))) : 2
      not(and(fb:en.const,not(fb:en.any))) : 1
      not(or(not(fb:en.const),fb:en.any)) : 2
      and(or(fb:en.let,fb:en.const),fb:en.const) : 2
      or(fb:en.let,and(not(fb:en.const),fb:en.const)) : 2
      or(not(and(fb:en.const,fb:en.const)),fb:en.let) : 4
      fb:en.const : 2
      not(and(fb:en.const,or(fb:en.let,not(fb:en.const)))) : 1
      and(or(fb:en.any,fb:en.const),fb:en.const) : 1
      not(or(and(not(fb:en.const),fb:en.const),fb:en.let)) : 2
      and(not(fb:en.const),fb:en.const) : 1
      not(or(fb:en.const,fb:en.any)) : 2
      not(or(fb:en.let,not(fb:en.const))) : 4
      and(or(not(fb:en.const),fb:en.any),fb:en.const) : 1
      not(fb:en.any) : 2
      not(and(fb:en.const,or(not(fb:en.const),fb:en.any))) : 1
      or(and(not(fb:en.const),fb:en.const),fb:en.let) : 2
      not(or(fb:en.let,and(fb:en.const,fb:en.const))) : 4
      not(and(fb:en.const,or(fb:en.any,not(fb:en.const)))) : 1
      not(or(fb:en.let,and(fb:en.const,not(fb:en.const)))) : 2
      not(and(or(fb:en.any,not(fb:en.const)),fb:en.const)) : 1
      or(not(and(fb:en.const,fb:en.const)),fb:en.any) : 2
      and(fb:en.const,or(fb:en.const,fb:en.let)) : 2
      not(or(not(and(fb:en.const,fb:en.const)),fb:en.any)) : 2
      not(or(and(not(fb:en.const),fb:en.const),fb:en.any)) : 1
      or(not(fb:en.const),fb:en.any) : 2
      not(and(fb:en.const,fb:en.any)) : 1
      not(or(fb:en.const,fb:en.let)) : 4
      and(fb:en.const,or(not(fb:en.const),fb:en.let)) : 2
      not(or(and(fb:en.const,not(fb:en.const)),fb:en.let)) : 2
      not(and(fb:en.const,fb:en.const)) : 2
      and(fb:en.const,fb:en.let) : 2
      and(or(not(fb:en.const),fb:en.let),fb:en.const) : 2
      and(fb:en.const,or(not(fb:en.const),fb:en.any)) : 1
      not(and(or(fb:en.const,fb:en.any),fb:en.const)) : 1
      fb:en.any : 1
      not(or(and(fb:en.const,fb:en.const),fb:en.let)) : 4
      and(fb:en.const,fb:en.any) : 1
      not(or(fb:en.any,and(fb:en.const,not(fb:en.const)))) : 1
      or(fb:en.let,not(fb:en.const)) : 4
      fb:en.let : 2
      not(and(fb:en.const,or(not(fb:en.const),fb:en.let))) : 1
      and(fb:en.let,fb:en.const) : 2
      or(fb:en.any,and(fb:en.const,not(fb:en.const))) : 1
      not(and(or(not(fb:en.const),fb:en.any),fb:en.const)) : 1
      not(and(fb:en.let,fb:en.const)) : 1
      and(fb:en.const,or(fb:en.let,fb:en.const)) : 2
      not(and(fb:en.const,or(fb:en.const,fb:en.let))) : 1
      or(and(fb:en.const,not(fb:en.const)),fb:en.let) : 2
      or(fb:en.any,fb:en.const) : 2
      and(or(fb:en.const,fb:en.let),fb:en.const) : 2
      not(and(not(fb:en.let),fb:en.const)) : 1
      not(or(fb:en.any,and(fb:en.const,fb:en.const))) : 2
      not(or(and(fb:en.const,fb:en.const),fb:en.any)) : 2
      and(fb:en.const,not(fb:en.any)) : 1
      or(fb:en.let,and(fb:en.const,not(fb:en.const))) : 2
      not(or(fb:en.any,fb:en.const)) : 2
      not(or(fb:en.any,and(not(fb:en.const),fb:en.const))) : 1
      or(fb:en.let,and(fb:en.const,fb:en.const)) : 4
      not(and(fb:en.const,or(fb:en.let,fb:en.const))) : 1
=======================================================
Test on utterance 72:
  Line 0: at least 6 characters
    Top prediction: repeat(fb:en.let,6)
    All 6 derivations and their counts: 
      repeat(fb:en.let,6) : 1
      repeat(fb:en.let,6,) : 1
      repeat(fb:en.any,6,) : 1
      fb:en.let : 1
      fb:en.any : 1
      repeat(fb:en.any,6) : 1
  Line 1: no <M0>
    Top prediction: fb:en.const
    All 1 derivations and their counts: 
      fb:en.const : 1
  Line 2: at least one digit
    Top prediction: repeat(fb:en.num,1)
    All 3 derivations and their counts: 
      fb:en.num : 1
      repeat(fb:en.num,1) : 1
      repeat(fb:en.num,1,) : 1
  Line 3: at least one uppercase
    Top prediction: repeat(fb:en.cap,1)
    All 3 derivations and their counts: 
      fb:en.cap : 1
      repeat(fb:en.cap,1,) : 1
      repeat(fb:en.cap,1) : 1
  Line 4: at least one lowercase
    Top prediction: repeat(fb:en.low,1)
    All 3 derivations and their counts: 
      fb:en.low : 1
      repeat(fb:en.low,1,) : 1
      repeat(fb:en.low,1) : 1
  Line 5: at least one special character: <M1> <M2> <M3> <M4> <M5> <M6> <M7> <M8> <M9> <M10> <M11>
    Top prediction: repeat(fb:en.sp,1)
    All 12 derivations and their counts: 
      repeat(fb:en.let,1,) : 1
      fb:en.sp : 1
      repeat(fb:en.sp,1) : 1
      repeat(fb:en.let,1) : 1
      repeat(fb:en.const,1,) : 9
      repeat(fb:en.const,1) : 9
      repeat(fb:en.any,1) : 1
      repeat(fb:en.sp,1,) : 1
      fb:en.let : 1
      fb:en.any : 1
      fb:en.const : 9
      repeat(fb:en.any,1,) : 1
=======================================================
Test on utterance 73:
  Line 0: I would like regex to be a whole number with thousands separated with a <M0>. 
    Top prediction: sep(fb:en.num)
    All 7 derivations and their counts: 
      contain(contain(fb:en.const)) : 1
      fb:en.num : 1
      sep(fb:en.num) : 1
      sep(fb:en.const) : 1
      fb:en.const : 1
      contain(sep(fb:en.const)) : 1
      contain(fb:en.const) : 2
  Line 1: No decimal. 
    Top prediction: fb:en.dp
    All 1 derivations and their counts: 
      fb:en.dp : 1
  Line 2: No <M1>.
    Top prediction: fb:en.const
    All 1 derivations and their counts: 
      fb:en.const : 1
=======================================================
Test on utterance 74:
  Line 0: I'm looking for a regular expression that will match text given the following requirements:
    Top prediction: 
  Line 1: contains only 10 digits (only numbers)
    Top prediction: repeat(repeat(fb:en.num,10),1,)
    All 14 derivations and their counts: 
      repeat(repeat(fb:en.num,1,),10) : 2
      fb:en.num : 2
      contain(repeat(fb:en.num,1,)) : 3
      contain(repeat(fb:en.num,10)) : 4
      repeat(repeat(repeat(fb:en.num,1,),10),1,) : 1
      repeat(repeat(fb:en.num,10),1,) : 2
      repeat(fb:en.num,10) : 4
      contain(repeat(repeat(fb:en.num,1,),10)) : 2
      contain(repeat(repeat(repeat(fb:en.num,1,),10),1,)) : 1
      repeat(fb:en.num,1,) : 3
      contain(repeat(repeat(fb:en.num,1,),1,)) : 1
      contain(repeat(repeat(fb:en.num,10),1,)) : 2
      repeat(repeat(fb:en.num,1,),1,) : 1
      contain(fb:en.num) : 2
  Line 2: starts with 9.
    Top prediction: 
=======================================================
Test on utterance 75:
  Line 0: Need a regular expression to validate number with <M0> separator.
    Top prediction: sep(fb:en.num)
    All 6 derivations and their counts: 
      fb:en.num : 1
      sep(fb:en.num) : 1
      sep(fb:en.const) : 1
      fb:en.const : 1
      contain(sep(fb:en.const)) : 1
      contain(fb:en.const) : 1
=======================================================
Test on utterance 76:
  Line 0: valid characters are alpha-numeric and <M0> (period). 
    Top prediction: and(fb:en.const,fb:en.let)
    All 10 derivations and their counts: 
      fb:en.num : 1
      and(fb:en.const,fb:en.let) : 1
      and(fb:en.any,fb:en.const) : 1
      and(fb:en.const,fb:en.any) : 1
      fb:en.let : 1
      fb:en.any : 1
      fb:en.const : 1
      and(fb:en.let,fb:en.const) : 1
      and(fb:en.const,fb:en.num) : 1
      and(fb:en.num,fb:en.const) : 1
  Line 1: The patterns are %d4% and %t7%. 
    Top prediction: 
  Line 2: So <M1> is not valid by itself, 
    Top prediction: not(fb:en.const)
    All 2 derivations and their counts: 
      not(fb:en.const) : 1
      fb:en.const : 1
  Line 3: but has to be part of these specific patterns.
    Top prediction: 
=======================================================
Test on utterance 77:
  Line 0: The input box should accept alphanumeric with no <M0> and it should also allow the user to use the characters like <M1> <M2> <M3> <M4> <M5>  <M6> <M7> any where in the string, except these characters non of the other characters should be allowed like ( <M8>, <M9>, <M10> etc ). 
    Top prediction: and(not(fb:en.let),fb:en.letnum)
derivSize == beamSize
    All 31 derivations and their counts: 
      not(and(fb:en.letnum,fb:en.any)) : 6
      not(and(fb:en.letnum,not(fb:en.let))) : 1
      not(and(fb:en.any,fb:en.letnum)) : 6
      and(fb:en.let,fb:en.letnum) : 2
      and(fb:en.letnum,not(fb:en.any)) : 10
      and(fb:en.letnum,not(not(fb:en.const))) : 9
      and(not(not(fb:en.any)),fb:en.letnum) : 6
      not(and(not(fb:en.let),fb:en.letnum)) : 2
      and(fb:en.letnum,not(fb:en.let)) : 6
      not(and(fb:en.const,fb:en.letnum)) : 14
      and(fb:en.letnum,fb:en.any) : 4
      not(and(fb:en.let,fb:en.letnum)) : 2
      and(not(fb:en.any),fb:en.letnum) : 10
      not(fb:en.letnum) : 1
      and(fb:en.letnum,not(fb:en.const)) : 18
      and(not(fb:en.const),fb:en.letnum) : 18
      and(fb:en.letnum,not(not(fb:en.any))) : 6
      and(fb:en.letnum,fb:en.let) : 2
      not(and(fb:en.letnum,fb:en.let)) : 2
      and(fb:en.const,fb:en.letnum) : 7
      and(not(not(fb:en.const)),fb:en.letnum) : 9
      and(fb:en.letnum,fb:en.const) : 7
      and(not(fb:en.let),fb:en.letnum) : 6
      not(and(fb:en.letnum,not(fb:en.any))) : 3
      and(fb:en.any,fb:en.letnum) : 4
      not(and(fb:en.letnum,fb:en.const)) : 14
      not(and(fb:en.letnum,not(fb:en.const))) : 7
      and(not(not(fb:en.let)),fb:en.letnum) : 4
      not(and(not(fb:en.any),fb:en.letnum)) : 3
      and(fb:en.letnum,not(not(fb:en.let))) : 4
      not(and(not(fb:en.const),fb:en.letnum)) : 7
  Line 1: It should not allow leading/trailing <M11> also.
    Top prediction: 
=======================================================
Test on utterance 78:
  Line 0: Should allow only alphanumeric with no <M0> and no other characters including ( <M1> ). 
    Top prediction: repeat(and(fb:en.let,fb:en.letnum),1,)
    All 94 derivations and their counts: 
      repeat(fb:en.let,1,) : 1
      contain(contain(fb:en.const)) : 1
      and(contain(fb:en.const),fb:en.const) : 2
      repeat(and(fb:en.const,fb:en.const),1,) : 2
      and(fb:en.letnum,contain(fb:en.const)) : 1
      repeat(and(fb:en.letnum,fb:en.any),1,) : 1
      and(repeat(fb:en.letnum,1,),fb:en.const) : 1
      and(contain(fb:en.const),fb:en.let) : 1
      repeat(contain(fb:en.const),1,) : 3
      and(fb:en.letnum,fb:en.any) : 1
      and(repeat(fb:en.const,1,),contain(fb:en.const)) : 1
      fb:en.letnum : 1
      repeat(fb:en.letnum,1,) : 1
      repeat(and(contain(fb:en.const),fb:en.any),1,) : 1
      repeat(and(contain(fb:en.const),fb:en.const),1,) : 2
      repeat(fb:en.any,1,) : 1
      and(contain(fb:en.const),repeat(contain(fb:en.const),1,)) : 1
      repeat(and(contain(fb:en.const),fb:en.letnum),1,) : 1
      contain(and(fb:en.const,fb:en.any)) : 1
      repeat(and(fb:en.let,contain(fb:en.const)),1,) : 1
      and(fb:en.const,contain(fb:en.const)) : 2
      contain(and(fb:en.any,fb:en.const)) : 1
      and(fb:en.letnum,fb:en.let) : 1
      repeat(and(fb:en.letnum,fb:en.let),1,) : 1
      and(fb:en.let,repeat(contain(fb:en.const),1,)) : 1
      and(fb:en.const,fb:en.letnum) : 1
      repeat(contain(and(fb:en.let,fb:en.const)),1,) : 1
      repeat(contain(and(fb:en.const,fb:en.let)),1,) : 1
      and(fb:en.any,contain(fb:en.const)) : 1
      and(fb:en.const,fb:en.let) : 1
      repeat(contain(fb:en.let),1,) : 1
      and(repeat(contain(fb:en.const),1,),fb:en.let) : 1
      contain(and(contain(fb:en.const),fb:en.const)) : 1
      repeat(and(fb:en.letnum,contain(fb:en.const)),1,) : 1
      repeat(contain(and(fb:en.const,fb:en.any)),1,) : 1
      repeat(contain(and(contain(fb:en.const),fb:en.const)),1,) : 1
      repeat(and(fb:en.letnum,fb:en.const),1,) : 1
      fb:en.any : 1
      and(contain(fb:en.const),fb:en.letnum) : 1
      repeat(and(fb:en.const,fb:en.let),1,) : 1
      contain(and(fb:en.const,fb:en.const)) : 2
      and(fb:en.const,fb:en.const) : 2
      and(fb:en.any,fb:en.const) : 1
      contain(fb:en.any) : 1
      and(fb:en.const,fb:en.any) : 1
      and(repeat(fb:en.letnum,1,),contain(fb:en.const)) : 1
      and(contain(fb:en.const),fb:en.any) : 1
      and(repeat(fb:en.const,1,),fb:en.any) : 1
      and(repeat(contain(fb:en.const),1,),fb:en.const) : 1
      and(fb:en.let,fb:en.letnum) : 1
      and(contain(fb:en.const),repeat(fb:en.const,1,)) : 1
      fb:en.let : 1
      and(repeat(fb:en.letnum,1,),fb:en.any) : 1
      and(fb:en.let,fb:en.const) : 1
      repeat(and(fb:en.let,fb:en.letnum),1,) : 1
      repeat(contain(and(fb:en.any,fb:en.const)),1,) : 1
      repeat(and(contain(fb:en.const),fb:en.let),1,) : 1
      and(fb:en.let,contain(fb:en.const)) : 1
      repeat(and(fb:en.any,contain(fb:en.const)),1,) : 1
      repeat(fb:en.const,1,) : 2
      and(contain(fb:en.const),contain(fb:en.const)) : 2
      repeat(and(fb:en.any,fb:en.letnum),1,) : 1
      contain(and(fb:en.const,contain(fb:en.const))) : 1
      contain(and(fb:en.const,fb:en.let)) : 1
      repeat(and(fb:en.let,fb:en.const),1,) : 1
      contain(fb:en.const) : 3
      and(repeat(fb:en.letnum,1,),fb:en.let) : 1
      and(fb:en.any,repeat(contain(fb:en.const),1,)) : 1
      and(fb:en.let,repeat(fb:en.const,1,)) : 1
      repeat(and(fb:en.const,fb:en.letnum),1,) : 1
      repeat(and(fb:en.const,contain(fb:en.const)),1,) : 2
      and(fb:en.let,repeat(fb:en.letnum,1,)) : 1
      and(repeat(fb:en.const,1,),fb:en.const) : 1
      and(fb:en.any,repeat(fb:en.const,1,)) : 1
      and(fb:en.const,repeat(fb:en.letnum,1,)) : 1
      contain(and(fb:en.let,fb:en.const)) : 1
      repeat(contain(and(fb:en.const,contain(fb:en.const))),1,) : 1
      and(fb:en.const,repeat(fb:en.const,1,)) : 1
      repeat(and(fb:en.any,fb:en.const),1,) : 1
      repeat(contain(contain(fb:en.const)),1,) : 1
      and(fb:en.const,repeat(contain(fb:en.const),1,)) : 1
      contain(fb:en.let) : 1
      repeat(and(fb:en.const,fb:en.any),1,) : 1
      and(contain(fb:en.const),repeat(fb:en.letnum,1,)) : 1
      and(fb:en.any,repeat(fb:en.letnum,1,)) : 1
      and(repeat(fb:en.const,1,),fb:en.let) : 1
      and(fb:en.letnum,fb:en.const) : 1
      repeat(contain(fb:en.any),1,) : 1
      and(repeat(contain(fb:en.const),1,),contain(fb:en.const)) : 1
      and(fb:en.any,fb:en.letnum) : 1
      fb:en.const : 2
      repeat(contain(and(fb:en.const,fb:en.const)),1,) : 2
      and(repeat(contain(fb:en.const),1,),fb:en.any) : 1
      repeat(and(contain(fb:en.const),contain(fb:en.const)),1,) : 2
  Line 1: It should not allow leading/trailing <M2> also.
    Top prediction: not(fb:en.const)
    All 2 derivations and their counts: 
      not(fb:en.const) : 1
      fb:en.const : 1
=======================================================
Test on utterance 79:
  Line 0: I'm trying to use regular expressions to match a string that does not contain the sequence of characters of a less than symbol ( <M0> ) followed by a non <M1>.
    Top prediction: not(fb:en.any)
    All 116 derivations and their counts: 
      not(not(fb:en.any)) : 3
      not(contain(followedby(fb:en.const,not(fb:en.const)))) : 1
      followedby(not(fb:en.const),fb:en.const) : 1
      followedby(not(fb:en.any),fb:en.let) : 1
      not(followedby(not(fb:en.any),fb:en.any)) : 1
      followedby(fb:en.let,not(fb:en.const)) : 1
      followedby(fb:en.any,fb:en.any) : 1
      not(followedby(contain(fb:en.const),fb:en.const)) : 1
      contain(followedby(fb:en.any,not(fb:en.const))) : 1
      not(followedby(not(contain(fb:en.any)),fb:en.const)) : 1
      not(not(contain(followedby(fb:en.any,fb:en.const)))) : 2
      followedby(fb:en.any,contain(fb:en.any)) : 1
      followedby(not(contain(fb:en.let)),fb:en.const) : 2
      followedby(not(contain(fb:en.const)),fb:en.const) : 1
      not(followedby(not(fb:en.any),contain(fb:en.let))) : 1
      not(contain(followedby(fb:en.let,fb:en.const))) : 3
      not(fb:en.const) : 4
      not(followedby(fb:en.any,not(fb:en.const))) : 2
      not(not(fb:en.let)) : 2
      contain(followedby(fb:en.const,not(fb:en.const))) : 1
      not(followedby(fb:en.any,contain(fb:en.const))) : 1
      not(followedby(fb:en.any,not(contain(fb:en.any)))) : 1
      followedby(not(fb:en.any),fb:en.const) : 4
      not(followedby(fb:en.any,fb:en.any)) : 1
      not(contain(fb:en.const)) : 3
      not(followedby(fb:en.any,fb:en.let)) : 1
      followedby(fb:en.any,not(contain(fb:en.let))) : 1
      contain(fb:en.any) : 1
      contain(followedby(fb:en.let,fb:en.const)) : 2
      not(contain(followedby(fb:en.any,not(fb:en.const)))) : 1
      followedby(contain(fb:en.any),not(fb:en.const)) : 1
      followedby(fb:en.any,contain(fb:en.let)) : 1
      followedby(not(fb:en.any),contain(fb:en.const)) : 1
      not(contain(not(fb:en.let))) : 1
      not(contain(not(fb:en.const))) : 2
      not(followedby(fb:en.const,fb:en.const)) : 1
      not(followedby(not(fb:en.let),fb:en.const)) : 1
      not(contain(not(followedby(fb:en.any,fb:en.const)))) : 1
      not(not(contain(fb:en.const))) : 2
      not(followedby(contain(fb:en.any),not(fb:en.const))) : 1
      not(fb:en.let) : 2
      not(followedby(fb:en.let,not(fb:en.const))) : 1
      not(contain(followedby(fb:en.any,fb:en.const))) : 3
      followedby(fb:en.any,not(fb:en.const)) : 3
      not(followedby(fb:en.const,not(fb:en.const))) : 1
      followedby(contain(fb:en.const),not(fb:en.const)) : 1
      followedby(not(fb:en.any),contain(fb:en.let)) : 1
      not(contain(not(followedby(fb:en.let,fb:en.const)))) : 1
      contain(followedby(fb:en.const,fb:en.const)) : 1
      contain(fb:en.let) : 1
      contain(not(fb:en.const)) : 2
      followedby(not(fb:en.const),not(fb:en.const)) : 1
      not(contain(followedby(fb:en.const,fb:en.const))) : 1
      not(contain(followedby(fb:en.let,not(fb:en.const)))) : 1
      not(followedby(contain(fb:en.let),not(fb:en.const))) : 1
      fb:en.const : 2
      followedby(fb:en.let,fb:en.const) : 2
      followedby(fb:en.const,fb:en.const) : 1
      not(followedby(not(fb:en.any),fb:en.let)) : 1
      not(not(followedby(contain(fb:en.any),fb:en.const))) : 2
      not(followedby(fb:en.any,not(contain(fb:en.let)))) : 1
      not(not(contain(fb:en.let))) : 2
      not(fb:en.any) : 4
      not(contain(fb:en.any)) : 2
      not(followedby(fb:en.any,contain(fb:en.let))) : 1
      not(followedby(fb:en.any,not(fb:en.any))) : 1
      followedby(not(contain(fb:en.let)),not(fb:en.const)) : 1
      followedby(not(fb:en.any),contain(fb:en.any)) : 1
      not(followedby(contain(fb:en.any),fb:en.const)) : 3
      followedby(fb:en.any,fb:en.const) : 4
      not(followedby(not(fb:en.any),contain(fb:en.const))) : 1
      followedby(contain(fb:en.let),not(fb:en.const)) : 1
      not(not(fb:en.const)) : 3
      followedby(fb:en.any,not(fb:en.any)) : 1
      not(contain(fb:en.let)) : 2
      not(followedby(fb:en.any,not(contain(fb:en.const)))) : 1
      followedby(not(fb:en.let),not(fb:en.const)) : 1
      followedby(fb:en.const,not(fb:en.const)) : 1
      not(not(followedby(fb:en.let,fb:en.const))) : 2
      not(not(contain(followedby(fb:en.let,fb:en.const)))) : 2
      not(followedby(fb:en.any,contain(fb:en.any))) : 1
      followedby(not(fb:en.any),fb:en.any) : 1
      not(followedby(fb:en.any,fb:en.const)) : 4
      not(not(contain(fb:en.any))) : 2
      followedby(contain(fb:en.let),fb:en.const) : 2
      followedby(not(contain(fb:en.const)),not(fb:en.const)) : 1
      fb:en.any : 2
      not(followedby(not(fb:en.any),fb:en.const)) : 2
      contain(followedby(fb:en.let,not(fb:en.const))) : 1
      followedby(not(contain(fb:en.any)),not(fb:en.const)) : 1
      followedby(not(fb:en.let),fb:en.const) : 2
      contain(followedby(fb:en.any,fb:en.const)) : 2
      fb:en.let : 1
      contain(not(followedby(fb:en.any,fb:en.const))) : 1
      contain(not(followedby(fb:en.let,fb:en.const))) : 1
      not(not(followedby(contain(fb:en.let),fb:en.const))) : 2
      contain(not(fb:en.let)) : 1
      not(followedby(contain(fb:en.const),not(fb:en.const))) : 1
      not(followedby(not(fb:en.any),contain(fb:en.any))) : 1
      followedby(fb:en.any,contain(fb:en.const)) : 1
      not(followedby(not(contain(fb:en.let)),fb:en.const)) : 1
      followedby(fb:en.any,not(fb:en.let)) : 1
      contain(not(fb:en.any)) : 1
      contain(fb:en.const) : 2
      followedby(fb:en.any,not(contain(fb:en.any))) : 1
      not(not(followedby(fb:en.any,fb:en.const))) : 2
      followedby(fb:en.any,fb:en.let) : 1
      not(followedby(fb:en.let,fb:en.const)) : 3
      not(followedby(contain(fb:en.let),fb:en.const)) : 3
      followedby(contain(fb:en.any),fb:en.const) : 2
      followedby(not(fb:en.any),not(fb:en.const)) : 2
      not(contain(not(fb:en.any))) : 1
      not(followedby(fb:en.any,not(fb:en.let))) : 1
      followedby(fb:en.any,not(contain(fb:en.const))) : 1
      followedby(contain(fb:en.const),fb:en.const) : 1
      followedby(not(contain(fb:en.any)),fb:en.const) : 2
=======================================================
Test on utterance 80:
  Line 0: the number with 10 or more digits and that number should not have <M0> symbol in front of it.
    Top prediction: or(and(not(fb:en.num),fb:en.num),fb:en.num)
derivSize == beamSize
    All 154 derivations and their counts: 
      contain(repeat(contain(fb:en.const),10,)) : 1
      contain(and(repeat(fb:en.num,10),not(fb:en.const))) : 1
      contain(not(repeat(fb:en.num,10,))) : 2
      or(not(fb:en.const),fb:en.num) : 1
      or(and(not(fb:en.num),fb:en.num),fb:en.num) : 1
      and(or(fb:en.num,fb:en.num),fb:en.const) : 2
      contain(and(not(fb:en.num),repeat(fb:en.num,10))) : 1
      contain(repeat(and(fb:en.num,fb:en.const),10)) : 1
      contain(repeat(and(contain(fb:en.const),fb:en.num),10)) : 1
      contain(repeat(and(fb:en.num,contain(fb:en.const)),10,)) : 1
      contain(repeat(contain(fb:en.const),10)) : 1
      or(and(fb:en.const,fb:en.num),fb:en.num) : 1
      contain(repeat(not(fb:en.const),10)) : 1
      and(not(fb:en.num),contain(repeat(fb:en.num,10))) : 1
      contain(and(not(contain(fb:en.const)),repeat(fb:en.num,10))) : 1
      and(not(contain(fb:en.const)),fb:en.num) : 1
      contain(repeat(fb:en.num,10,)) : 2
      fb:en.num : 1
      or(fb:en.num,and(fb:en.num,not(fb:en.const))) : 1
      contain(repeat(fb:en.const,10)) : 1
      contain(repeat(and(fb:en.const,fb:en.num),10)) : 1
      contain(not(repeat(fb:en.num,10))) : 2
      contain(not(and(repeat(fb:en.num,10,),fb:en.num))) : 1
      contain(and(not(contain(fb:en.const)),fb:en.num)) : 1
      not(and(fb:en.num,or(fb:en.num,fb:en.num))) : 2
      contain(and(fb:en.num,repeat(fb:en.num,10))) : 1
      not(fb:en.num) : 1
      contain(and(fb:en.const,repeat(fb:en.num,10))) : 1
      contain(repeat(and(not(contain(fb:en.const)),fb:en.num),10,)) : 1
      or(fb:en.num,not(fb:en.num)) : 2
      and(not(contain(fb:en.const)),or(fb:en.num,fb:en.num)) : 2
      or(fb:en.num,contain(fb:en.const)) : 1
      and(fb:en.num,fb:en.const) : 1
      or(and(fb:en.num,not(fb:en.num)),fb:en.num) : 1
      contain(and(repeat(fb:en.num,10),fb:en.num)) : 1
      contain(repeat(not(fb:en.num),10,)) : 2
      contain(and(repeat(fb:en.num,10,),fb:en.const)) : 1
      and(fb:en.num,not(fb:en.num)) : 1
      contain(repeat(and(not(contain(fb:en.const)),fb:en.num),10)) : 1
      contain(repeat(and(contain(fb:en.const),fb:en.num),10,)) : 1
      and(or(fb:en.num,fb:en.num),contain(fb:en.const)) : 2
      contain(repeat(not(fb:en.num),10)) : 2
      contain(repeat(and(fb:en.num,fb:en.const),10,)) : 1
      and(not(fb:en.num),contain(fb:en.num)) : 1
      or(and(fb:en.num,fb:en.num),fb:en.num) : 2
      contain(repeat(and(fb:en.num,contain(fb:en.const)),10)) : 1
      contain(not(fb:en.num)) : 2
      contain(not(repeat(and(fb:en.num,fb:en.num),10))) : 2
      contain(repeat(and(fb:en.num,not(fb:en.const)),10)) : 1
      or(fb:en.num,and(fb:en.num,fb:en.num)) : 2
      contain(and(fb:en.num,repeat(fb:en.num,10,))) : 1
      contain(repeat(fb:en.const,10,)) : 1
      contain(not(and(fb:en.num,repeat(fb:en.num,10,)))) : 1
      contain(and(repeat(fb:en.num,10,),fb:en.num)) : 1
      contain(repeat(not(contain(fb:en.const)),10)) : 1
      contain(not(and(fb:en.num,repeat(fb:en.num,10)))) : 1
      contain(fb:en.num) : 2
      contain(and(repeat(fb:en.num,10),fb:en.const)) : 1
      or(not(and(fb:en.num,fb:en.num)),fb:en.num) : 2
      or(fb:en.num,and(not(fb:en.const),fb:en.num)) : 1
      contain(and(fb:en.const,fb:en.num)) : 1
      and(not(fb:en.num),or(fb:en.num,fb:en.num)) : 2
      and(or(fb:en.num,fb:en.num),not(contain(fb:en.const))) : 2
      contain(repeat(and(not(fb:en.num),fb:en.num),10)) : 1
      and(fb:en.num,contain(fb:en.const)) : 1
      or(and(not(contain(fb:en.const)),fb:en.num),fb:en.num) : 1
      and(or(fb:en.num,fb:en.num),not(fb:en.const)) : 2
      contain(repeat(and(fb:en.num,fb:en.num),10)) : 2
      or(fb:en.num,and(fb:en.const,fb:en.num)) : 1
      contain(repeat(not(and(fb:en.num,fb:en.num)),10,)) : 2
      contain(repeat(and(fb:en.num,not(contain(fb:en.const))),10,)) : 1
      contain(not(and(repeat(fb:en.num,10),fb:en.num))) : 1
      not(and(fb:en.num,fb:en.num)) : 2
      or(fb:en.num,fb:en.const) : 1
      or(fb:en.num,and(fb:en.num,not(contain(fb:en.const)))) : 1
      and(or(fb:en.num,fb:en.num),not(fb:en.num)) : 2
      and(fb:en.const,or(fb:en.num,fb:en.num)) : 2
      and(not(fb:en.num),contain(repeat(fb:en.num,10,))) : 1
      contain(repeat(and(fb:en.num,not(contain(fb:en.const))),10)) : 1
      contain(repeat(and(not(fb:en.const),fb:en.num),10,)) : 1
      or(and(fb:en.num,fb:en.const),fb:en.num) : 1
      contain(and(repeat(fb:en.num,10),contain(fb:en.const))) : 1
      or(and(contain(fb:en.const),fb:en.num),fb:en.num) : 1
      and(or(fb:en.num,fb:en.num),fb:en.num) : 2
      contain(repeat(and(not(fb:en.const),fb:en.num),10)) : 1
      contain(repeat(fb:en.num,10)) : 2
      contain(repeat(and(not(fb:en.num),fb:en.num),10,)) : 1
      contain(and(contain(fb:en.const),repeat(fb:en.num,10))) : 1
      contain(and(not(fb:en.const),fb:en.num)) : 1
      contain(repeat(and(fb:en.num,not(fb:en.num)),10)) : 1
      and(fb:en.num,or(fb:en.num,fb:en.num)) : 2
      contain(and(contain(fb:en.const),repeat(fb:en.num,10,))) : 1
      and(contain(fb:en.const),fb:en.num) : 1
      contain(and(fb:en.num,not(contain(fb:en.const)))) : 1
      contain(not(repeat(and(fb:en.num,fb:en.num),10,))) : 2
      not(or(fb:en.num,and(fb:en.num,fb:en.num))) : 2
      or(fb:en.num,and(fb:en.num,not(fb:en.num))) : 1
      contain(and(fb:en.num,not(fb:en.num))) : 1
      contain(and(fb:en.num,fb:en.const)) : 1
      contain(and(repeat(fb:en.num,10,),not(fb:en.const))) : 1
      contain(repeat(and(fb:en.num,fb:en.num),10,)) : 2
      contain(and(not(fb:en.const),repeat(fb:en.num,10))) : 1
      contain(and(not(contain(fb:en.const)),repeat(fb:en.num,10,))) : 1
      contain(and(not(fb:en.num),repeat(fb:en.num,10,))) : 1
      and(fb:en.num,contain(fb:en.num)) : 1
      contain(and(fb:en.num,contain(fb:en.const))) : 1
      or(fb:en.num,and(fb:en.num,fb:en.const)) : 1
      contain(and(not(fb:en.const),repeat(fb:en.num,10,))) : 1
      and(fb:en.const,fb:en.num) : 1
      or(and(fb:en.num,not(contain(fb:en.const))),fb:en.num) : 1
      and(not(fb:en.const),or(fb:en.num,fb:en.num)) : 2
      and(fb:en.num,not(fb:en.const)) : 1
      contain(and(repeat(fb:en.num,10,),not(fb:en.num))) : 1
      or(contain(fb:en.const),fb:en.num) : 1
      or(fb:en.num,and(not(contain(fb:en.const)),fb:en.num)) : 1
      or(and(fb:en.num,contain(fb:en.const)),fb:en.num) : 1
      or(fb:en.num,not(contain(fb:en.const))) : 1
      or(fb:en.num,not(and(fb:en.num,fb:en.num))) : 2
      contain(repeat(and(fb:en.num,not(fb:en.const)),10,)) : 1
      or(fb:en.num,and(contain(fb:en.const),fb:en.num)) : 1
      not(or(fb:en.num,fb:en.num)) : 4
      and(fb:en.num,fb:en.num) : 2
      contain(and(repeat(fb:en.num,10),not(fb:en.num))) : 1
      contain(and(repeat(fb:en.num,10,),contain(fb:en.const))) : 1
      or(fb:en.num,not(fb:en.const)) : 1
      or(fb:en.num,and(not(fb:en.num),fb:en.num)) : 1
      not(and(or(fb:en.num,fb:en.num),fb:en.num)) : 2
      or(fb:en.num,fb:en.num) : 4
      not(or(and(fb:en.num,fb:en.num),fb:en.num)) : 2
      contain(and(fb:en.num,not(fb:en.const))) : 1
      and(fb:en.num,contain(repeat(fb:en.num,10))) : 1
      and(fb:en.num,contain(repeat(fb:en.num,10,))) : 1
      contain(repeat(not(fb:en.const),10,)) : 1
      contain(and(not(fb:en.num),fb:en.num)) : 1
      and(fb:en.num,not(contain(fb:en.const))) : 1
      contain(not(and(fb:en.num,fb:en.num))) : 2
      contain(and(repeat(fb:en.num,10),not(contain(fb:en.const)))) : 1
      contain(repeat(not(contain(fb:en.const)),10,)) : 1
      or(and(fb:en.num,not(fb:en.const)),fb:en.num) : 1
      or(not(contain(fb:en.const)),fb:en.num) : 1
      contain(and(fb:en.num,fb:en.num)) : 2
      or(fb:en.const,fb:en.num) : 1
      contain(and(fb:en.const,repeat(fb:en.num,10,))) : 1
      or(and(not(fb:en.const),fb:en.num),fb:en.num) : 1
      and(not(fb:en.const),fb:en.num) : 1
      contain(and(repeat(fb:en.num,10,),not(contain(fb:en.const)))) : 1
      and(not(fb:en.num),fb:en.num) : 1
      contain(repeat(not(and(fb:en.num,fb:en.num)),10)) : 2
      or(fb:en.num,and(fb:en.num,contain(fb:en.const))) : 1
      and(contain(fb:en.const),or(fb:en.num,fb:en.num)) : 2
      contain(repeat(and(fb:en.num,not(fb:en.num)),10,)) : 1
      or(not(fb:en.num),fb:en.num) : 2
      contain(repeat(and(fb:en.const,fb:en.num),10,)) : 1
      contain(and(contain(fb:en.const),fb:en.num)) : 1
=======================================================
Test on utterance 81:
  Line 0: It should allow only one <M0> between words. 
    Top prediction: repeat(repeat(fb:en.const,1),1,)
    All 8 derivations and their counts: 
      repeat(repeat(fb:en.const,1),1,) : 1
      repeat(fb:en.const,1,) : 1
      repeat(fb:en.const,1) : 2
      repeat(fb:en.any,1) : 2
      fb:en.const : 1
      fb:en.any : 1
      repeat(fb:en.any,1,) : 1
      repeat(repeat(fb:en.any,1),1,) : 1
  Line 1: That is, total number of <M1> between words or characters should only be one.
    Top prediction: or(fb:en.let,fb:en.num)
    All 15 derivations and their counts: 
      or(fb:en.let,fb:en.num) : 1
      fb:en.num : 1
      or(fb:en.let,fb:en.any) : 1
      or(fb:en.any,fb:en.num) : 1
      or(fb:en.num,fb:en.any) : 1
      fb:en.let : 1
      or(fb:en.let,fb:en.const) : 1
      or(fb:en.any,fb:en.let) : 1
      or(fb:en.num,fb:en.let) : 1
      or(fb:en.const,fb:en.any) : 1
      or(fb:en.any,fb:en.const) : 1
      or(fb:en.const,fb:en.let) : 1
      fb:en.const : 1
      fb:en.any : 2
      or(fb:en.any,fb:en.any) : 2
  Line 2: It should ignore leading and trailing <M2>.
    Top prediction: endwith(fb:en.const)
    All 2 derivations and their counts: 
      endwith(fb:en.const) : 1
      fb:en.const : 1
=======================================================
Test on utterance 82:
  Line 0: I want to limit mamimum total digit counts are 5. 
    Top prediction: fb:en.num
    All 1 derivations and their counts: 
      fb:en.num : 1
  Line 1: And decimal numbers are 2 positions for maximum, 
    Top prediction: fb:en.dp
    All 2 derivations and their counts: 
      fb:en.num : 1
      fb:en.dp : 1
  Line 2: cannot exceed 2 digits, 
    Top prediction: not(repeat(fb:en.num,2))
    All 4 derivations and their counts: 
      not(repeat(fb:en.num,2)) : 1
      fb:en.num : 1
      repeat(fb:en.num,2) : 1
      not(fb:en.num) : 1
  Line 3: but need to valid total word count is not large than 5.
    Top prediction: not(fb:en.any)
    All 2 derivations and their counts: 
      not(fb:en.any) : 1
      fb:en.any : 1
=======================================================
Test on utterance 83:
  Line 0: I'm trying to validate a form using regular expressions, 
    Top prediction: 
  Line 1: the conditions are:
    Top prediction: 
  Line 2: It has to be a numeric value
    Top prediction: contain(fb:en.num)
    All 2 derivations and their counts: 
      fb:en.num : 1
      contain(fb:en.num) : 1
  Line 3: It CAN have up to three decimal places(0,1,2 are allowed too)
    Top prediction: contain(repeat(fb:en.dp,1,3))
    All 6 derivations and their counts: 
      contain(fb:en.dp) : 1
      repeat(fb:en.dp,1,3) : 1
      fb:en.dp : 1
      contain(repeat(fb:en.dp,3)) : 1
      contain(repeat(fb:en.dp,1,3)) : 1
      repeat(fb:en.dp,3) : 1
  Line 4: It has to be divided by a comma(<M0>)
    Top prediction: contain(sep(fb:en.const))
    All 4 derivations and their counts: 
      sep(fb:en.const) : 1
      fb:en.const : 1
      contain(sep(fb:en.const)) : 1
      contain(fb:en.const) : 1
=======================================================
Test on utterance 84:
  Line 0: I am trying to make a regular expression that validates letters, numbers and <M0> ONLY.???
    Top prediction: and(fb:en.const,fb:en.let)
    All 7 derivations and their counts: 
      fb:en.num : 1
      and(fb:en.const,fb:en.let) : 1
      fb:en.let : 1
      fb:en.const : 1
      and(fb:en.let,fb:en.const) : 1
      and(fb:en.const,fb:en.num) : 1
      and(fb:en.num,fb:en.const) : 1
=======================================================
Test on utterance 85:
  Line 0: The input box should accept only if either (1) first 2 letters <M0> + 6 numeric or (2) 8 numeric
    Top prediction: repeat(repeat(repeat(repeat(or(repeat(repeat(fb:en.num,8),2),fb:en.let),2),1),1),1,)
derivSize == beamSize
    All 192 derivations and their counts: 
      repeat(repeat(repeat(repeat(fb:en.const,2),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2),repeat(repeat(fb:en.num,8),2)),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2),fb:en.const),1,2),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.const,repeat(fb:en.num,2)),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,8),fb:en.const),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,6),repeat(repeat(fb:en.num,8),2)),2),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.let,fb:en.num),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.num,repeat(fb:en.num,8)),2,6),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2,6),fb:en.num),1),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(repeat(fb:en.num,8),6),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.let,fb:en.num),2),1),1),1,) : 1
      repeat(repeat(repeat(fb:en.let,1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2),repeat(fb:en.const,2)),1),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(repeat(fb:en.num,2,8),6),2),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.const,repeat(fb:en.num,8)),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.let,repeat(fb:en.num,8)),2),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(repeat(fb:en.num,8),2),repeat(fb:en.const,2)),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.let,repeat(fb:en.num,2,8)),1,2),1),1,) : 1
      repeat(repeat(repeat(or(repeat(repeat(fb:en.num,8),2),fb:en.let),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,2),fb:en.num),6),1,2),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,6),repeat(fb:en.num,8)),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.num,repeat(repeat(fb:en.num,8),2)),2,6),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.let,repeat(fb:en.num,2)),2),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2,8),repeat(fb:en.let,2)),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.const,2),repeat(repeat(fb:en.num,8),2)),1),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(or(fb:en.num,repeat(fb:en.num,8)),6),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.num,fb:en.const),2),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.let,2),repeat(fb:en.num,2,8)),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,2,8),fb:en.num),2,6),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.const,repeat(fb:en.num,2)),1,2),1),1,) : 1
      repeat(repeat(repeat(repeat(fb:en.num,2,2),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.let,repeat(repeat(fb:en.num,8),2)),1,2),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,2),repeat(fb:en.num,6)),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(repeat(fb:en.num,8),2),fb:en.const),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(repeat(repeat(fb:en.num,8),2),6),2),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.let,2),repeat(repeat(fb:en.num,8),2)),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.const,2),repeat(fb:en.num,2,8)),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.let,repeat(fb:en.num,8)),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2,6),repeat(fb:en.num,2,8)),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.num,repeat(fb:en.num,8)),6),1,2),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(repeat(fb:en.num,8),2),fb:en.let),2),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2,6),repeat(fb:en.num,8)),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.const,repeat(repeat(fb:en.num,8),2)),1,2),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.num,repeat(fb:en.num,2)),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.const,fb:en.num),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,2,8),fb:en.num),6),1,2),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(fb:en.num,6),2),1),1),1,) : 2
      repeat(repeat(repeat(or(fb:en.num,fb:en.const),1,2),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.num,repeat(fb:en.num,8)),2),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2),repeat(fb:en.num,2,8)),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,6),repeat(fb:en.num,2,8)),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(6,2),2),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2,6),repeat(repeat(fb:en.num,8),2)),1),1),1,) : 1
      repeat(repeat(repeat(or(2,8),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(repeat(fb:en.num,8),2),repeat(repeat(fb:en.num,6),2)),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2),fb:en.const),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,2,8),fb:en.const),2),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2),repeat(fb:en.num,2,6)),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(repeat(fb:en.num,6),2),repeat(fb:en.num,2,8)),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.num,repeat(repeat(fb:en.num,8),2)),6),1,2),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(repeat(fb:en.num,8),2),2,6),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,8),repeat(fb:en.num,2)),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2),repeat(fb:en.num,8)),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2),fb:en.let),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.num,repeat(fb:en.num,2,6)),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2),fb:en.num),1),1),1,) : 1
      repeat(repeat(repeat(repeat(fb:en.num,2),1),1),1,) : 2
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,2),fb:en.let),2),1),1),1,) : 1
      repeat(repeat(repeat(fb:en.const,1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2,8),repeat(fb:en.num,2,6)),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(repeat(fb:en.num,6),2),repeat(fb:en.num,8)),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(repeat(fb:en.num,6),2),fb:en.num),1),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(or(fb:en.num,fb:en.num),6),2),1),1),1,) : 2
      repeat(repeat(repeat(or(repeat(repeat(fb:en.num,8),2),repeat(fb:en.num,2,6)),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(repeat(fb:en.num,8),2),repeat(fb:en.num,2)),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(repeat(fb:en.num,8),2),repeat(fb:en.num,6)),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(fb:en.num,2,8),2,6),1),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(fb:en.num,8),2,2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.num,repeat(fb:en.num,2,8)),2),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.num,fb:en.let),1,2),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2,8),fb:en.const),1,2),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,2,8),fb:en.num),2),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.let,repeat(fb:en.num,2)),1,2),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.num,repeat(fb:en.num,6)),2),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.let,repeat(fb:en.num,2,8)),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,6),repeat(fb:en.num,2)),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,8),repeat(fb:en.num,6)),2),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(repeat(fb:en.num,8),2),fb:en.const),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.const,repeat(fb:en.num,2,8)),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.const,repeat(repeat(fb:en.num,8),2)),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(fb:en.num,6,8),2),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.let,2),repeat(fb:en.num,2)),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2),repeat(fb:en.num,2)),1),1),1,) : 2
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,8),fb:en.let),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(fb:en.num,2,6),1),1),1,) : 2
      repeat(repeat(repeat(or(repeat(fb:en.let,2),repeat(fb:en.num,8)),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.const,repeat(fb:en.num,8)),1,2),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(or(fb:en.num,repeat(repeat(fb:en.num,8),2)),6),2),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.const,fb:en.num),1,2),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(fb:en.num,8),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(fb:en.let,2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.let,repeat(repeat(fb:en.num,8),2)),2),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2,8),fb:en.let),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,8),fb:en.num),2,6),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.let,fb:en.num),1,2),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(fb:en.num,2,8),2),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,6),repeat(fb:en.num,2,8)),1,2),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(or(repeat(fb:en.num,2,8),fb:en.num),6),2),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,6),repeat(repeat(fb:en.num,8),2)),1,2),1),1,) : 1
      repeat(repeat(repeat(or(repeat(repeat(fb:en.num,8),2),repeat(fb:en.num,6)),1,2),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(repeat(fb:en.num,8),6,2),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.const,repeat(fb:en.num,8)),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(repeat(fb:en.num,8),2),fb:en.num),2,6),1),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(repeat(fb:en.num,8),2),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(repeat(fb:en.num,8),2),fb:en.num),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,2),fb:en.num),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.num,repeat(fb:en.num,2)),6),1,2),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,2),fb:en.const),2),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2),repeat(repeat(fb:en.num,6),2)),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,8),repeat(fb:en.const,2)),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.const,repeat(fb:en.num,2,8)),1),1),1,) : 1
      repeat(repeat(repeat(fb:en.const,1,2),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.let,repeat(repeat(fb:en.num,8),2)),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,8),fb:en.const),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2,8),repeat(fb:en.num,2)),1),1),1,) : 1
      repeat(repeat(repeat(repeat(fb:en.num,6),1,2),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2,8),repeat(repeat(fb:en.num,6),2)),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.num,fb:en.let),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,8),fb:en.let),1),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(fb:en.num,6,2),2),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.const,fb:en.num),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(repeat(fb:en.num,6),2),repeat(fb:en.num,2)),1),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(fb:en.num,8),2,6),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2,8),fb:en.const),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,8),repeat(fb:en.num,2,6)),1),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(or(fb:en.num,repeat(fb:en.num,2)),6),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.num,repeat(fb:en.num,2)),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.num,fb:en.num),2,6),1),1),1,) : 2
      repeat(repeat(repeat(repeat(or(fb:en.num,fb:en.num),2),1),1),1,) : 2
      repeat(repeat(repeat(repeat(repeat(or(repeat(fb:en.num,2),fb:en.num),6),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.const,repeat(fb:en.num,2)),2),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,8),fb:en.const),1,2),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,8),fb:en.num),6),1,2),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.const,repeat(repeat(fb:en.num,8),2)),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.num,repeat(fb:en.num,2,8)),2,6),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(repeat(fb:en.num,8),2),fb:en.const),1,2),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,8),fb:en.num),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.num,repeat(fb:en.num,2)),2,6),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,2,8),repeat(fb:en.num,6)),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.let,repeat(fb:en.num,2,8)),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(fb:en.num,2),2,6),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,2),fb:en.num),2,6),1),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(or(repeat(fb:en.num,8),fb:en.num),6),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(repeat(fb:en.num,8),2),fb:en.num),6),1,2),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2,8),repeat(fb:en.num,6)),1,2),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2),repeat(fb:en.num,6)),1,2),1),1,) : 1
      repeat(repeat(repeat(or(2,2),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(repeat(fb:en.num,8),2),fb:en.let),1,2),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,8),fb:en.let),1,2),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2,6),repeat(fb:en.num,2)),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.let,repeat(fb:en.num,8)),1,2),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.num,repeat(fb:en.let,2)),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2,8),repeat(fb:en.const,2)),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.let,repeat(fb:en.num,2)),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.num,fb:en.let),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.num,repeat(repeat(fb:en.num,8),2)),2),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2),repeat(fb:en.let,2)),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,2,8),fb:en.let),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.num,fb:en.num),6),1,2),1),1,) : 2
      repeat(repeat(repeat(repeat(or(6,8),2),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,8),repeat(repeat(fb:en.num,6),2)),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,8),repeat(fb:en.let,2)),1),1),1,) : 1
      repeat(repeat(repeat(repeat(fb:en.num,2,8),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.num,repeat(fb:en.const,2)),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.const,2),repeat(fb:en.num,8)),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.let,2),fb:en.num),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.const,repeat(fb:en.num,2,8)),1,2),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(repeat(fb:en.num,2),6),2),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2,8),fb:en.let),1,2),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.const,2),fb:en.num),1),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(or(repeat(repeat(fb:en.num,8),2),fb:en.num),6),2),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.const,2),repeat(fb:en.num,2)),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(repeat(fb:en.num,8),2),repeat(fb:en.let,2)),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.num,fb:en.const),1),1),1,) : 1
      repeat(repeat(repeat(or(repeat(fb:en.num,2),fb:en.let),1,2),1),1,) : 1
      repeat(repeat(repeat(repeat(or(fb:en.num,repeat(fb:en.num,2,8)),6),1,2),1),1,) : 1
      repeat(repeat(repeat(fb:en.let,1,2),1),1,) : 1
      repeat(repeat(repeat(or(repeat(repeat(fb:en.num,6),2),repeat(repeat(fb:en.num,8),2)),1),1),1,) : 1
      repeat(repeat(repeat(or(fb:en.num,repeat(repeat(fb:en.num,6),2)),1),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(or(fb:en.num,repeat(fb:en.num,2,8)),6),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(repeat(fb:en.num,2),2),1),1),1,) : 1
      repeat(repeat(repeat(repeat(or(repeat(fb:en.num,6),fb:en.num),2),1),1),1,) : 1
=======================================================
Test on utterance 86:
  Line 0: a regular expression for validating a string with alphanumeric characters and <M0>, 
    Top prediction: and(fb:en.const,fb:en.any)
    All 26 derivations and their counts: 
      contain(and(fb:en.const,fb:en.letnum)) : 1
      and(fb:en.any,fb:en.const) : 2
      and(fb:en.const,fb:en.any) : 2
      contain(fb:en.any) : 1
      and(fb:en.const,contain(fb:en.letnum)) : 1
      fb:en.let : 1
      and(fb:en.let,fb:en.const) : 1
      contain(fb:en.letnum) : 1
      and(contain(fb:en.any),fb:en.const) : 1
      and(contain(fb:en.letnum),fb:en.const) : 1
      contain(and(fb:en.letnum,fb:en.const)) : 1
      contain(and(fb:en.const,fb:en.let)) : 1
      and(contain(fb:en.let),fb:en.const) : 1
      fb:en.letnum : 1
      contain(and(fb:en.const,fb:en.any)) : 1
      contain(fb:en.const) : 1
      and(fb:en.const,contain(fb:en.any)) : 1
      contain(and(fb:en.let,fb:en.const)) : 1
      contain(and(fb:en.any,fb:en.const)) : 1
      contain(fb:en.let) : 1
      and(fb:en.const,fb:en.letnum) : 1
      and(fb:en.const,fb:en.let) : 1
      and(fb:en.letnum,fb:en.const) : 1
      and(fb:en.const,contain(fb:en.let)) : 1
      fb:en.any : 2
      fb:en.const : 1
  Line 1: while also not allowing leading or trailing <M1>
    Top prediction: not(endwith(fb:en.const))
    All 4 derivations and their counts: 
      not(endwith(fb:en.const)) : 1
      not(fb:en.const) : 1
      endwith(fb:en.const) : 1
      fb:en.const : 1
=======================================================
Test on utterance 87:
  Line 0: Decimal numbers up to 3 decimal places which are greater than zero
    Top prediction: fb:en.num
    All 4 derivations and their counts: 
      fb:en.num : 1
      repeat(fb:en.dp,1,3) : 1
      fb:en.dp : 2
      repeat(fb:en.dp,3) : 1
=======================================================
Test on utterance 88:
  Line 0: The value can have at max 3 decimals (but also none) with <M0> as the separator.
    Top prediction: contain(repeat(sep(fb:en.dp),1,3))
    All 34 derivations and their counts: 
      contain(repeat(contain(sep(fb:en.const)),3)) : 1
      contain(contain(fb:en.const)) : 1
      contain(sep(fb:en.dp)) : 1
      repeat(fb:en.const,3) : 1
      contain(repeat(fb:en.const,1,3)) : 1
      contain(repeat(fb:en.const,3)) : 1
      repeat(sep(fb:en.dp),3) : 1
      contain(repeat(fb:en.dp,1,3)) : 1
      contain(contain(sep(fb:en.const))) : 1
      contain(repeat(sep(fb:en.const),3)) : 1
      contain(fb:en.dp) : 1
      repeat(sep(fb:en.dp),1,3) : 1
      sep(fb:en.dp) : 1
      repeat(fb:en.dp,1,3) : 1
      contain(repeat(sep(fb:en.const),1,3)) : 1
      repeat(fb:en.dp,3) : 1
      contain(fb:en.const) : 2
      repeat(contain(sep(fb:en.const)),1,3) : 1
      repeat(sep(fb:en.const),3) : 1
      fb:en.dp : 1
      contain(repeat(fb:en.dp,3)) : 1
      sep(fb:en.const) : 1
      contain(repeat(sep(fb:en.dp),3)) : 1
      repeat(fb:en.const,1,3) : 1
      contain(sep(fb:en.const)) : 2
      repeat(contain(sep(fb:en.const)),3) : 1
      contain(repeat(sep(fb:en.dp),1,3)) : 1
      repeat(sep(fb:en.const),1,3) : 1
      repeat(contain(fb:en.const),1,3) : 1
      repeat(contain(fb:en.const),3) : 1
      fb:en.const : 1
      contain(repeat(contain(sep(fb:en.const)),1,3)) : 1
      contain(repeat(contain(fb:en.const),1,3)) : 1
      contain(repeat(contain(fb:en.const),3)) : 1
=======================================================
Test on utterance 89:
  Line 0: I want to use a Regular expression validator in my line edit that doesn't allow to write dot (.) right after dot (.).
    Top prediction: not(followedby(fb:en.dp,fb:en.dp))
    All 5 derivations and their counts: 
      followedby(fb:en.dp,not(fb:en.dp)) : 1
      followedby(fb:en.dp,fb:en.dp) : 1
      fb:en.dp : 2
      not(followedby(fb:en.dp,fb:en.dp)) : 1
      not(fb:en.dp) : 2
=======================================================
Test on utterance 90:
  Line 0: I want regex that only validates that the field contains digits, but that does not care about how many.
    Top prediction: repeat(contain(not(fb:en.num)),1,)
    All 12 derivations and their counts: 
      fb:en.num : 1
      repeat(contain(fb:en.num),1,) : 1
      not(repeat(fb:en.num,1,)) : 1
      repeat(fb:en.num,1,) : 1
      not(repeat(contain(fb:en.num),1,)) : 1
      repeat(not(contain(fb:en.num)),1,) : 1
      contain(not(fb:en.num)) : 1
      not(contain(fb:en.num)) : 1
      not(fb:en.num) : 1
      repeat(contain(not(fb:en.num)),1,) : 1
      repeat(not(fb:en.num),1,) : 1
      contain(fb:en.num) : 1
=======================================================
Test on utterance 91:
  Line 0: The rules are:
    Top prediction: 
  Line 1: The string must be 10-15 total characters in length.
    Top prediction: fb:en.any
    All 2 derivations and their counts: 
      fb:en.let : 1
      fb:en.any : 2
  Line 2: Must contain exactly 10 digits within string.
    Top prediction: contain(repeat(fb:en.num,10))
    All 8 derivations and their counts: 
      repeat(fb:en.num,10) : 1
      repeat(fb:en.any,10) : 1
      fb:en.num : 1
      contain(fb:en.any) : 1
      contain(repeat(fb:en.num,10)) : 1
      fb:en.any : 1
      contain(repeat(fb:en.any,10)) : 1
      contain(fb:en.num) : 1
  Line 3: Can contain " <M0> ", " <M1> " , "<M2>", " <M3> ", or " <M4> " delimiters within the string.
    Top prediction: contain(or(fb:en.const,fb:en.const))
    All 14 derivations and their counts: 
      contain(or(fb:en.const,fb:en.any)) : 4
      contain(fb:en.any) : 1
      or(contain(fb:en.const),fb:en.any) : 4
      contain(or(fb:en.any,fb:en.const)) : 4
      or(fb:en.const,fb:en.const) : 8
      or(fb:en.any,contain(fb:en.const)) : 4
      or(fb:en.const,fb:en.any) : 4
      or(fb:en.any,fb:en.const) : 4
      contain(or(fb:en.const,fb:en.const)) : 8
      or(fb:en.const,contain(fb:en.const)) : 4
      or(contain(fb:en.const),fb:en.const) : 4
      fb:en.const : 5
      fb:en.any : 1
      contain(fb:en.const) : 5
  Line 4: It doesn't matter how many delimiters are grouped as long as numbers are grouped in {3}{3}{4}.
    Top prediction: not(fb:en.num)
    All 2 derivations and their counts: 
      fb:en.num : 1
      not(fb:en.num) : 1
=======================================================
Test on utterance 92:
  Line 0: I am now in need of a Reg Exp (for validation putsposes) that checks that the user enters a number according to the following rules.
    Top prediction: fb:en.num
    All 1 derivations and their counts: 
      fb:en.num : 1
  Line 1: no alpha characters
    Top prediction: fb:en.let
    All 2 derivations and their counts: 
      fb:en.let : 1
      fb:en.any : 1
  Line 2: can have decimal
    Top prediction: contain(fb:en.dp)
    All 2 derivations and their counts: 
      contain(fb:en.dp) : 1
      fb:en.dp : 1
  Line 3: can have <M0> for the thousands, but the <M1> must be correctly placed
    Top prediction: contain(fb:en.const)
    All 2 derivations and their counts: 
      fb:en.const : 2
      contain(fb:en.const) : 2
=======================================================
Test on utterance 93:
  Line 0: I'm trying to validate an input field to accept x OR x+y where x and y are whole numbers from 1-10.
    Top prediction: fb:en.num
    All 1 derivations and their counts: 
      fb:en.num : 1
=======================================================
Test on utterance 94:
  Line 0: I'm trying to write a regular expression to validate a number that is either just a 0 OR at least 1000 and that also allows a <M0> for a thousand separator.
    Top prediction: or(sep(fb:en.const),fb:en.num)
    All 17 derivations and their counts: 
      or(0,1000) : 1
      fb:en.num : 1
      or(fb:en.num,sep(fb:en.const)) : 1
      repeat(fb:en.const,0) : 1
      and(sep(fb:en.const),fb:en.num) : 1
      sep(fb:en.const) : 1
      repeat(sep(fb:en.const),0,) : 1
      or(fb:en.const,fb:en.num) : 1
      and(fb:en.const,fb:en.num) : 1
      or(fb:en.num,fb:en.const) : 1
      and(fb:en.num,fb:en.const) : 1
      repeat(fb:en.const,0,) : 1
      sep(fb:en.num) : 1
      and(fb:en.num,sep(fb:en.const)) : 1
      repeat(sep(fb:en.const),0) : 1
      or(sep(fb:en.const),fb:en.num) : 1
      fb:en.const : 1
=======================================================
Test on utterance 95:
  Line 0: I am writing a regular expression to validate a zip code, 
    Top prediction: 
  Line 1: where it should have exactly a length of 6 characters, 
    Top prediction: contain(repeat(repeat(fb:en.let,6),1))
    All 16 derivations and their counts: 
      contain(repeat(fb:en.any,1)) : 1
      contain(repeat(repeat(fb:en.any,6),1)) : 1
      contain(repeat(fb:en.any,6)) : 1
      contain(fb:en.any) : 1
      repeat(repeat(fb:en.any,6),1) : 1
      repeat(fb:en.any,1) : 1
      repeat(repeat(fb:en.let,6),1) : 1
      fb:en.let : 1
      contain(fb:en.let) : 1
      repeat(fb:en.any,6) : 1
      contain(repeat(repeat(fb:en.let,6),1)) : 1
      contain(repeat(fb:en.let,6)) : 1
      repeat(fb:en.let,1) : 1
      contain(repeat(fb:en.let,1)) : 1
      repeat(fb:en.let,6) : 1
      fb:en.any : 1
  Line 2: the first 3 characters are digits, 
    Top prediction: repeat(repeat(fb:en.let,3),1)
    All 15 derivations and their counts: 
      repeat(fb:en.any,3) : 1
      fb:en.num : 1
      repeat(fb:en.any,1,3) : 1
      repeat(fb:en.let,1,3) : 1
      repeat(fb:en.num,1) : 1
      repeat(repeat(fb:en.any,3),1) : 1
      repeat(fb:en.any,1) : 1
      repeat(fb:en.num,3) : 1
      fb:en.let : 1
      repeat(fb:en.num,1,3) : 1
      repeat(fb:en.let,1) : 1
      repeat(fb:en.let,3) : 1
      repeat(repeat(fb:en.num,3),1) : 1
      fb:en.any : 1
      repeat(repeat(fb:en.let,3),1) : 1
  Line 3: the last 2 also, 
    Top prediction: 
  Line 4: but the character 4 should be a <M0>.
    Top prediction: fb:en.let
    All 4 derivations and their counts: 
      repeat(fb:en.const,4) : 1
      fb:en.let : 1
      fb:en.any : 1
      fb:en.const : 1
=======================================================
Test on utterance 96:
  Line 0: I want a regular expression that validates a string of length 1 which has either the characters <M0> or <M1> (case insensitive) at the Begin
    Top prediction: repeat(fb:en.any,1)
    All 102 derivations and their counts: 
      repeat(repeat(contain(or(fb:en.const,fb:en.const)),1),1) : 2
      repeat(or(fb:en.const,fb:en.const),1) : 4
      repeat(contain(fb:en.any),1) : 2
      repeat(repeat(or(fb:en.const,contain(fb:en.const)),1),1) : 1
      or(fb:en.const,repeat(fb:en.const,1)) : 2
      repeat(contain(or(fb:en.const,fb:en.const)),1) : 4
      repeat(or(fb:en.any,fb:en.const),1) : 2
      or(fb:en.const,fb:en.let) : 1
      repeat(repeat(contain(or(fb:en.any,fb:en.const)),1),1) : 1
      repeat(contain(or(fb:en.let,fb:en.const)),1) : 2
      or(repeat(contain(fb:en.let),1),fb:en.const) : 2
      repeat(or(fb:en.const,repeat(contain(fb:en.any),1)),1) : 1
      repeat(repeat(or(fb:en.const,fb:en.any),1),1) : 1
      repeat(or(fb:en.const,repeat(contain(fb:en.const),1)),1) : 1
      or(repeat(repeat(contain(fb:en.any),1),1),fb:en.const) : 1
      or(fb:en.const,repeat(repeat(fb:en.const,1),1)) : 1
      repeat(repeat(or(fb:en.any,fb:en.const),1),1) : 1
      or(fb:en.const,repeat(repeat(contain(fb:en.let),1),1)) : 1
      repeat(repeat(contain(fb:en.let),1),1) : 1
      repeat(or(contain(fb:en.let),fb:en.const),1) : 2
      or(fb:en.const,repeat(contain(fb:en.let),1)) : 2
      or(fb:en.const,contain(fb:en.const)) : 1
      or(fb:en.const,repeat(fb:en.any,1)) : 3
      repeat(repeat(or(contain(fb:en.const),fb:en.const),1),1) : 1
      repeat(or(fb:en.const,fb:en.any),1) : 2
      or(repeat(fb:en.const,1),fb:en.const) : 2
      contain(fb:en.any) : 1
      repeat(or(fb:en.const,repeat(fb:en.let,1)),1) : 1
      repeat(repeat(or(fb:en.const,fb:en.const),1),1) : 2
      repeat(or(repeat(contain(fb:en.any),1),fb:en.const),1) : 1
      or(fb:en.const,repeat(contain(fb:en.const),1)) : 2
      or(fb:en.let,fb:en.const) : 1
      repeat(repeat(or(fb:en.const,contain(fb:en.any)),1),1) : 1
      or(fb:en.const,repeat(repeat(contain(fb:en.any),1),1)) : 1
      or(repeat(contain(fb:en.any),1),fb:en.const) : 2
      repeat(repeat(or(fb:en.const,fb:en.let),1),1) : 1
      or(repeat(repeat(fb:en.let,1),1),fb:en.const) : 1
      or(fb:en.const,fb:en.any) : 2
      contain(or(fb:en.let,fb:en.const)) : 1
      repeat(or(fb:en.const,contain(fb:en.any)),1) : 2
      repeat(or(fb:en.const,fb:en.let),1) : 2
      or(fb:en.const,repeat(repeat(fb:en.let,1),1)) : 1
      or(fb:en.const,contain(fb:en.any)) : 1
      repeat(or(fb:en.let,fb:en.const),1) : 2
      contain(fb:en.let) : 1
      or(fb:en.const,repeat(contain(fb:en.any),1)) : 2
      repeat(or(repeat(fb:en.const,1),fb:en.const),1) : 1
      repeat(contain(fb:en.const),1) : 4
      repeat(repeat(contain(fb:en.any),1),1) : 1
      or(repeat(repeat(fb:en.const,1),1),fb:en.const) : 1
      fb:en.const : 2
      repeat(or(repeat(fb:en.any,1),fb:en.const),1) : 1
      or(repeat(repeat(contain(fb:en.const),1),1),fb:en.const) : 1
      repeat(or(fb:en.const,contain(fb:en.let)),1) : 2
      repeat(or(repeat(contain(fb:en.let),1),fb:en.const),1) : 1
      or(repeat(fb:en.any,1),fb:en.const) : 3
      repeat(repeat(contain(or(fb:en.const,fb:en.any)),1),1) : 1
      or(contain(fb:en.any),fb:en.const) : 1
      repeat(contain(fb:en.let),1) : 2
      repeat(contain(or(fb:en.const,fb:en.any)),1) : 2
      repeat(repeat(or(fb:en.let,fb:en.const),1),1) : 1
      repeat(repeat(fb:en.let,1),1) : 1
      or(fb:en.const,contain(fb:en.let)) : 1
      contain(or(fb:en.const,fb:en.const)) : 2
      or(contain(fb:en.const),fb:en.const) : 1
      repeat(contain(or(fb:en.any,fb:en.const)),1) : 2
      repeat(or(repeat(contain(fb:en.const),1),fb:en.const),1) : 1
      repeat(or(fb:en.const,repeat(fb:en.any,1)),1) : 1
      repeat(repeat(contain(or(fb:en.let,fb:en.const)),1),1) : 1
      contain(or(fb:en.const,fb:en.any)) : 1
      repeat(fb:en.any,1) : 3
      repeat(repeat(fb:en.const,1),1) : 2
      or(fb:en.const,repeat(repeat(fb:en.any,1),1)) : 1
      or(fb:en.const,repeat(fb:en.let,1)) : 2
      repeat(repeat(or(fb:en.const,contain(fb:en.let)),1),1) : 1
      repeat(repeat(or(contain(fb:en.any),fb:en.const),1),1) : 1
      or(contain(fb:en.let),fb:en.const) : 1
      fb:en.any : 2
      repeat(or(fb:en.const,repeat(contain(fb:en.let),1)),1) : 1
      repeat(or(fb:en.const,contain(fb:en.const)),1) : 2
      repeat(repeat(contain(or(fb:en.const,fb:en.let)),1),1) : 1
      repeat(fb:en.const,1) : 4
      repeat(or(repeat(fb:en.let,1),fb:en.const),1) : 1
      fb:en.let : 1
      contain(or(fb:en.const,fb:en.let)) : 1
      contain(or(fb:en.any,fb:en.const)) : 1
      or(fb:en.const,repeat(repeat(contain(fb:en.const),1),1)) : 1
      or(fb:en.const,fb:en.const) : 2
      repeat(repeat(or(contain(fb:en.let),fb:en.const),1),1) : 1
      repeat(fb:en.let,1) : 2
      or(repeat(contain(fb:en.const),1),fb:en.const) : 2
      repeat(or(contain(fb:en.const),fb:en.const),1) : 2
      repeat(contain(or(fb:en.const,fb:en.let)),1) : 2
      or(fb:en.any,fb:en.const) : 2
      contain(fb:en.const) : 2
      repeat(repeat(fb:en.any,1),1) : 1
      repeat(repeat(contain(fb:en.const),1),1) : 2
      repeat(or(fb:en.const,repeat(fb:en.const,1)),1) : 1
      or(repeat(repeat(contain(fb:en.let),1),1),fb:en.const) : 1
      repeat(or(contain(fb:en.any),fb:en.const),1) : 2
      or(repeat(fb:en.let,1),fb:en.const) : 2
      or(repeat(repeat(fb:en.any,1),1),fb:en.const) : 1
=======================================================
Test on utterance 97:
  Line 0: start and finish with a <M0> sign and can contain any number of characters in-between.
    Top prediction: endwith(contain(and(contain(fb:en.any),fb:en.const)))
derivSize == beamSize
    All 147 derivations and their counts: 
      and(contain(fb:en.let),contain(fb:en.const)) : 1
      and(contain(fb:en.num),endwith(fb:en.const)) : 1
      endwith(and(contain(fb:en.any),contain(fb:en.const))) : 2
      endwith(contain(fb:en.const)) : 1
      endwith(and(contain(fb:en.const),fb:en.let)) : 1
      and(contain(fb:en.const),contain(fb:en.num)) : 1
      startwith(endwith(and(contain(fb:en.const),fb:en.num))) : 1
      contain(and(contain(fb:en.any),fb:en.const)) : 2
      startwith(endwith(and(contain(fb:en.const),contain(fb:en.num)))) : 1
      startwith(endwith(contain(and(contain(fb:en.any),fb:en.const)))) : 2
      startwith(endwith(and(fb:en.let,contain(fb:en.const)))) : 1
      and(endwith(fb:en.const),contain(fb:en.num)) : 1
      fb:en.num : 1
      startwith(endwith(contain(and(fb:en.const,fb:en.num)))) : 1
      and(contain(fb:en.let),endwith(contain(fb:en.const))) : 1
      endwith(and(fb:en.const,fb:en.num)) : 1
      contain(and(fb:en.any,fb:en.const)) : 2
      and(endwith(fb:en.const),fb:en.any) : 2
      and(contain(fb:en.any),endwith(contain(fb:en.const))) : 2
      and(endwith(contain(fb:en.const)),fb:en.let) : 1
      endwith(and(fb:en.let,contain(fb:en.const))) : 1
      startwith(endwith(contain(fb:en.num))) : 1
      endwith(contain(and(fb:en.const,fb:en.num))) : 1
      contain(and(fb:en.const,contain(fb:en.any))) : 2
      endwith(and(contain(fb:en.const),contain(fb:en.let))) : 1
      and(fb:en.num,fb:en.const) : 1
      and(fb:en.any,contain(fb:en.const)) : 2
      startwith(endwith(contain(and(fb:en.let,fb:en.const)))) : 1
      and(contain(fb:en.any),endwith(fb:en.const)) : 2
      startwith(endwith(and(contain(fb:en.const),contain(fb:en.let)))) : 1
      endwith(contain(and(contain(fb:en.let),fb:en.const))) : 1
      endwith(contain(fb:en.num)) : 2
      and(fb:en.const,contain(fb:en.let)) : 1
      endwith(and(fb:en.const,contain(fb:en.num))) : 1
      and(endwith(contain(fb:en.const)),fb:en.num) : 1
      startwith(endwith(contain(and(fb:en.const,contain(fb:en.let))))) : 1
      and(fb:en.const,contain(fb:en.num)) : 1
      and(contain(fb:en.num),endwith(contain(fb:en.const))) : 1
      and(fb:en.any,fb:en.const) : 2
      contain(fb:en.any) : 4
      and(contain(fb:en.const),fb:en.any) : 2
      endwith(contain(and(contain(fb:en.any),fb:en.const))) : 2
      endwith(and(contain(fb:en.let),fb:en.const)) : 1
      endwith(contain(and(fb:en.const,contain(fb:en.let)))) : 1
      endwith(contain(and(fb:en.num,fb:en.const))) : 1
      startwith(endwith(contain(and(fb:en.const,fb:en.any)))) : 2
      and(endwith(contain(fb:en.const)),contain(fb:en.num)) : 1
      startwith(endwith(contain(and(fb:en.const,contain(fb:en.num))))) : 1
      endwith(contain(and(fb:en.const,contain(fb:en.any)))) : 2
      endwith(fb:en.const) : 1
      startwith(endwith(and(contain(fb:en.num),contain(fb:en.const)))) : 1
      endwith(contain(and(fb:en.let,fb:en.const))) : 1
      contain(and(fb:en.const,fb:en.let)) : 1
      contain(and(fb:en.const,contain(fb:en.let))) : 1
      contain(fb:en.num) : 2
      contain(and(fb:en.const,contain(fb:en.num))) : 1
      and(contain(fb:en.any),contain(fb:en.const)) : 2
      endwith(and(fb:en.any,fb:en.const)) : 2
      contain(and(fb:en.const,fb:en.num)) : 1
      startwith(endwith(contain(contain(fb:en.let)))) : 1
      endwith(and(contain(fb:en.num),fb:en.const)) : 1
      and(fb:en.num,contain(fb:en.const)) : 1
      endwith(and(contain(fb:en.const),fb:en.any)) : 2
      startwith(endwith(and(fb:en.num,contain(fb:en.const)))) : 1
      contain(fb:en.let) : 2
      endwith(and(fb:en.let,fb:en.const)) : 1
      startwith(endwith(contain(and(fb:en.const,fb:en.let)))) : 1
      contain(contain(fb:en.let)) : 1
      endwith(contain(contain(fb:en.num))) : 1
      startwith(endwith(contain(and(fb:en.const,contain(fb:en.any))))) : 2
      startwith(endwith(contain(and(fb:en.num,fb:en.const)))) : 1
      fb:en.const : 1
      contain(contain(fb:en.any)) : 2
      and(contain(fb:en.num),fb:en.const) : 1
      and(contain(fb:en.let),endwith(fb:en.const)) : 1
      and(endwith(fb:en.const),contain(fb:en.any)) : 2
      endwith(contain(contain(fb:en.let))) : 1
      and(endwith(fb:en.const),fb:en.num) : 1
      startwith(endwith(contain(fb:en.any))) : 1
      and(contain(fb:en.num),contain(fb:en.const)) : 1
      startwith(endwith(contain(contain(fb:en.any)))) : 2
      and(fb:en.any,endwith(contain(fb:en.const))) : 2
      startwith(endwith(and(contain(fb:en.const),fb:en.any))) : 1
      and(endwith(fb:en.const),fb:en.let) : 1
      endwith(and(fb:en.const,contain(fb:en.any))) : 2
      and(fb:en.let,endwith(contain(fb:en.const))) : 1
      startwith(endwith(contain(fb:en.const))) : 1
      and(endwith(contain(fb:en.const)),fb:en.any) : 2
      and(contain(fb:en.const),fb:en.let) : 1
      startwith(endwith(and(contain(fb:en.let),contain(fb:en.const)))) : 1
      and(contain(fb:en.const),fb:en.num) : 1
      endwith(and(contain(fb:en.const),fb:en.num)) : 1
      contain(and(fb:en.const,fb:en.any)) : 2
      contain(and(fb:en.num,fb:en.const)) : 1
      and(fb:en.const,contain(fb:en.any)) : 2
      endwith(and(fb:en.const,contain(fb:en.let))) : 1
      startwith(endwith(contain(and(fb:en.any,fb:en.const)))) : 2
      endwith(and(contain(fb:en.const),contain(fb:en.num))) : 1
      startwith(endwith(and(contain(fb:en.const),contain(fb:en.any)))) : 2
      contain(contain(fb:en.num)) : 1
      and(fb:en.const,fb:en.num) : 1
      startwith(endwith(contain(and(contain(fb:en.num),fb:en.const)))) : 1
      endwith(and(fb:en.num,contain(fb:en.const))) : 1
      and(fb:en.let,endwith(fb:en.const)) : 1
      endwith(contain(and(fb:en.const,fb:en.let))) : 1
      and(fb:en.const,fb:en.let) : 1
      and(fb:en.any,endwith(fb:en.const)) : 2
      endwith(fb:en.num) : 1
      endwith(contain(and(fb:en.any,fb:en.const))) : 2
      endwith(and(contain(fb:en.let),contain(fb:en.const))) : 1
      fb:en.any : 2
      endwith(fb:en.let) : 1
      endwith(contain(fb:en.let)) : 2
      endwith(and(fb:en.any,contain(fb:en.const))) : 2
      endwith(and(contain(fb:en.const),contain(fb:en.any))) : 2
      and(fb:en.const,fb:en.any) : 2
      endwith(and(contain(fb:en.any),fb:en.const)) : 2
      startwith(endwith(and(contain(fb:en.any),contain(fb:en.const)))) : 2
      fb:en.let : 1
      endwith(and(fb:en.const,fb:en.any)) : 2
      and(fb:en.let,fb:en.const) : 1
      and(fb:en.let,contain(fb:en.const)) : 1
      endwith(contain(contain(fb:en.any))) : 2
      and(contain(fb:en.any),fb:en.const) : 2
      and(endwith(contain(fb:en.const)),contain(fb:en.any)) : 2
      and(endwith(fb:en.const),contain(fb:en.let)) : 1
      and(contain(fb:en.let),fb:en.const) : 1
      and(endwith(contain(fb:en.const)),contain(fb:en.let)) : 1
      contain(fb:en.const) : 1
      endwith(and(fb:en.const,fb:en.let)) : 1
      contain(and(contain(fb:en.num),fb:en.const)) : 1
      endwith(contain(and(contain(fb:en.num),fb:en.const))) : 1
      endwith(and(fb:en.num,fb:en.const)) : 1
      contain(and(fb:en.let,fb:en.const)) : 1
      startwith(endwith(contain(contain(fb:en.num)))) : 1
      endwith(contain(and(fb:en.const,contain(fb:en.num)))) : 1
      endwith(and(contain(fb:en.num),contain(fb:en.const))) : 1
      endwith(contain(fb:en.any)) : 4
      and(fb:en.num,endwith(fb:en.const)) : 1
      and(fb:en.num,endwith(contain(fb:en.const))) : 1
      startwith(endwith(contain(and(contain(fb:en.let),fb:en.const)))) : 1
      and(contain(fb:en.const),contain(fb:en.any)) : 2
      contain(and(contain(fb:en.let),fb:en.const)) : 1
      endwith(fb:en.any) : 2
      startwith(endwith(and(fb:en.any,contain(fb:en.const)))) : 1
      and(contain(fb:en.const),contain(fb:en.let)) : 1
      endwith(contain(and(fb:en.const,fb:en.any))) : 2
=======================================================
Test on utterance 98:
  Line 0: I need to validate a range of x-y. 
    Top prediction: 
  Line 1: The numbers for x and y can't start with 0. 
    Top prediction: not(fb:en.num)
    All 2 derivations and their counts: 
      fb:en.num : 1
      not(fb:en.num) : 1
  Line 2: The numbers for x and y can be 1 digit to 6 digits in length. 
    Top prediction: and(repeat(repeat(fb:en.num,6),1),fb:en.num)
    All 20 derivations and their counts: 
      and(repeat(repeat(fb:en.num,1),6),fb:en.num) : 1
      fb:en.num : 3
      and(fb:en.num,fb:en.num) : 4
      repeat(fb:en.num,1) : 3
      repeat(and(fb:en.num,fb:en.num),6) : 2
      repeat(and(repeat(fb:en.num,1),fb:en.num),6) : 1
      repeat(repeat(fb:en.num,1),6) : 1
      and(repeat(fb:en.num,1),fb:en.num) : 2
      repeat(repeat(fb:en.num,6),1) : 2
      and(fb:en.num,repeat(repeat(fb:en.num,6),1)) : 2
      repeat(and(fb:en.num,repeat(fb:en.num,1)),6) : 1
      and(fb:en.num,repeat(repeat(fb:en.num,1),6)) : 1
      and(fb:en.num,repeat(fb:en.num,1,6)) : 1
      repeat(fb:en.num,1,6) : 1
      and(repeat(fb:en.num,1,6),fb:en.num) : 1
      and(repeat(repeat(fb:en.num,6),1),fb:en.num) : 2
      and(fb:en.num,repeat(fb:en.num,6)) : 2
      and(fb:en.num,repeat(fb:en.num,1)) : 2
      and(repeat(fb:en.num,6),fb:en.num) : 2
      repeat(fb:en.num,6) : 3
  Line 3: No other characters other than numbers and one <M0> between them allowed.
    Top prediction: not(fb:en.let)
    All 38 derivations and their counts: 
      and(fb:en.const,not(fb:en.let)) : 1
      and(fb:en.any,fb:en.const) : 1
      and(not(fb:en.num),fb:en.const) : 1
      and(fb:en.const,fb:en.any) : 1
      and(not(fb:en.let),fb:en.const) : 1
      repeat(fb:en.const,1) : 1
      and(repeat(fb:en.const,1),not(fb:en.let)) : 1
      not(fb:en.any) : 1
      not(and(fb:en.num,fb:en.const)) : 1
      fb:en.let : 1
      and(not(fb:en.num),repeat(fb:en.const,1)) : 1
      and(fb:en.num,repeat(fb:en.const,1)) : 1
      and(fb:en.let,fb:en.const) : 1
      and(not(fb:en.let),repeat(fb:en.const,1)) : 1
      and(repeat(fb:en.const,1),not(fb:en.any)) : 1
      not(and(repeat(fb:en.const,1),fb:en.num)) : 1
      and(not(fb:en.any),fb:en.const) : 1
      and(repeat(fb:en.const,1),fb:en.let) : 1
      and(repeat(fb:en.const,1),fb:en.num) : 1
      not(and(fb:en.num,repeat(fb:en.const,1))) : 1
      not(fb:en.let) : 1
      not(repeat(fb:en.const,1)) : 1
      fb:en.num : 1
      not(fb:en.const) : 1
      and(fb:en.any,repeat(fb:en.const,1)) : 1
      not(fb:en.num) : 1
      and(repeat(fb:en.const,1),fb:en.any) : 1
      and(fb:en.const,not(fb:en.any)) : 1
      and(fb:en.const,fb:en.num) : 1
      and(fb:en.num,fb:en.const) : 1
      and(fb:en.const,fb:en.let) : 1
      and(fb:en.const,not(fb:en.num)) : 1
      and(fb:en.let,repeat(fb:en.const,1)) : 1
      not(and(fb:en.const,fb:en.num)) : 1
      and(repeat(fb:en.const,1),not(fb:en.num)) : 1
      and(not(fb:en.any),repeat(fb:en.const,1)) : 1
      fb:en.any : 1
      fb:en.const : 1
=======================================================
Test on utterance 99:
  Line 0: I need a regular expression that has the following constraints:
    Top prediction: 
  Line 1: Contains only [ A-Z 0-9 . *] characters
    Top prediction: repeat(fb:en.let,1,)
    All 8 derivations and their counts: 
      repeat(fb:en.let,1,) : 1
      contain(repeat(fb:en.let,1,)) : 1
      contain(fb:en.any) : 1
      contain(repeat(fb:en.any,1,)) : 1
      fb:en.let : 1
      fb:en.any : 1
      contain(fb:en.let) : 1
      repeat(fb:en.any,1,) : 1
  Line 2: Is 1 to 15 characters in length
    Top prediction: repeat(repeat(fb:en.let,15),1)
    All 10 derivations and their counts: 
      repeat(repeat(fb:en.any,15),1) : 1
      repeat(fb:en.any,1,15) : 1
      repeat(fb:en.let,1) : 1
      repeat(repeat(fb:en.let,15),1) : 1
      repeat(fb:en.any,1) : 1
      repeat(fb:en.any,15) : 1
      repeat(fb:en.let,15) : 1
      fb:en.let : 1
      fb:en.any : 1
      repeat(fb:en.let,1,15) : 1
  Line 3: Must contain a <M0> but only once.
    Top prediction: contain(fb:en.const)
    All 2 derivations and their counts: 
      fb:en.const : 1
      contain(fb:en.const) : 1
=======================================================
Test on utterance 100:
  Line 0: The string must be 9 characters long, starting with <M0> (case insensitive eg <M1>, <M2>, <M3> and <M4>) followed by 6 numbers.
    Top prediction: and(followedby(fb:en.const,repeat(fb:en.num,6)),fb:en.any)
derivSize == beamSize
    All 58 derivations and their counts: 
      followedby(fb:en.any,and(fb:en.let,fb:en.const)) : 1
      followedby(fb:en.any,startwith(fb:en.const)) : 5
      followedby(fb:en.any,repeat(contain(fb:en.const),9)) : 5
      followedby(fb:en.any,startwith(and(contain(fb:en.const),fb:en.const))) : 4
      followedby(fb:en.any,and(fb:en.const,repeat(startwith(fb:en.const),9))) : 4
      followedby(fb:en.any,repeat(startwith(and(fb:en.const,contain(fb:en.const))),9)) : 4
      followedby(fb:en.any,fb:en.any) : 1
      followedby(fb:en.any,and(repeat(startwith(contain(fb:en.const)),9),fb:en.const)) : 4
      followedby(fb:en.any,repeat(and(startwith(contain(fb:en.const)),fb:en.const),9)) : 4
      followedby(fb:en.any,and(fb:en.const,repeat(startwith(contain(fb:en.const)),9))) : 4
      followedby(fb:en.any,repeat(and(fb:en.const,startwith(contain(fb:en.const))),9)) : 4
      followedby(fb:en.any,startwith(contain(fb:en.const))) : 5
      followedby(fb:en.any,repeat(and(fb:en.const,fb:en.let),9)) : 1
      followedby(fb:en.any,and(fb:en.const,fb:en.let)) : 1
      followedby(fb:en.any,and(fb:en.const,fb:en.any)) : 1
      followedby(fb:en.any,startwith(and(fb:en.const,fb:en.const))) : 8
      followedby(fb:en.any,repeat(fb:en.let,9)) : 1
      followedby(fb:en.any,and(fb:en.const,repeat(fb:en.const,9))) : 4
      followedby(fb:en.any,and(repeat(contain(fb:en.const),9),fb:en.const)) : 4
      followedby(fb:en.any,and(fb:en.const,startwith(fb:en.const))) : 4
      followedby(fb:en.any,and(fb:en.any,fb:en.const)) : 1
      followedby(fb:en.any,and(fb:en.const,startwith(contain(fb:en.const)))) : 4
      followedby(fb:en.any,and(fb:en.const,repeat(contain(fb:en.const),9))) : 4
      followedby(fb:en.any,and(fb:en.const,repeat(fb:en.let,9))) : 1
      and(fb:en.any,followedby(fb:en.const,fb:en.num)) : 1
      followedby(fb:en.any,startwith(contain(and(fb:en.const,fb:en.const)))) : 8
      followedby(fb:en.any,and(startwith(contain(fb:en.const)),fb:en.const)) : 4
      followedby(fb:en.any,repeat(and(fb:en.const,contain(fb:en.const)),9)) : 4
      and(fb:en.any,fb:en.const) : 1
      and(fb:en.const,fb:en.any) : 1
      followedby(fb:en.any,startwith(and(fb:en.const,contain(fb:en.const)))) : 4
      and(fb:en.any,followedby(fb:en.const,repeat(fb:en.num,6))) : 1
      followedby(fb:en.any,repeat(startwith(contain(and(fb:en.const,fb:en.const))),9)) : 8
      followedby(fb:en.any,contain(and(fb:en.const,fb:en.const))) : 8
      and(followedby(fb:en.const,repeat(fb:en.num,6)),fb:en.any) : 1
      followedby(fb:en.any,repeat(startwith(contain(fb:en.const)),9)) : 5
      followedby(fb:en.any,repeat(fb:en.const,9)) : 5
      followedby(fb:en.any,repeat(and(contain(fb:en.const),fb:en.const),9)) : 4
      followedby(fb:en.any,repeat(and(fb:en.const,fb:en.const),9)) : 8
      followedby(fb:en.any,repeat(and(fb:en.const,fb:en.any),9)) : 1
      followedby(fb:en.any,repeat(fb:en.any,9)) : 1
      followedby(fb:en.any,and(repeat(fb:en.let,9),fb:en.const)) : 1
      and(followedby(fb:en.const,fb:en.num),fb:en.any) : 1
      followedby(fb:en.any,repeat(contain(and(fb:en.const,fb:en.const)),9)) : 8
      followedby(fb:en.any,and(repeat(fb:en.const,9),fb:en.const)) : 4
      followedby(fb:en.any,contain(fb:en.const)) : 4
      followedby(fb:en.any,repeat(and(fb:en.any,fb:en.const),9)) : 1
      followedby(fb:en.any,repeat(and(fb:en.const,startwith(fb:en.const)),9)) : 4
      followedby(fb:en.any,repeat(and(fb:en.let,fb:en.const),9)) : 1
      followedby(fb:en.any,and(repeat(fb:en.any,9),fb:en.const)) : 1
      followedby(fb:en.any,and(startwith(fb:en.const),fb:en.const)) : 4
      followedby(fb:en.any,repeat(startwith(and(contain(fb:en.const),fb:en.const)),9)) : 4
      followedby(fb:en.any,repeat(startwith(fb:en.const),9)) : 5
      followedby(fb:en.any,repeat(and(startwith(fb:en.const),fb:en.const),9)) : 4
      followedby(fb:en.any,fb:en.let) : 1
      followedby(fb:en.any,and(repeat(startwith(fb:en.const),9),fb:en.const)) : 4
      followedby(fb:en.any,and(fb:en.const,repeat(fb:en.any,9))) : 1
      followedby(fb:en.any,repeat(startwith(and(fb:en.const,fb:en.const)),9)) : 8
=======================================================
Test on utterance 101:
  Line 0: The first character should be a designated character like <M0>, <M1> or <M2> only. 
    Top prediction: repeat(or(fb:en.const,fb:en.let),1)
    All 22 derivations and their counts: 
      repeat(or(fb:en.const,fb:en.any),1) : 2
      or(repeat(fb:en.const,1),fb:en.const) : 2
      repeat(or(fb:en.const,fb:en.const),1) : 4
      repeat(fb:en.const,1) : 3
      repeat(fb:en.any,1) : 2
      repeat(or(fb:en.let,fb:en.const),1) : 2
      fb:en.let : 2
      or(repeat(fb:en.any,1),fb:en.const) : 2
      or(fb:en.let,fb:en.const) : 2
      or(fb:en.const,repeat(fb:en.const,1)) : 2
      or(fb:en.const,repeat(fb:en.let,1)) : 2
      or(fb:en.const,fb:en.const) : 4
      repeat(fb:en.let,1) : 2
      or(fb:en.const,fb:en.any) : 2
      or(fb:en.any,fb:en.const) : 2
      repeat(or(fb:en.any,fb:en.const),1) : 2
      or(fb:en.const,fb:en.let) : 2
      repeat(or(fb:en.const,fb:en.let),1) : 2
      fb:en.any : 2
      fb:en.const : 3
      or(repeat(fb:en.let,1),fb:en.const) : 2
      or(fb:en.const,repeat(fb:en.any,1)) : 2
  Line 1: and the next 3 characters should be numbers.
    Top prediction: repeat(fb:en.let,3)
    All 6 derivations and their counts: 
      repeat(fb:en.any,3) : 1
      fb:en.num : 1
      repeat(fb:en.let,3) : 1
      repeat(fb:en.num,3) : 1
      fb:en.let : 1
      fb:en.any : 1
=======================================================
Test on utterance 102:
  Line 0: I have one field that is meant to allow a 1 - 3 character string. 
    Top prediction: contain(repeat(repeat(repeat(fb:en.let,3),1),1))
    All 40 derivations and their counts: 
      contain(repeat(fb:en.any,3)) : 2
      contain(repeat(fb:en.any,1)) : 4
      repeat(fb:en.let,1,3) : 2
      contain(fb:en.any) : 2
      contain(repeat(repeat(fb:en.let,1,3),1)) : 1
      repeat(repeat(fb:en.any,3),1) : 4
      repeat(repeat(fb:en.let,3),1,1) : 1
      contain(repeat(repeat(fb:en.any,1,3),1)) : 2
      repeat(fb:en.let,1,1) : 1
      fb:en.let : 1
      contain(repeat(repeat(fb:en.let,3),1)) : 2
      repeat(repeat(fb:en.any,3),1,1) : 2
      contain(repeat(repeat(fb:en.any,1),1)) : 2
      contain(repeat(repeat(fb:en.any,3),1,1)) : 2
      repeat(fb:en.let,1) : 2
      contain(repeat(fb:en.let,3)) : 1
      repeat(fb:en.let,3) : 1
      contain(repeat(fb:en.let,1)) : 2
      repeat(repeat(fb:en.let,1),1) : 1
      contain(repeat(repeat(repeat(fb:en.let,3),1),1)) : 1
      repeat(repeat(fb:en.any,1),1) : 2
      repeat(fb:en.any,3) : 2
      repeat(fb:en.any,1,1) : 2
      contain(repeat(repeat(repeat(fb:en.any,3),1),1)) : 2
      repeat(fb:en.any,1,3) : 4
      repeat(fb:en.any,1) : 4
      contain(repeat(repeat(fb:en.any,3),1)) : 4
      contain(repeat(repeat(fb:en.let,1),1)) : 1
      contain(fb:en.let) : 1
      repeat(repeat(fb:en.any,1,3),1) : 2
      repeat(repeat(repeat(fb:en.any,3),1),1) : 2
      contain(repeat(fb:en.let,1,3)) : 2
      repeat(repeat(fb:en.let,1,3),1) : 1
      contain(repeat(fb:en.let,1,1)) : 1
      repeat(repeat(repeat(fb:en.let,3),1),1) : 1
      contain(repeat(fb:en.any,1,3)) : 4
      contain(repeat(fb:en.any,1,1)) : 2
      fb:en.any : 2
      contain(repeat(repeat(fb:en.let,3),1,1)) : 1
      repeat(repeat(fb:en.let,3),1) : 2
  Line 1: The first character has got to be <M0>, <M1>, <M2> or <M3> and may optionally be followed by upto 2 characters.
    Top prediction: repeat(or(and(repeat(fb:en.let,2),fb:en.const),fb:en.let),1)
derivSize == beamSize
    All 152 derivations and their counts: 
      repeat(and(or(fb:en.const,fb:en.let),fb:en.let),1) : 1
      repeat(followedby(fb:en.let,repeat(fb:en.any,2)),1) : 1
      repeat(and(repeat(fb:en.let,2),or(fb:en.const,fb:en.let)),1) : 1
      repeat(and(or(fb:en.const,fb:en.any),repeat(fb:en.let,2)),1) : 1
      repeat(followedby(fb:en.any,contain(or(fb:en.const,fb:en.const))),1) : 6
      repeat(and(fb:en.let,or(fb:en.const,fb:en.let)),1) : 1
      repeat(and(or(fb:en.any,fb:en.const),fb:en.let),1) : 1
      repeat(or(and(fb:en.const,repeat(fb:en.any,2)),fb:en.any),1) : 1
      repeat(and(fb:en.any,repeat(fb:en.any,2)),1) : 1
      repeat(contain(or(followedby(fb:en.const,repeat(fb:en.let,2)),fb:en.const)),1) : 1
      repeat(or(fb:en.any,repeat(fb:en.any,2)),1) : 1
      repeat(or(fb:en.any,fb:en.const),1) : 1
      repeat(and(or(fb:en.let,fb:en.const),fb:en.let),1) : 1
      repeat(and(repeat(fb:en.any,2),fb:en.let),1) : 1
      repeat(or(repeat(fb:en.any,2),fb:en.let),1) : 1
      repeat(followedby(or(fb:en.const,fb:en.let),repeat(fb:en.let,2)),1) : 1
      repeat(and(repeat(fb:en.let,2),or(fb:en.const,fb:en.any)),1) : 1
      repeat(followedby(or(fb:en.any,fb:en.const),repeat(fb:en.let,2)),1) : 1
      repeat(followedby(or(fb:en.const,fb:en.let),fb:en.any),1) : 1
      repeat(or(fb:en.any,and(repeat(fb:en.let,2),fb:en.const)),1) : 1
      repeat(followedby(or(fb:en.let,fb:en.const),fb:en.any),1) : 1
      repeat(or(followedby(fb:en.const,repeat(fb:en.any,2)),fb:en.any),1) : 1
      repeat(or(fb:en.any,followedby(fb:en.const,repeat(fb:en.any,2))),1) : 1
      repeat(followedby(or(fb:en.let,fb:en.const),repeat(fb:en.any,2)),1) : 1
      repeat(and(repeat(fb:en.let,2),or(fb:en.any,fb:en.const)),1) : 1
      repeat(followedby(fb:en.any,contain(fb:en.const)),1) : 4
      repeat(followedby(fb:en.let,fb:en.any),1) : 1
      repeat(or(fb:en.any,followedby(fb:en.const,repeat(fb:en.let,2))),1) : 1
      repeat(and(or(fb:en.any,fb:en.const),repeat(fb:en.let,2)),1) : 1
      repeat(followedby(or(fb:en.const,fb:en.any),fb:en.let),1) : 1
      repeat(followedby(fb:en.let,or(fb:en.const,fb:en.const)),1) : 6
      repeat(or(fb:en.let,and(repeat(fb:en.let,2),fb:en.const)),1) : 1
      repeat(or(fb:en.let,followedby(fb:en.const,repeat(fb:en.let,2))),1) : 1
      repeat(or(fb:en.let,and(fb:en.const,fb:en.let)),1) : 1
      repeat(and(fb:en.let,repeat(fb:en.let,2)),1) : 1
      repeat(and(or(fb:en.const,fb:en.any),fb:en.any),1) : 1
      repeat(or(fb:en.let,repeat(fb:en.let,2)),1) : 1
      repeat(and(fb:en.any,or(fb:en.const,fb:en.let)),1) : 1
      repeat(and(or(fb:en.let,fb:en.const),repeat(fb:en.any,2)),1) : 1
      repeat(and(repeat(fb:en.any,2),or(fb:en.const,fb:en.let)),1) : 1
      repeat(and(fb:en.let,fb:en.let),1) : 2
      repeat(followedby(or(fb:en.any,fb:en.const),fb:en.any),1) : 1
      repeat(or(and(fb:en.const,fb:en.any),fb:en.let),1) : 1
      repeat(or(followedby(fb:en.const,fb:en.let),fb:en.let),1) : 1
      repeat(or(fb:en.any,fb:en.any),1) : 2
      repeat(or(fb:en.const,fb:en.any),1) : 1
      repeat(followedby(fb:en.any,or(fb:en.const,fb:en.const)),1) : 6
      repeat(contain(or(and(fb:en.const,repeat(fb:en.any,2)),fb:en.const)),1) : 1
      repeat(or(and(fb:en.const,repeat(fb:en.let,2)),fb:en.let),1) : 1
      repeat(and(repeat(fb:en.any,2),or(fb:en.let,fb:en.const)),1) : 1
      repeat(and(or(fb:en.any,fb:en.const),repeat(fb:en.any,2)),1) : 1
      repeat(and(fb:en.let,or(fb:en.any,fb:en.const)),1) : 1
      repeat(and(fb:en.let,repeat(fb:en.any,2)),1) : 1
      repeat(followedby(fb:en.let,or(contain(fb:en.const),fb:en.const)),1) : 3
      repeat(followedby(fb:en.any,or(fb:en.const,contain(fb:en.const))),1) : 3
      repeat(or(fb:en.any,and(fb:en.const,fb:en.let)),1) : 1
      repeat(and(fb:en.let,or(fb:en.const,fb:en.any)),1) : 1
      repeat(contain(or(and(fb:en.const,repeat(fb:en.let,2)),fb:en.const)),1) : 1
      repeat(followedby(fb:en.any,repeat(fb:en.let,2)),1) : 1
      repeat(or(fb:en.let,followedby(fb:en.const,fb:en.let)),1) : 1
      repeat(or(fb:en.any,followedby(fb:en.const,fb:en.let)),1) : 1
      repeat(followedby(fb:en.let,contain(fb:en.const)),1) : 4
      repeat(followedby(or(fb:en.const,fb:en.let),repeat(fb:en.any,2)),1) : 1
      repeat(or(and(fb:en.const,repeat(fb:en.let,2)),fb:en.any),1) : 1
      repeat(or(fb:en.const,fb:en.let),1) : 1
      repeat(or(and(fb:en.const,repeat(fb:en.any,2)),fb:en.let),1) : 1
      repeat(or(repeat(fb:en.let,2),fb:en.let),1) : 1
      repeat(or(fb:en.any,and(repeat(fb:en.any,2),fb:en.const)),1) : 1
      repeat(and(fb:en.any,or(fb:en.const,fb:en.any)),1) : 1
      repeat(or(fb:en.let,fb:en.const),1) : 1
      repeat(and(repeat(fb:en.any,2),or(fb:en.any,fb:en.const)),1) : 1
      repeat(and(fb:en.any,fb:en.let),1) : 2
      repeat(or(and(fb:en.const,fb:en.any),fb:en.any),1) : 1
      repeat(or(followedby(fb:en.const,fb:en.let),fb:en.any),1) : 1
      repeat(and(or(fb:en.let,fb:en.const),repeat(fb:en.let,2)),1) : 1
      repeat(and(repeat(fb:en.any,2),or(fb:en.const,fb:en.any)),1) : 1
      repeat(followedby(fb:en.let,repeat(fb:en.let,2)),1) : 1
      repeat(and(fb:en.any,fb:en.any),1) : 2
      repeat(or(fb:en.let,and(fb:en.const,repeat(fb:en.let,2))),1) : 1
      repeat(or(repeat(fb:en.let,2),fb:en.any),1) : 1
      repeat(followedby(fb:en.any,fb:en.any),1) : 1
      repeat(and(repeat(fb:en.let,2),or(fb:en.let,fb:en.const)),1) : 1
      repeat(and(fb:en.any,or(fb:en.any,fb:en.const)),1) : 1
      repeat(and(or(fb:en.const,fb:en.any),fb:en.let),1) : 1
      repeat(and(fb:en.let,fb:en.any),1) : 2
      repeat(followedby(or(fb:en.let,fb:en.const),fb:en.let),1) : 1
      repeat(or(fb:en.any,and(fb:en.any,fb:en.const)),1) : 1
      repeat(or(and(repeat(fb:en.any,2),fb:en.const),fb:en.any),1) : 1
      repeat(and(fb:en.any,or(fb:en.let,fb:en.const)),1) : 1
      repeat(or(fb:en.any,and(fb:en.const,fb:en.any)),1) : 1
      repeat(followedby(fb:en.any,fb:en.let),1) : 1
      repeat(or(fb:en.let,and(fb:en.const,repeat(fb:en.any,2))),1) : 1
      repeat(or(fb:en.any,repeat(fb:en.let,2)),1) : 1
      repeat(followedby(or(fb:en.const,fb:en.let),fb:en.let),1) : 1
      repeat(followedby(or(fb:en.let,fb:en.const),repeat(fb:en.let,2)),1) : 1
      repeat(or(fb:en.any,followedby(fb:en.const,fb:en.any)),1) : 1
      repeat(followedby(fb:en.any,or(contain(fb:en.const),fb:en.const)),1) : 3
      repeat(and(fb:en.any,repeat(fb:en.let,2)),1) : 1
      repeat(followedby(fb:en.let,or(fb:en.const,contain(fb:en.const))),1) : 3
      repeat(followedby(or(fb:en.any,fb:en.const),fb:en.let),1) : 1
      repeat(or(fb:en.any,and(fb:en.const,repeat(fb:en.any,2))),1) : 1
      repeat(or(repeat(fb:en.any,2),fb:en.any),1) : 1
      repeat(and(or(fb:en.any,fb:en.const),fb:en.any),1) : 1
      repeat(fb:en.any,1) : 1
      repeat(and(repeat(fb:en.any,2),fb:en.any),1) : 1
      repeat(and(or(fb:en.const,fb:en.let),fb:en.any),1) : 1
      repeat(followedby(or(fb:en.const,fb:en.any),fb:en.any),1) : 1
      repeat(contain(or(and(repeat(fb:en.any,2),fb:en.const),fb:en.const)),1) : 1
      repeat(and(or(fb:en.let,fb:en.const),fb:en.any),1) : 1
      repeat(and(or(fb:en.const,fb:en.any),repeat(fb:en.any,2)),1) : 1
      repeat(or(fb:en.any,fb:en.let),1) : 2
      repeat(and(fb:en.let,or(fb:en.let,fb:en.const)),1) : 1
      repeat(followedby(or(fb:en.const,fb:en.any),repeat(fb:en.any,2)),1) : 1
      repeat(followedby(fb:en.let,fb:en.let),1) : 1
      repeat(contain(or(followedby(fb:en.const,repeat(fb:en.any,2)),fb:en.const)),1) : 1
      repeat(or(fb:en.let,repeat(fb:en.any,2)),1) : 1
      repeat(or(and(fb:en.const,fb:en.let),fb:en.let),1) : 1
      repeat(or(fb:en.let,and(fb:en.let,fb:en.const)),1) : 1
      repeat(followedby(or(fb:en.any,fb:en.const),repeat(fb:en.any,2)),1) : 1
      repeat(or(and(fb:en.let,fb:en.const),fb:en.let),1) : 1
      repeat(or(followedby(fb:en.const,repeat(fb:en.let,2)),fb:en.any),1) : 1
      repeat(and(or(fb:en.const,fb:en.let),repeat(fb:en.any,2)),1) : 1
      repeat(or(fb:en.let,followedby(fb:en.const,repeat(fb:en.any,2))),1) : 1
      repeat(followedby(fb:en.let,fb:en.const),1) : 4
      repeat(and(or(fb:en.const,fb:en.let),repeat(fb:en.let,2)),1) : 1
      repeat(fb:en.let,1) : 1
      repeat(or(fb:en.let,fb:en.any),1) : 2
      repeat(or(fb:en.let,and(repeat(fb:en.any,2),fb:en.const)),1) : 1
      repeat(or(fb:en.let,followedby(fb:en.const,fb:en.any)),1) : 1
      repeat(followedby(fb:en.any,repeat(fb:en.any,2)),1) : 1
      repeat(or(followedby(fb:en.const,repeat(fb:en.any,2)),fb:en.let),1) : 1
      repeat(or(followedby(fb:en.const,repeat(fb:en.let,2)),fb:en.let),1) : 1
      repeat(or(fb:en.any,and(fb:en.let,fb:en.const)),1) : 1
      repeat(or(and(repeat(fb:en.let,2),fb:en.const),fb:en.let),1) : 1
      repeat(followedby(fb:en.any,fb:en.const),1) : 4
      repeat(or(fb:en.any,and(fb:en.const,repeat(fb:en.let,2))),1) : 1
      repeat(and(repeat(fb:en.let,2),fb:en.let),1) : 1
      repeat(followedby(or(fb:en.const,fb:en.any),repeat(fb:en.let,2)),1) : 1
      repeat(or(followedby(fb:en.const,fb:en.any),fb:en.any),1) : 1
      repeat(or(and(fb:en.any,fb:en.const),fb:en.let),1) : 1
      repeat(or(and(fb:en.const,fb:en.let),fb:en.any),1) : 1
      repeat(and(repeat(fb:en.let,2),fb:en.any),1) : 1
      repeat(or(and(fb:en.let,fb:en.const),fb:en.any),1) : 1
      repeat(or(fb:en.let,and(fb:en.const,fb:en.any)),1) : 1
      repeat(or(and(repeat(fb:en.any,2),fb:en.const),fb:en.let),1) : 1
      repeat(or(fb:en.let,fb:en.let),1) : 2
      repeat(contain(or(and(repeat(fb:en.let,2),fb:en.const),fb:en.const)),1) : 1
      repeat(or(fb:en.let,and(fb:en.any,fb:en.const)),1) : 1
      repeat(or(and(repeat(fb:en.let,2),fb:en.const),fb:en.any),1) : 1
      repeat(followedby(fb:en.let,contain(or(fb:en.const,fb:en.const))),1) : 6
      repeat(or(followedby(fb:en.const,fb:en.any),fb:en.let),1) : 1
      repeat(or(and(fb:en.any,fb:en.const),fb:en.any),1) : 1
=======================================================
Test on utterance 103:
  Line 0: I am trying to implement regex validation for passport number. 
    Top prediction: fb:en.num
    All 1 derivations and their counts: 
      fb:en.num : 1
  Line 1: My requirement is
    Top prediction: 
  Line 2: Length should be minimum 3 characters to a maximum of 20 characters.
  Line 3: Should not be only 0 's
    Top prediction: 
=======================================================
Test on utterance 104:
  Line 0: I have a field that should accept:
    Top prediction: 
  Line 1: letters [a-zA-Z]
    Top prediction: fb:en.let
    All 1 derivations and their counts: 
      fb:en.let : 1
  Line 2: letters with numbers [a-zA-Z0-9]
    Top prediction: contain(fb:en.num)
    All 3 derivations and their counts: 
      fb:en.num : 1
      fb:en.let : 1
      contain(fb:en.num) : 1
  Line 3: no special characters
    Top prediction: fb:en.sp
    All 3 derivations and their counts: 
      fb:en.sp : 1
      fb:en.let : 1
      fb:en.any : 1
=======================================================
Test on utterance 105:
  Line 0: Requirement:
    Top prediction: 
  Line 1: First part of the string can be; Min 1 Max 6 char long. Upper case only.
    Top prediction: fb:en.any
    All 21 derivations and their counts: 
      repeat(fb:en.cap,1,6) : 2
      repeat(repeat(fb:en.cap,6),1,1) : 1
      repeat(fb:en.cap,6,) : 1
      repeat(repeat(fb:en.cap,1,6),1) : 1
      repeat(repeat(repeat(fb:en.cap,6),1,),1) : 1
      repeat(repeat(fb:en.cap,1),1,) : 1
      repeat(fb:en.cap,1,) : 2
      repeat(fb:en.any,1) : 1
      repeat(repeat(fb:en.cap,1),1) : 1
      repeat(repeat(fb:en.cap,6),1,) : 2
      repeat(repeat(fb:en.cap,1,),1) : 1
      fb:en.cap : 1
      repeat(fb:en.cap,6) : 1
      repeat(repeat(repeat(fb:en.cap,6),1),1,) : 1
      fb:en.any : 1
      repeat(repeat(fb:en.cap,1,6),1,) : 1
      repeat(repeat(repeat(fb:en.cap,6),1),1) : 1
      repeat(repeat(fb:en.cap,6),1) : 2
      repeat(repeat(fb:en.cap,6,),1) : 1
      repeat(fb:en.cap,1,1) : 1
      repeat(fb:en.cap,1) : 2
  Line 2: Second part of the string can be; Exactly 2 chars long but 00 is not accepted.
    Top prediction: not(fb:en.any)
    All 5 derivations and their counts: 
      not(repeat(fb:en.any,2)) : 1
      repeat(fb:en.any,2) : 1
      repeat(not(fb:en.any),2) : 1
      not(fb:en.any) : 1
      fb:en.any : 1
  Line 3: So all together: 
    Top prediction: 
  Line 4: It can be min 3 max 8 chars long.
    Top prediction: 
=======================================================
=======================================================
=======================SUMMARY=========================
=======================================================
Total: 105
