(rule $ROOT ($Regex) (IdentityFn))

(rule $Regex ($CC) (IdentityFn))
(rule $Regex ($OpContain $Regex) (lambda x (lambda y (call regex.RegexFunctions.contain (var y)))))
(rule $Regex ($Regex $OpAnd $Regex) (lambda x (lambda y (lambda z (call regex.RegexFunctions.and (var x) (var z))))))
(rule $Regex ($Regex $OpAnd $Regex) (lambda x (lambda y (lambda z (call regex.RegexFunctions.and (var z) (var x))))))
(rule $Regex ($OpContain $INT $Regex) (lambda x (lambda y (call regex.RegexFunctions.repeat (var x) (var y)))))
(rule $Regex ($OpNotContain $Regex) (lambda x (lambda y (call regex.RegexFunctions.not (call regex.RegexFunctions.contain (var y))))))
(rule $Regex ($OpStart $Regex) (lambda x (lambda y (call regex.RegexFunctions.startwith (var y)))))
(rule $Regex ($OpEnd $Regex) (lambda x (lambda y (call regex.RegexFunctions.endwith (var y)))))
(rule $Regex ($Regex $OpRepeat $INT) (lambda x (lambda y (lambda z (call regex.RegexFunctions.repeat (var x) (var z))))))
(rule $Regex ($OpRepeat $Regex $INT) (lambda x (lambda y (lambda z (call regex.RegexFunctions.repeat (var y) (var z))))))
(rule $Regex ($Regex $INT $OpRepeat) (lambda x (lambda y (lambda z (call regex.RegexFunctions.repeat (var x) (var y))))))
(rule $Regex ($Regex $OpFollow $Regex) (lambda x (lambda y (lambda z (call regex.RegexFunctions.followedby (var x) (var z))))))
(rule $Regex ($Regex $OpFollow $Regex) (lambda x (lambda y (lambda z (call regex.RegexFunctions.followedby (var z) (var x))))))
(rule $Regex ($OpNot $Regex) (lambda x (lambda y (call regex.RegexFunctions.not (var y)))))
(rule $Regex ($Regex $OpOr $Regex) (lambda x (lambda y (lambda z (call regex.RegexFunctions.or (var x) (var z))))))
(rule $Regex ($Regex $OpOr $Regex) (lambda x (lambda y (lambda z (call regex.RegexFunctions.or (var z) (var x))))))
(rule $Regex ($INT $Regex) (lambda x (lambda y  (call regex.RegexFunctions.repeat (var y) (var x)))))
(rule $Regex ($Ignored $Regex) (SelectFn 1))
(rule $Regex ($Regex $Ignored) (SelectFn 0))

(rule $OpContain ($LEMMA_PHRASE) (SimpleLexiconFn (type fb:type.op.contain)))
(rule $OpAnd ($LEMMA_PHRASE) (SimpleLexiconFn (type fb:type.op.and)))
(rule $OpStart ($LEMMA_PHRASE) (SimpleLexiconFn (type fb:type.op.startwith)))
(rule $OpEnd ($LEMMA_PHRASE) (SimpleLexiconFn (type fb:type.op.endwith)))
(rule $OpWord ($LEMMA_PHRASE) (SimpleLexiconFn (type fb:type.op.word)))
(rule $OpRepeat ($LEMMA_PHRASE) (SimpleLexiconFn (type fb:type.op.repeat)))
(rule $OpFollow ($LEMMA_PHRASE) (SimpleLexiconFn (type fb:type.op.followedby)))
(rule $OpNot ($LEMMA_PHRASE) (SimpleLexiconFn (type fb:type.op.not)))
(rule $OpOr ($LEMMA_PHRASE) (SimpleLexiconFn (type fb:type.op.or)))
(rule $OpNotContain ($LEMMA_PHRASE) (SimpleLexiconFn (type fb:type.op.notcontain)))


(rule $CC ($LEMMA_PHRASE) (SimpleLexiconFn (type fb:type.cc)))
(rule $INT ($PHRASE) (NumberFn))

(rule $Ignored ($PHRASE) (ConstantFn null))

